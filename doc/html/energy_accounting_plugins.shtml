<!--#include virtual="header.txt"-->

<h1><a name="top">SLURM Energy Accounting Plugin API</a></h1>

<h2> Overview</h2>
<p> This document describes SLURM energy accounting plugins and the API that
defines them. It is intended as a resource to programmers wishing to write
their own SLURM energy accounting plugins.

<p>SLURM energy accounting plugins must conform to the
SLURM Plugin API with the following specifications:

<p><span class="commandline">const char
plugin_name[]="<i>full&nbsp;text&nbsp;name</i>"</span>
<p style="margin-left:.2in">
A free-formatted ASCII text string that identifies the plugin.

<p><span class="commandline">const char
plugin_type[]="<i>major/minor</i>"</span><br>
<p style="margin-left:.2in">
The major type must be &quot;energy_accounting.&quot;
The minor type can be any suitable name
for the type of energy accounting. We currently use
<ul>
<li><b>none</b>&#151; No energy consumption data is provided.
<li><b>ipmi</b>&#151;Gets energy consumption data from the BMC using the IPMI 
interface tool.
<li><b>rapl</b>&#151;Gets energy consumption data from hardware sensors on each 
core/socket, using RAPL.
</ul>
<p>The programmer is urged to study
<span class="commandline">src/plugins/jobacct_gather/ipmi</span> and 
<span class="commandline">src/common/slurm_energy_accounting.c</span>
for a sample implementation of a SLURM energy accounting plugin.
<p class="footer"><a href="#top">top</a>

<h2>API Functions</h2>
<p>All of the following functions are required. Functions which are not
implemented must be stubbed.

<p class="commandline">int energy_accounting_p_updatenodeenergy(void)
<p style="margin-left:.2in"><b>Description</b>:<br>
Updates energy accounting data for a node.
Updates the base power of the node (base_watts) and the total energy consumption of the node 
(node_consumed_energy) from the current power of the node (current_watts).
Called by slurmd.
<p style="margin-left:.2in"><b>Arguments</b>: <br>
<span class="commandline"> None</span>
<p style="margin-left:.2in"><b>Returns</b>: <br>
<span class="commandline">SLURM_SUCCESS</span> on success, or<br>
<span class="commandline">SLURM_ERROR</span> on failure.

<p class="commandline">uint32_t energy_accounting_p_getjoules_task(struct jobacctinfo *jobacct)
<p style="margin-left:.2in"><b>Description</b>:<br>
Returns energy consumption of a task.
Called by _get_process_data() in jobacct_gather plugins.
<p style="margin-left:.2in"><b>Arguments</b>: <br>
<span class="commandline"> jobacct</span> (input) pointer to jobacctinfo struct
for the task 
<p style="margin-left:.2in"><b>Returns</b>: <br>
Current energy consumption of task, in joules

<p class="commandline">int energy_accounting_p_getjoules_scaled(uint32_t stp_smpled_time, ListIterator itr)
<p style="margin-left:.2in"><b>Description</b>:<br>
Updates total energy consumption in jobacctinfo struct for a step by iterating 
over step's tasks ???
Called by _get_process_data() in jobacct_gather plugins.
Currently used only for debug/reporting.
<p style="margin-left:.2in"><b>Arguments</b>: <br>
TBS
<p style="margin-left:.2in"><b>Returns</b>: <br>
TBS

<p class="commandline">int energy_accounting_p_setbasewatts()
<p style="margin-left:.2in"><b>Description</b>:<br>
Sets base_watts power value for a node.
There are currently no calls to this function.
<p style="margin-left:.2in"><b>Arguments</b>: <br>
<span class="commandline"> None</span> 
<p style="margin-left:.2in"><b>Returns</b>: <br>
<span class="commandline">SLURM_SUCCESS</span> on success, or<br>
<span class="commandline">SLURM_ERROR</span> on failure.

<p class="commandline">int energy_accounting_p_readbasewatts()
<p style="margin-left:.2in"><b>Description</b>:<br>
Reads base power value for a node from base_watts.
There are currently no calls to this function.
<p style="margin-left:.2in"><b>Arguments</b>: <br>
<span class="commandline"> None</span> 
<p style="margin-left:.2in"><b>Returns</b>: <br>
<span class="commandline">SLURM_SUCCESS</span> on success, or<br>
<span class="commandline">SLURM_ERROR</span> on failure.

<p class="commandline">uint32_t energy_accounting_p_getcurrentwatts()
<p style="margin-left:.2in"><b>Description</b>:<br>
Returns current instantaneous power of a node, watts (current_watts).
Called by slurmd when a node registers.
<p style="margin-left:.2in"><b>Arguments</b>: <br>
<span class="commandline"> None</span> 
<p style="margin-left:.2in"><b>Returns</b>: <br>
Current instantaneous power of node, in watts.

<p class="commandline">uint32_t energy_accounting_p_getbasewatts()
<p style="margin-left:.2in"><b>Description</b>:<br>
Returns the base power of a node, in watts (base_watts).
Called by slurmd when a node registers.
<p style="margin-left:.2in"><b>Arguments</b>: <br>
<span class="commandline"> None</span> 
<p style="margin-left:.2in"><b>Returns</b>: <br>
Base power of node, in watts.

<p class="commandline">uint32_t energy_accounting_p_getnodeenergy(uint32_t up_time)
<p style="margin-left:.2in"><b>Description</b>:<br>
Returns total energy consumed by a node (node_consumed_energy).
Called by slurmd when a node registers.
<p style="margin-left:.2in"><b>Arguments</b>: <br>
<span class="commandline"> ???</span> 
<p style="margin-left:.2in"><b>Returns</b>: <br>
Total energy consumed by node, in joules.


<h2>Parameters</h2>
TBS

<h2>Versioning</h2>
<p> This document describes version 1 of the SLURM Energy Accounting API. Future
releases of SLURM may revise this API. A, energy accounting plugin conveys its
ability to implement a particular API version using the mechanism outlined
for SLURM plugins.</p>

<p class="footer"><a href="#top">top</a>

<p style="text-align:center;">Last modified 28 August 2012</p>

<!--#include virtual="footer.txt"-->

