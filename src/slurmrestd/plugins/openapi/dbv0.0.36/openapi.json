{
  "openapi": "3.0.3",
  "info": {
    "description": "API to access and control Slurm DB.",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService": "https://github.com/SchedMD/slurm/blob/master/DISCLAIMER",
    "contact": {
      "name": "SchedMD LLC",
      "url": "https://www.schedmd.com/",
      "email": "sales@schedmd.com"
    },
    "title": "Slurm Rest API",
    "version": "dbv0.0.36"
  },
  "tags": [
    {
      "name": "slurm",
      "description": "methods that query slurmdbd"
    },
    {
      "name": "openapi",
      "description": "methods that query for OpenAPI specifications"
    }
  ],
  "servers": [
    {
      "url": "/slurmdb/v0.0.36/"
    }
  ],
  "security": [
    {
      "user": [],
      "token": []
    }
  ],
  "paths": {
    "/job/{job_id}": {
      "get": {
        "tags": [
          "slurm"
        ],
        "operationId": "get_job",
        "summary": "get job info",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "Slurm Job ID",
            "required": true,
            "style": "label",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "job information"
          },
          "default": {
            "description": "job not found"
          }
        }
      }
    },
    "/config": {
      "get": {
        "tags": [
          "slurm"
        ],
        "operationId": "get_db_config",
        "summary": "dump all config",
        "responses": {
          "200": {
            "description": "dump config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/node_info"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/node_info"
                }
              }
            }
          },
          "default": {
            "description": "Unable to generate config"
          }
        }
      },
      "post": {
        "tags": [
          "slurm"
        ],
        "operationId": "set_db_config",
        "summary": "load all config",
        "responses": {
          "200": {
            "description": "load config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/node_info"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/node_info"
                }
              }
            }
          },
          "default": {
            "description": "Unable to set config"
          }
        }
      }
    },
    "/tres/": {
      "post": {
        "tags": [
          "slurm"
        ],
        "operationId": "update_tres",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tres"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/tres"
                }
              }
            },
            "description": "list of TRES"
          },
          "default": {
            "description": "Unable to update TRES"
          }
        },
        "summary": "get slurmdb TRES"
      },
      "get": {
        "tags": [
          "slurm"
        ],
        "operationId": "get_tres",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tres"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/tres"
                }
              }
            },
            "description": "list of TRES"
          },
          "default": {
            "description": "Unable to retrieve TRES"
          }
        },
        "summary": "get slurmdb TRES"
      }
    },
    "/qos/{qos_name}": {
      "delete": {
        "tags": [
          "slurm"
        ],
        "operationId": "delete_qos",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/qos"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/qos"
                }
              }
            },
            "description": "delete qos"
          },
          "default": {
            "description": "Unable to update TRES"
          }
        },
        "parameters": [
          {
            "name": "qos_name",
            "in": "path",
            "description": "Slurm QOS Name",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "tags": [
          "slurm"
        ],
        "operationId": "get_single_qos",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/qos"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/qos"
                }
              }
            },
            "description": "list of QOS"
          },
          "default": {
            "description": "QOS not found"
          }
        },
        "parameters": [
          {
            "name": "qos_name",
            "in": "path",
            "description": "Slurm QOS Name",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/qos/": {
      "get": {
        "tags": [
          "slurm"
        ],
        "operationId": "get_qos",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/qos"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/qos"
                }
              }
            },
            "description": "list of qos"
          },
          "default": {
            "description": "QOS not found"
          }
        },
        "summary": "get slurmdb qos"
      }
    },
    "/associations/": {
      "get": {
        "tags": [
          "slurm"
        ],
        "operationId": "get_associations",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/associations"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/associations"
                }
              }
            },
            "description": "list of associations"
          },
          "default": {
            "description": "Association not found"
          }
        },
        "summary": "get slurmdb associations"
      }
    },
    "/association/": {
      "get": {
        "tags": [
          "slurm"
        ],
        "operationId": "get_association",
        "parameters": [
          {
            "in": "query",
            "name": "cluster",
            "description": "cluster name",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "account",
            "description": "account name",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "user",
            "description": "User name",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "partition",
            "description": "Partition Name",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/diag"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/diag"
                }
              }
            },
            "description": "dictionary of associations"
          },
          "default": {
            "description": "Association not found"
          }
        },
        "summary": "get slurmdb associations"
      },
      "delete": {
        "tags": [
          "slurm"
        ],
        "operationId": "delete_association",
        "parameters": [
          {
            "in": "query",
            "name": "cluster",
            "description": "cluster name",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "account",
            "description": "account name",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "user",
            "description": "User name",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "partition",
            "description": "Partition Name",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/diag"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/diag"
                }
              }
            },
            "description": "dictionary of associations"
          }
        },
        "summary": "get slurmdb associations"
      }
    },
    "/user/{user_name}": {
      "delete": {
        "tags": [
          "slurm"
        ],
        "operationId": "delete_user",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                }
              }
            },
            "description": "delete user"
          },
          "default": {
            "description": "user not found or unable to delete user"
          }
        },
        "parameters": [
          {
            "name": "user_name",
            "in": "path",
            "description": "Slurm User Name",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "tags": [
          "slurm"
        ],
        "operationId": "get_user",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                }
              }
            },
            "description": "list of users"
          },
          "default": {
            "description": "user not found"
          }
        },
        "parameters": [
          {
            "name": "user_name",
            "in": "path",
            "description": "Slurm User Name",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/users/": {
      "post": {
        "tags": [
          "slurm"
        ],
        "operationId": "update_users",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                }
              }
            },
            "description": "update users"
          },
          "default": {
            "description": "user not found or not able to update user"
          }
        }
      },
      "get": {
        "tags": [
          "slurm"
        ],
        "operationId": "get_users",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                }
              }
            },
            "description": "list of users"
          },
          "default": {
            "description": "user not found"
          }
        }
      }
    },
    "/cluster/{cluster_name}": {
      "delete": {
        "tags": [
          "slurm"
        ],
        "operationId": "delete_cluster",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cluster"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/cluster"
                }
              }
            },
            "description": "delete cluster"
          },
          "default": {
            "description": "cluster not found"
          }
        },
        "parameters": [
          {
            "name": "cluster_name",
            "in": "path",
            "description": "Slurm cluster name",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "tags": [
          "slurm"
        ],
        "operationId": "get_cluster",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cluster"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/cluster"
                }
              }
            },
            "description": "list of cluster"
          },
          "default": {
            "description": "cluster not found"
          }
        },
        "parameters": [
          {
            "name": "cluster_name",
            "in": "path",
            "description": "Slurm cluster name",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/clusters/": {
      "get": {
        "tags": [
          "slurm"
        ],
        "operationId": "get_clusters",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/clusters"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/clusters"
                }
              }
            },
            "description": "list of clusters"
          },
          "default": {
            "description": "cluster not found"
          }
        },
        "summary": "get slurmdb clusters"
      },
      "post": {
        "tags": [
          "slurm"
        ],
        "operationId": "add_clusters",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/clusters"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/clusters"
                }
              }
            },
            "description": "list of clusters"
          },
          "default": {
            "description": "unable to add cluster"
          }
        },
        "summary": "add slurmdb clusters"
      }
    },
    "/wckey/{wckey}": {
      "delete": {
        "tags": [
          "slurm"
        ],
        "operationId": "delete_wckey",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wckey"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/wckey"
                }
              }
            },
            "description": "delete wckey"
          },
          "default": {
            "description": "unable to delete wckey"
          }
        },
        "parameters": [
          {
            "name": "wckey",
            "in": "path",
            "description": "Slurm wckey name",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "tags": [
          "slurm"
        ],
        "operationId": "get_wckey",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wckey"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/wckey"
                }
              }
            },
            "description": "list of wckey"
          },
          "default": {
            "description": "wckey not found"
          }
        },
        "parameters": [
          {
            "name": "wckey",
            "in": "path",
            "description": "Slurm wckey name",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/wckeys/": {
      "get": {
        "tags": [
          "slurm"
        ],
        "operationId": "get_wckeys",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wckeys"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/wckeys"
                }
              }
            },
            "description": "list of wckeys"
          },
          "default": {
            "description": "wckey not found"
          }
        },
        "summary": "get slurmdb wckeys"
      },
      "post": {
        "tags": [
          "slurm"
        ],
        "operationId": "add_wckeys",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wckeys"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/wckeys"
                }
              }
            },
            "description": "list of wckeys"
          },
          "default": {
            "description": "unable to add wckey"
          }
        },
        "summary": "add slurmdb wckeys"
      }
    },
    "/account/{account_name}": {
      "delete": {
        "tags": [
          "slurm"
        ],
        "operationId": "delete_account",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accounts"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/accounts"
                }
              }
            },
            "description": "delete account"
          },
          "default": {
            "description": "unable to delete account"
          }
        },
        "parameters": [
          {
            "name": "account_name",
            "in": "path",
            "description": "Slurm Account Name",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "tags": [
          "slurm"
        ],
        "operationId": "get_account",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accounts"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/accounts"
                }
              }
            },
            "description": "list of account"
          },
          "default": {
            "description": "account not found"
          }
        },
        "parameters": [
          {
            "name": "account_name",
            "in": "path",
            "description": "Slurm Account Name",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/accounts/": {
      "get": {
        "tags": [
          "slurm"
        ],
        "operationId": "get_accounts",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accounts"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/accounts"
                }
              }
            },
            "description": "list of accounts"
          },
          "default": {
            "description": "account not found"
          }
        },
        "summary": "get slurmdb accounts"
      }
    },
    "/jobs/": {
      "get": {
        "tags": [
          "slurm"
        ],
        "operationId": "get_jobs",
        "parameters": [
          {
            "in": "query",
            "name": "submit_time",
            "description": "filter by submission time\n Accepted formats:\n HH:MM[:SS] [AM|PM]\r\nMMDD[YY] or MM/DD[/YY] or MM.DD[.YY]\r\nMM/DD[/YY]-HH:MM[:SS]\r\nYYYY-MM-DD[THH:MM[:SS]]",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "start_time",
            "description": "filter by start time\n Accepted formats:\n HH:MM[:SS] [AM|PM]\r\nMMDD[YY] or MM/DD[/YY] or MM.DD[.YY]\r\nMM/DD[/YY]-HH:MM[:SS]\r\nYYYY-MM-DD[THH:MM[:SS]]",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "end_time",
            "description": "filter by end time\n Accepted formats:\n HH:MM[:SS] [AM|PM]\r\nMMDD[YY] or MM/DD[/YY] or MM.DD[.YY]\r\nMM/DD[/YY]-HH:MM[:SS]\r\nYYYY-MM-DD[THH:MM[:SS]]",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "account",
            "description": "Comma delimited list of accounts to match",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "association",
            "description": "Comma delimited list of associations to match",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "cluster",
            "description": "Comma delimited list of cluster to match",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "constraints",
            "description": "Comma delimited list of constraints to match",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "cpus_max",
            "description": "number of CPUs high range",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "cpus_min",
            "description": "number of CPUs low range",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "skip_steps",
            "description": "report job step information",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "disable_wait_for_result",
            "description": "disable waiting for result from slurmdbd",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "exit_code",
            "description": "exit code of job",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "format",
            "description": "Comma delimited list of formats to match",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "group",
            "description": "Comma delimited list of groups to match",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "job_name",
            "description": "Comma delimited list of job names to match",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "nodes_max",
            "description": "number of nodes high range",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "nodes_min",
            "description": "number of nodes low range",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "partition",
            "description": "Comma delimited list of partitions to match",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "qos",
            "description": "Comma delimited list of QOS to match",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "reason",
            "description": "Comma delimited list of job reasons to match",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "reservation",
            "description": "Comma delimited list of reservations to match",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "state",
            "description": "Comma delimited list of states to match",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "step",
            "description": "Comma delimited list of job steps to match",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "node",
            "description": "Comma delimited list of used nodes to match",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "users",
            "description": "Comma delimited list of users to match",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "wckey",
            "description": "Comma delimited list of wckeys to match",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/diag"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/diag"
                }
              }
            },
            "description": "list of jobs"
          },
          "default": {
            "description": "unable to query jobs"
          }
        },
        "summary": "get slurmdb jobs"
      }
    },
    "/diag/": {
      "get": {
        "tags": [
          "slurm"
        ],
        "operationId": "diag",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/diag"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/diag"
                }
              }
            },
            "description": "dictionary of statistics"
          },
          "default": {
            "description": "unable to query diagnostics"
          }
        },
        "summary": "get slurmdb diagnostics"
      }
    },
    "/openapi": {
      "get": {
        "tags": [
          "openapi"
        ],
        "responses": {
          "200": {
            "description": "OpenAPI Specification"
          }
        },
        "summary": "Retrieve OpenAPI Specification"
      },
      "servers": [
        {
          "url": "/"
        }
      ]
    },
    "/openapi.json": {
      "get": {
        "tags": [
          "openapi"
        ],
        "responses": {
          "200": {
            "description": "OpenAPI Specification"
          }
        },
        "summary": "Retrieve OpenAPI Specification"
      },
      "servers": [
        {
          "url": "/"
        }
      ]
    },
    "/openapi.yaml": {
      "get": {
        "tags": [
          "openapi"
        ],
        "responses": {
          "200": {
            "description": "OpenAPI Specification"
          }
        },
        "summary": "Retrieve OpenAPI Specification"
      },
      "servers": [
        {
          "url": "/"
        }
      ]
    },
    "/openapi/v3": {
      "get": {
        "tags": [
          "openapi"
        ],
        "responses": {
          "200": {
            "description": "OpenAPI Specification"
          }
        },
        "summary": "Retrieve OpenAPI Specification"
      },
      "servers": [
        {
          "url": "/"
        }
      ]
    }
  },
  "components": {
    "securitySchemes": {
      "user": {
        "type": "apiKey",
        "description": "User name",
        "name": "X-SLURM-USER-NAME",
        "in": "header"
      },
      "token": {
        "type": "apiKey",
        "description": "User access token",
        "name": "X-SLURM-USER-TOKEN",
        "in": "header"
      }
    },
    "schemas": {
      "diag": {
        "properties": {
          "errors": {
            "description": "slurm errors",
            "items": {
              "$ref": "#/components/schemas/error"
            },
            "type": "array"
          },
          "statistics": {
            "$ref": "#/components/schemas/statistics"
          }
        },
        "type": "object"
      },
      "error": {
        "properties": {
          "errno": {
            "description": "error number",
            "type": "integer"
          },
          "error": {
            "description": "error message",
            "type": "string"
          }
        },
        "type": "object"
      },
      "statistics": {
        "properties": {},
        "type": "object"
      }
    }
  }
}
