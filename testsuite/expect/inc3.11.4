
proc inc3_11_4 {} {
	global user_name exit_code res_name
	global sbatch file_in number

	# TEST 4
	# If not running as root, make a reservation restricted to root, submit a job,
	# and confirm that the job is rejected.
	#
	send_user "\n+++++ STARTING TEST 4 +++++\n"

	if {$user_name == "root"} {
		return;
	}

	# Make the reservation
	set ret_code [create_res "StartTime=now+60minutes Duration=60 NodeCnt=1 User=root" 0]
	if {$ret_code != 0} {
		send_user "\nFAILURE: Unable to create a reservation\n"
		set exit_code 1
	}

	# Submit the batch job
	set denied 0
	set sbatch_pid [spawn $sbatch -N1 --reservation=$res_name $file_in]
	expect {
		-re "Submitted batch job ($number)" {
			set job_id $expect_out(1,string)
			exec $scancel $job_id
			send_user "\nFAILURE: job submit should have been denied\n"
			set exit_code 1
			exp_continue
		}
		-re "Batch job submission failed: Access denied to requested reservation" {
			# Job was correctly denied
			set denied 1
			exp_continue
		}
		timeout {
			send_user "\nFAILURE: sbatch not responding\n"
			slow_kill $sbatch_pid
			set exit_code 1
		}
		eof {
			wait
		}
	}

	if {$denied == 0} {
		send_user "\nFAILURE: Job $job_id should have been rejected "
		send_user "from reservation restricted to root.  Expected "
		send_user "rejection message not given.\n"
		set exit_code 1
	} else {
		send_user "Expected error, no worries mate.\n"
	}
	# Delete the reservation
	set ret_code [delete_res $res_name]
	if {$ret_code != 0} {
		exit $ret_code
	}
}
