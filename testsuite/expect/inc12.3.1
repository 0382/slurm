#!/usr/bin/env expect
############################################################################
# Purpose: Test for accounting records of specific job names with their ID
############################################################################
# Copyright (C) 2012 SchedMD LLC.
# Written by Nathan Yee <nyee32@schedmd.com>
#
# This file is part of Slurm, a resource management program.
# For details, see <https://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# Slurm is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# Slurm is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with Slurm; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################
source ./globals
source ./globals_accounting

# Added verbose flag to sacct queries to troubleshoot bug 9681
proc inc12_3_1 {job_id_1 job_id_2 job_name_1 job_name_2 test_acct} {
	global sacct

	# TODO: Temporary variables to debug bug 9681 (remove once fixed)
	set username    [get_my_user_name]
	set hostname    [string trimright [run_command_output "hostname -s"]]

	log_info "Search for job ID $job_id_1 having name $job_name_1"
	set output [run_command_output -fail "$sacct -A '$test_acct' --name=$job_name_1 -X -P -o jobid -v -v"]
	# TODO: Temporarily breakup subtest to debug bug 9681 (restore once fixed)
	#subtest [regexp -line "^$job_id_1$" $output] "sacct should show job $job_id_1 as having name $job_name_1"
	if [regexp -line "^$job_id_1$" $output] {
		subpass "sacct should show job $job_id_1 as having name $job_name_1"
	} else {
		if {$hostname eq "knl2" && $username eq "jenkins"} {
			global slurm_dir
			set dbd_dict [get_config -dbd]
			set database_user [dict get $dbd_dict "StorageUser"]
			set database_host [dict get $dbd_dict "StorageHost"]
			set database_port [dict get $dbd_dict "StoragePort"]
			set database_name [dict get $dbd_dict "StorageLoc"]
			run_command "mysqldump -u $database_user -h $database_host -P $database_port $database_name > $slurm_dir/log/slurmdb.sql"
		}
		subfail "sacct should show job $job_id_1 as having name $job_name_1"
	}
	subtest {![regexp -line "^$job_id_2$" $output]} "sacct should not show job $job_id_2 as having name $job_name_1"

	log_info "Search for job ID $job_id_2 having name $job_name_2"
	set output [run_command_output -fail "$sacct -A '$test_acct' --name=$job_name_2 -X -P -o jobid -v -v"]
	subtest {![regexp -line "^$job_id_1$" $output]} "sacct should not show job $job_id_1 as having name $job_name_2"
	subtest [regexp -line "^$job_id_2$" $output] "sacct should show job $job_id_2 as having name $job_name_2"
}
