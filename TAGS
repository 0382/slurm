
src/database/mysql_common.c,1179
static char *table_defs_table table_defs_table49,2470
	char *name;name52,2540
	char *columns;columns53,2553
} db_key_t;54,2569
static void _destroy_db_key(56,2582
static int _clear_results(68,2814
static MYSQL_RES *_get_first_result(_get_first_result93,3412
static MYSQL_RES *_get_last_result(_get_last_result112,3892
static int _mysql_query_internal(133,4477
static int _mysql_make_table_current(172,5739
static int _create_db(519,14365
extern mysql_conn_t *create_mysql_conn(create_mysql_conn578,15893
extern int destroy_mysql_conn(592,16302
extern mysql_db_info_t *create_mysql_db_info(create_mysql_db_info606,16631
extern int destroy_mysql_db_info(639,17649
extern int mysql_db_get_db_connection(651,17871
extern int mysql_db_close_db_connection(711,19492
extern int mysql_db_cleanup(724,19825
extern int mysql_db_query(737,20043
extern int mysql_db_ping(751,20425
extern int mysql_db_commit(766,20761
extern int mysql_db_rollback(787,21317
extern MYSQL_RES *mysql_db_query_ret(mysql_db_query_ret809,21878
extern int mysql_db_query_check_after(834,22582
extern int mysql_db_insert_ret_id(846,22910
extern int mysql_db_create_table(864,23367

src/database/mysql_common.h,699
#define _HAVE_MYSQL_COMMON_H42,2297
	SLURM_MYSQL_PLUGIN_NOTSET,67,2724
	SLURM_MYSQL_PLUGIN_AS,68,2752
	SLURM_MYSQL_PLUGIN_JC,69,2801
} slurm_mysql_plugin_type_t;70,2839
	bool cluster_deleted;73,2886
	char *cluster_name;cluster_name74,2909
	MYSQL *db_conn;db_conn75,2930
	pthread_mutex_t lock;76,2947
	char *pre_commit_query;pre_commit_query77,2970
	bool rollback;78,2995
	List update_list;79,3011
	int conn;80,3030
} mysql_conn_t;81,3041
	char *backup;backup84,3075
	uint32_t port;85,3090
	char *host;host86,3106
	char *user;user87,3119
	char *pass;pass88,3132
} mysql_db_info_t;89,3145
	char *name;name92,3182
	char *options;options93,3195
} storage_field_t;94,3211

src/sview/admin_info.c,542
#define _DEBUG 33,1512
	SORTID_POS 36,1537
	SORTID_POS = POS_LOC,36,1537
	SORTID_PARTITION,37,1560
	SORTID_AVAIL,38,1579
	SORTID_TIMELIMIT,39,1594
	SORTID_NODES,40,1613
	SORTID_NODELIST,41,1628
	SORTID_CNT42,1646
static display_data_t display_data_admin[display_data_admin45,1662
static display_data_t options_data_admin[options_data_admin58,2158
static display_data_t *local_display_data local_display_data65,2394
extern void get_info_admin(68,2446
extern void set_menus_admin(74,2562
extern void row_clicked_admin(95,3131

src/sview/block_info.c,2790
#define _DEBUG 34,1557
	char *bg_block_name;bg_block_name37,1592
	char *slurm_part_name;slurm_part_name38,1614
	char *mp_str;mp_str39,1638
	uint16_t bg_conn_type[bg_conn_type40,1653
	uint16_t bg_node_use;41,1697
	uint16_t state;42,1720
	int size;43,1737
	int cnode_cnt;44,1748
	int cnode_err_cnt;45,1764
	GtkTreeIter iter_ptr;46,1784
	bool iter_set;47,1807
	int *mp_inx;mp_inx48,1823
	int color_inx;51,1965
	List job_list;52,1981
	int pos;53,1997
	bool printed;54,2007
	char *reason;reason55,2022
	bool small_block;56,2037
	char *imageblrts;imageblrts57,2056
	char *imagelinux;imagelinux58,2113
	char *imagemloader;imagemloader59,2170
	char *imageramdisk;imageramdisk60,2229
} sview_block_info_t;61,2288
	SORTID_POS 64,2318
	SORTID_POS = POS_LOC,64,2318
	SORTID_BLOCK,65,2341
	SORTID_COLOR,66,2356
	SORTID_COLOR_INX,67,2371
	SORTID_CONN,68,2390
	SORTID_JOB,69,2404
	SORTID_IMAGEBLRTS,70,2417
	SORTID_IMAGELINUX,72,2453
	SORTID_IMAGEMLOADER,73,2473
	SORTID_IMAGERAMDISK,74,2495
	SORTID_IMAGELINUX,76,2523
	SORTID_IMAGERAMDISK,77,2543
	SORTID_IMAGEMLOADER,78,2565
	SORTID_NODELIST,80,2594
	SORTID_NODE_CNT,81,2612
	SORTID_PARTITION,82,2630
	SORTID_REASON,83,2649
	SORTID_STATE,84,2665
	SORTID_UPDATED,85,2680
	SORTID_USE,86,2697
	SORTID_NODE_INX,87,2710
	SORTID_SMALL_BLOCK,88,2728
	SORTID_USER,89,2749
	SORTID_CNT90,2763
static char *_initial_page_opts _initial_page_opts95,2881
static display_data_t display_data_block[display_data_block98,2992
static display_data_t options_data_block[options_data_block170,6591
static display_data_t *local_display_data local_display_data191,7455
static GtkTreeModel *last_model last_model192,7505
static char *_set_running_job_str(_set_running_job_str201,7897
static void _block_info_free(227,8488
static void _block_list_del(250,9040
static int _in_slurm_partition(260,9223
static void _layout_block_record(284,9570
static void _update_block_record(384,13028
static void _append_block_record(443,15127
static void _update_info_block(452,15426
static int _sview_block_sort_aval_dec(507,16770
static void _set_block_partition(543,17616
static List _create_block_list(560,18033
void _display_info_block(714,22329
extern void refresh_block(801,24459
extern int get_new_info_block(811,24739
extern int update_state_block(864,26116
extern GtkListStore *create_model_block(create_model_block948,28414
extern void admin_edit_block(976,28969
extern void get_info_block(1012,29852
extern void specific_info_block(1186,34698
extern void set_menus_block(1409,40629
extern void popup_all_block(1449,41651
static void _process_each_block(1553,44115
extern void select_admin_block(1566,44420
static void _admin_block(1583,44888
extern void cluster_change_block(1603,45371

src/sview/common.c,3799
#define TOPO_DEBUG 34,1561
#define _DEBUG 35,1582
static bool menu_right_pressed 36,1599
	display_data_t *display_data;display_data39,1657
	void (*pfunc)pfunc40,1688
	GtkTreeView  *tree_view;tree_view41,1738
} each_t;42,1764
	GtkTreeIter iter;45,1792
	GtkTreeModel *model;model46,1811
	GtkTreeView  *treeview;treeview47,1833
} treedata_t;48,1858
static gboolean control_key_in_effect 50,1873
static gboolean enter_key_in_effect 51,1920
static int _find_node_inx 55,1968
static void _display_topology(76,2368
static void _foreach_popup_all(94,2705
static void _foreach_full_info(104,2938
static gboolean _menu_button_pressed(126,3528
static gboolean _menu_button_released(136,3726
static gboolean _frame_callback(145,3944
static void _handle_response(173,4665
static int _sort_iter_compare_func_char(195,5184
static int _sort_iter_compare_func_int(240,6262
static int _sort_iter_compare_func_nodes(258,6661
static int _xlate_mp_coord(336,8391
static int _mp_coordinate(355,8876
static int _sort_iter_compare_func_mp_list(394,9728
static void _editing_started(421,10381
static void _editing_canceled(430,10585
static void *_editing_thr(_editing_thr436,10705
static void _cell_data_func(449,10973
static void _add_col_to_treeview(487,12116
static void _toggle_state_changed(555,14357
static void _popup_state_changed(566,14594
static void _selected_page(578,14936
extern char * replspace 655,16946
extern char * replus 666,17093
extern char *delstr(delstr677,17237
extern void free_switch_nodes_maps(696,17588
extern int build_nodes_bitmap(709,17922
extern int get_topo_conf(750,18822
extern int get_row_number(807,20283
extern int find_col(826,20731
extern const char *find_col_name(find_col_name840,20942
extern void *get_pointer(get_pointer851,21165
extern void make_fields_menu(870,21625
extern void set_page_opts(923,22948
extern void make_options_menu(982,24435
extern GtkScrolledWindow *create_scrolled_window(create_scrolled_window1027,25663
extern GtkWidget *create_entry(create_entry1048,26258
extern void create_page(1057,26412
extern GtkTreeView *create_treeview(create_treeview1111,28239
extern GtkTreeView *create_treeview_2cols_attach_to_table(create_treeview_2cols_attach_to_table1140,29195
extern GtkTreeStore *create_treestore(create_treestore1192,31053
extern gboolean right_button_pressed(1280,33258
extern gboolean left_button_pressed(1315,34325
extern gboolean row_activated(1362,35714
extern gboolean key_pressed(1378,36240
extern gboolean key_released(1419,37328
extern gboolean row_clicked(1446,37932
extern popup_info_t *create_popup_info(create_popup_info1560,41632
extern void setup_popup_info(1677,45280
extern void redo_popup(1691,45603
extern void destroy_search_info(1708,46054
extern void destroy_specific_info(1720,46334
extern void destroy_popup_info(1736,46681
extern void destroy_signal_params(1774,47642
extern gboolean delete_popup(1783,47800
extern gboolean delete_popups(1804,48261
extern void *popup_thr(popup_thr1818,48531
extern void set_for_update(1865,49611
extern void remove_old(1887,50237
extern GtkWidget *create_pulldown_combo(create_pulldown_combo1913,50760
extern char *str_tolower(str_tolower1947,51752
extern char *get_reason(get_reason1958,51959
extern void display_admin_edit(2019,53557
extern void display_edit_note(2101,55957
extern void add_display_treestore_line(2121,56426
extern void add_display_treestore_line_with_font(2167,57472
extern void sview_widget_modify_bg(2216,58540
extern void sview_radio_action_set_current_value(2222,58694
extern char *page_to_str(page_to_str2262,59847
extern char *tab_pos_to_str(tab_pos_to_str2283,60170
extern char *visible_to_str(visible_to_str2300,60431
extern gboolean entry_changed(2316,60703

src/sview/config_info.c,40
extern int get_new_info_config(42,2193

src/sview/defaults.c,1160
	SORTID_POS 47,2409
	SORTID_POS = POS_LOC,47,2409
	SORTID_ADMIN,48,2432
	SORTID_BUTTON_SIZE,49,2447
	SORTID_DEFAULT_PAGE,50,2468
	SORTID_GRID_HORI,51,2490
	SORTID_GRID_VERT,52,2509
	SORTID_GRID_X_WIDTH,53,2528
	SORTID_GRID_TOPO_ORDER,54,2550
	SORTID_PAGE_VISIBLE,55,2575
	SORTID_REFRESH_DELAY,56,2597
	SORTID_RULED_TV,57,2620
	SORTID_SHOW_GRID,58,2638
	SORTID_SHOW_HIDDEN,59,2657
	SORTID_SAVE_PAGE_OPTS,60,2678
	SORTID_TAB_POS,61,2702
	SORTID_CNT62,2719
static display_data_t display_data_defaults[display_data_defaults70,2933
static int _trans_tab_pos(106,4752
static void _set_active_combo_defaults(124,5024
static const char *_set_sview_config(_set_sview_config162,5847
static void _admin_focus_toggle(295,9406
static void _admin_edit_combo_box_defaults(304,9603
static gboolean _admin_focus_out_defaults(330,10190
static void _local_display_admin_edit(354,10817
static int _write_to_file(491,14441
static void _init_sview_conf(509,14789
extern int load_defaults(542,15800
extern int save_defaults(715,21599
extern GtkListStore *create_model_defaults(create_model_defaults934,27497
extern int configure_defaults(1020,29507

src/sview/front_end_info.c,2325
#define _DEBUG 34,1594
	int color_inx;38,1703
	char *front_end_name;front_end_name39,1719
	front_end_info_t *front_end_ptr;front_end_ptr40,1742
	GtkTreeIter iter_ptr;41,1776
	bool iter_set;42,1799
	char *boot_time;boot_time43,1815
	int node_inx[node_inx44,1833
	int pos;45,1851
	char *reason;reason46,1861
	char *slurmd_start_time;slurmd_start_time47,1876
	char *state;state48,1902
} sview_front_end_info_t;49,1916
	char *node_list;node_list52,1960
} front_end_user_data_t;53,1978
	EDIT_REMOVE 56,2011
	EDIT_EDIT57,2029
	SORTID_POS 62,2110
	SORTID_POS = POS_LOC,62,2110
	SORTID_ALLOW_GROUPS,63,2133
	SORTID_ALLOW_USERS,64,2155
	SORTID_BOOT_TIME,65,2176
	SORTID_COLOR,66,2195
	SORTID_COLOR_INX,67,2210
	SORTID_DENY_GROUPS,68,2229
	SORTID_DENY_USERS,69,2250
	SORTID_NAME,70,2270
	SORTID_NODE_INX,71,2284
	SORTID_REASON,72,2302
	SORTID_SLURMD_START_TIME,73,2318
	SORTID_STATE,74,2345
	SORTID_UPDATED,75,2360
	SORTID_VERSION,76,2377
	SORTID_CNT77,2394
static char *_initial_page_opts _initial_page_opts88,2734
static display_data_t display_data_front_end[display_data_front_end90,2783
static display_data_t options_data_front_end[options_data_front_end125,4833
static display_data_t *local_display_data local_display_data136,5204
static char *got_edit_signal got_edit_signal137,5254
static GtkTreeModel *last_model last_model138,5291
static void _front_end_info_free(145,5562
static void _front_end_info_list_del(155,5847
static void _layout_front_end_record(166,6118
static void _update_front_end_record(232,8103
static void _append_front_end_record(266,9281
static void _update_info_front_end(277,9678
static List _create_front_end_info_list(321,10922
static void _display_info_front_end(427,13990
extern void refresh_front_end(505,15967
extern int get_new_info_front_end(515,16255
extern GtkListStore *create_model_front_end(create_model_front_end561,17537
extern void admin_edit_front_end(589,18070
extern void get_info_front_end(619,18914
extern void specific_info_front_end(747,22578
extern void set_menus_front_end(885,26456
extern void popup_all_front_end(928,27510
static void _process_each_front_end(990,28958
extern void select_admin_front_end(1004,29340
static void _admin_front_end(1030,30041
extern void cluster_change_front_end(1129,32788

src/sview/grid.c,2554
#define RESET_GRID 41,2225
#define TOPO_DEBUG 42,2247
List grid_button_list 44,2270
List blinking_button_list 45,2300
List multi_button_list 46,2334
char *sview_colors[sview_colors48,2366
char *blank_color blank_color53,2623
char *white_color white_color54,2654
char *topo1_color topo1_color55,2685
char *topo2_color topo2_color56,2744
int sview_colors_cnt 58,2787
	int node_inx_id;61,2832
	int color_inx_id;62,2850
	List button_list;63,2869
} grid_foreach_t;64,2888
	List button_list;67,2924
	int *coord_x;coord_x68,2943
	int *coord_y;coord_y69,2958
	int default_y_offset;70,2973
	grid_button_t *grid_button;grid_button71,2996
	int *inx;inx72,3025
	GtkTable *table;table73,3036
	int table_y;74,3054
	bool force_row_break;75,3068
} button_processor_t;76,3091
GStaticMutex blinking_mutex 78,3114
static gboolean _mouseover_node(80,3166
static gboolean _mouseoff_node(103,3798
static gboolean _open_node(116,4132
static void _open_block(129,4453
static void _add_button_signals(173,5671
static int _sort_button_inx(201,6411
void _put_button_as_down(218,6719
void _put_button_as_up(267,8296
void _put_button_as_inactive(294,9082
static bool _change_button_color(324,9992
static void _each_highlightd(385,11719
static void _each_highlight_selected(444,13152
static int _block_in_node(489,14350
static void _build_empty_node(504,14686
static void _calc_coord_3d(532,15710
static void _calc_coord_4d(542,15973
static int *_get_cluster_dims(_get_cluster_dims553,16309
static int _add_button_to_list(573,16954
static int _grid_table_by_switch(794,23487
static int _grid_table_by_list(863,25566
static int _init_button_processor(897,26531
extern void destroy_grid_button(956,28179
extern grid_button_t *create_grid_button_from_another(create_grid_button_from_another976,28764
extern char *change_grid_color(change_grid_color1067,31921
extern void change_grid_color_array(1109,33140
extern void highlight_grid(1150,34337
extern void highlight_grid_range(1191,35533
extern void set_grid_used(1225,36411
extern void get_button_list_from_main(1251,36966
extern List copy_main_button_list(1289,38047
extern void add_extra_bluegene_buttons(1311,38717
extern void add_extra_cr_buttons(1416,41652
extern void put_buttons_in_table(1424,41918
extern int update_grid_table(1516,44515
extern int get_system_stats(1586,46377
extern int setup_grid_table(1620,47305
extern void sview_init_grid(1653,48200
extern void setup_popup_grid_list(1702,49508
extern void post_setup_popup_grid_list(1719,49980

src/sview/gthread_helper.c,143
void sview_thread_init(32,1325
GThread *sview_thread_new(sview_thread_new39,1426
void sview_mutex_new(49,1673
void sview_cond_new(59,1829

src/sview/gthread_helper.h,61
#define _GTHREAD_HELPER_H27,1274
#  undef func_data32,1429

src/sview/job_info.c,5786
#define _DEBUG 42,1765
#define MAX_CANCEL_RETRY 43,1782
#define SIZE(44,1810
#define SVIEW_MAX_NODE_SPACE 50,2052
	int color_inx;55,2192
	GtkTreeIter iter_ptr;56,2208
	bool iter_set;57,2231
	uint32_t job_id;58,2247
	job_info_t *job_ptr;job_ptr59,2265
	int node_cnt;60,2287
	char *nodes;nodes61,2302
	int pos;62,2316
	bool small_block;63,2326
	List step_list;64,2345
} sview_job_info_t;65,2362
static List foreach_list 67,2383
static char *stacked_job_list stacked_job_list68,2416
	int job_id;71,2472
	int state;72,2485
	int step_id;73,2497
	int array_job_id;74,2511
	int array_task_id;75,2530
} jobs_foreach_t;76,2550
	int edit_type;79,2586
	GtkWidget *entry;entry80,2602
	job_desc_msg_t *job_msg;job_msg81,2621
	char *type;type82,2647
} jobs_foreach_common_t;83,2660
	EDIT_SIGNAL 86,2693
	EDIT_SIGNAL_USER,87,2711
	EDIT_CANCEL,88,2730
	EDIT_CANCEL_USER,89,2744
	EDIT_REQUEUE,90,2763
	EDIT_SUSPEND,91,2778
	EDIT_EDIT92,2793
	SORTID_POS 97,2874
	SORTID_POS = POS_LOC,97,2874
	SORTID_ACCOUNT,98,2897
	SORTID_ACTION,99,2914
	SORTID_ALLOC,100,2930
	SORTID_ALLOC_NODE,101,2945
	SORTID_ALPS_RESV_ID,102,2965
	SORTID_ARRAY_JOB_ID,103,2987
	SORTID_ARRAY_TASK_ID,104,3009
	SORTID_BATCH,105,3032
	SORTID_BATCH_HOST,106,3047
	SORTID_BLOCK,107,3067
	SORTID_COLOR,108,3082
	SORTID_COLOR_INX,109,3097
	SORTID_COMMAND,110,3116
	SORTID_COMMENT,111,3133
	SORTID_CONNECTION,112,3150
	SORTID_CONTIGUOUS,113,3170
	SORTID_CORE_SPEC,114,3190
	SORTID_CPUS,117,3259
	SORTID_CPU_MAX,118,3273
	SORTID_CPU_MIN,119,3290
	SORTID_CPUS_PER_TASK,120,3307
	SORTID_DEPENDENCY,121,3330
	SORTID_DERIVED_EC,122,3350
	SORTID_EXIT_CODE,123,3370
	SORTID_FEATURES,124,3389
	SORTID_GEOMETRY,125,3407
	SORTID_GRES,126,3425
	SORTID_GROUP_ID,127,3439
	SORTID_IMAGE_BLRTS,128,3457
	SORTID_IMAGE_LINUX,130,3494
	SORTID_IMAGE_MLOADER,131,3515
	SORTID_IMAGE_RAMDISK,132,3538
	SORTID_IMAGE_LINUX,134,3567
	SORTID_IMAGE_RAMDISK,135,3588
	SORTID_IMAGE_MLOADER,136,3611
	SORTID_JOBID,138,3641
	SORTID_LICENSES,139,3656
	SORTID_CPU_REQ,140,3674
	SORTID_MEM_MIN,141,3691
	SORTID_TMP_DISK,142,3708
	SORTID_NODELIST,144,3741
	SORTID_NODELIST_EXC,145,3759
	SORTID_NODELIST_REQ,146,3781
	SORTID_NAME,148,3810
	SORTID_NETWORK,149,3824
	SORTID_NICE,150,3841
	SORTID_NODELIST,152,3871
	SORTID_NODELIST_EXC,153,3889
	SORTID_NODELIST_REQ,154,3911
	SORTID_NODE_INX,156,3940
	SORTID_NODES,157,3958
	SORTID_NODES_MAX,158,3973
	SORTID_NODES_MIN,159,3992
	SORTID_PARTITION,163,4106
	SORTID_PREEMPT_TIME,164,4125
	SORTID_PRIORITY,165,4147
	SORTID_QOS,166,4165
	SORTID_REASON,167,4178
	SORTID_REQUEUE,168,4194
	SORTID_RESV_NAME,169,4211
	SORTID_RESTARTS,170,4230
	SORTID_ROTATE,171,4248
	SORTID_SHARED,172,4264
	SORTID_STATE,175,4334
	SORTID_STATE_NUM,176,4349
	SORTID_STD_ERR,177,4368
	SORTID_STD_IN,178,4385
	SORTID_STD_OUT,179,4401
	SORTID_SWITCHES,180,4418
	SORTID_TASKS,181,4436
	SORTID_TIME_ELIGIBLE,184,4505
	SORTID_TIME_END,185,4528
	SORTID_TIMELIMIT,186,4546
	SORTID_TIME_RESIZE,187,4565
	SORTID_TIME_RUNNING,188,4586
	SORTID_TIME_START,189,4608
	SORTID_TIME_SUBMIT,190,4628
	SORTID_TIME_SUSPEND,191,4649
	SORTID_SMALL_BLOCK,192,4671
	SORTID_UPDATED,193,4692
	SORTID_USER_ID,194,4709
	SORTID_WCKEY,195,4726
	SORTID_WORKDIR,196,4741
	SORTID_CNT197,4758
static char *_initial_page_opts _initial_page_opts204,4971
static display_data_t display_data_job[display_data_job208,5120
static display_data_t create_data_job[create_data_job413,16282
static display_data_t options_data_job[options_data_job427,16947
struct signv 447,17804
	char *name;name448,17819
	uint16_t val;449,17832
} sig_name_num[sig_name_num450,17847
static display_data_t *local_display_data local_display_data481,18526
static char *got_edit_signal got_edit_signal482,18576
static GtkTreeModel *last_model last_model483,18613
static char *_read_file(_read_file490,18815
static void _job_info_free(520,19339
static void _job_info_list_del(531,19583
static void _destroy_jobs_foreach(541,19783
static uint16_t _xlate_signal_name(549,19953
static int _cancel_job_id 576,20570
static int _cancel_step_id(614,21595
static void _set_active_combo_job(655,22643
static const char *_set_job_msg(_set_job_msg725,24147
static void _admin_edit_combo_box_job(1137,34382
static gboolean _admin_focus_out_job(1166,34949
static GtkWidget *_admin_full_edit_job(_admin_full_edit_job1191,35576
static int _nodes_in_list(1235,36708
static int _get_node_cnt(1243,36886
static void _convert_char_to_job_and_step(1282,38141
static void _layout_job_record(1304,38445
static void _update_job_record(1912,56766
static void _get_step_nodelist(2307,69499
static void _layout_step_record(2328,70022
static void _update_step_record(2452,73737
static void _append_job_record(2541,76605
static void _append_step_record(2550,76948
static void _update_info_step(2561,77275
static void _update_info_job(2648,79333
static int _sview_job_sort_aval_dec(2699,80659
static List _create_job_info_list(2724,81149
void _display_info_job(2853,84748
extern GtkWidget *create_job_entry(create_job_entry2997,88691
extern void refresh_job(3036,89804
extern int get_new_info_job(3046,90080
extern int get_new_info_job_step(3101,91477
extern GtkListStore *create_model_job(create_model_job3155,92938
extern void admin_edit_job(3253,95401
extern void get_info_job(3343,97674
extern void specific_info_job(3525,103326
extern void set_menus_job(3773,110240
extern void popup_all_job(3813,111258
static void process_foreach_list 3968,115005
static void selected_foreach_build_list(4097,118139
static void _edit_each_job 4155,119661
static void _edit_jobs(4241,122359
extern void admin_job(4268,123230
extern void cluster_change_job(4415,127801

src/sview/node_info.c,2457
#define _DEBUG 33,1515
#define ECLIPSE_RT 34,1532
int cpus_per_node 36,1554
int g_node_scaling 37,1577
	SORTID_POS 43,1748
	SORTID_POS = POS_LOC,43,1748
	SORTID_ARCH,44,1771
	SORTID_BASE_WATTS,45,1785
	SORTID_BOARDS,46,1805
	SORTID_BOOT_TIME,47,1821
	SORTID_COLOR,48,1840
	SORTID_CPUS,49,1855
	SORTID_CPU_LOAD,50,1869
	SORTID_CONSUMED_ENERGY,51,1887
	SORTID_CORES,52,1912
	SORTID_CURRENT_WATTS,53,1927
	SORTID_ERR_CPUS,54,1950
	SORTID_FEATURES,55,1968
	SORTID_GRES,56,1986
	SORTID_NAME,57,2000
	SORTID_NODE_ADDR,58,2014
	SORTID_NODE_HOSTNAME,59,2033
	SORTID_MEMORY,60,2056
	SORTID_REASON,61,2089
	SORTID_RACK_MP,62,2105
	SORTID_SLURMD_START_TIME,63,2122
	SORTID_SOCKETS,64,2149
	SORTID_STATE,65,2166
	SORTID_STATE_NUM,66,2181
	SORTID_THREADS,67,2200
	SORTID_DISK,68,2217
	SORTID_UPDATED,69,2245
	SORTID_USED_CPUS,70,2262
	SORTID_USED_MEMORY,71,2281
	SORTID_VERSION,72,2302
	SORTID_WEIGHT,73,2319
	SORTID_CNT74,2335
	int node_col;80,2370
	char *nodelist;nodelist81,2385
} process_node_t;82,2402
static char *_initial_page_opts _initial_page_opts86,2523
static display_data_t display_data_node[display_data_node90,2693
static display_data_t options_data_node[options_data_node161,6536
static display_data_t *local_display_data local_display_data193,7934
static GtkTreeModel *last_model last_model194,7984
static void _layout_node_record(196,8025
static void _update_node_record(423,15193
static void _append_node_record(564,19945
static void _update_info_node(573,20270
static void _node_info_free(615,21441
static void _node_info_list_del(626,21725
static void _display_info_node(636,21933
static void _selected_page(707,23705
static void _process_each_node(725,24107
extern void refresh_node(742,24534
extern List create_node_info_list(753,24860
extern int get_new_info_node(880,28371
extern int update_features_node(1023,32614
extern int update_gres_node(1113,34853
extern int update_state_node(1197,37019
extern GtkListStore *create_model_node(create_model_node1321,40453
extern void admin_edit_node(1370,41500
extern void get_info_node(1402,42308
extern void specific_info_node(1545,46792
extern void set_menus_node(1739,52113
extern void popup_all_node(1786,53312
extern void popup_all_node_name(1798,53638
extern void admin_menu_node_name(1860,55170
extern void select_admin_nodes(1885,55888
extern void admin_node_name(1930,57170
extern void cluster_change_node(1954,57963

src/sview/part_info.c,4267
#define _DEBUG 36,1638
	uint32_t cpu_alloc_cnt;41,1726
	uint32_t cpu_error_cnt;42,1751
	uint32_t cpu_idle_cnt;43,1776
	uint32_t disk_total;44,1800
	char *features;features45,1822
	hostlist_t hl;46,1839
	uint32_t mem_total;47,1855
	uint32_t node_cnt;48,1876
	List node_ptr_list;49,1896
	uint16_t node_state;50,1917
	partition_info_t* part_ptr;51,1939
	char *reason;reason52,1968
} sview_part_sub_t;53,1983
	int color_inx;57,2095
	GtkTreeIter iter_ptr;58,2111
	bool iter_set;59,2134
	char *part_name;part_name60,2150
	partition_info_t* part_ptr;63,2256
	int pos;64,2285
	List sub_list;65,2295
	sview_part_sub_t sub_part_total;66,2311
} sview_part_info_t;67,2345
	EDIT_PART_STATE 70,2374
	EDIT_REMOVE_PART,71,2396
	EDIT_EDIT72,2415
	SORTID_POS 77,2496
	SORTID_POS = POS_LOC,77,2496
	SORTID_ALLOW_ACCOUNTS,78,2519
	SORTID_ALLOW_GROUPS,79,2543
	SORTID_ALLOW_QOS,80,2565
	SORTID_ALTERNATE,81,2584
	SORTID_COLOR,82,2603
	SORTID_COLOR_INX,83,2618
	SORTID_CPUS,84,2637
	SORTID_DEFAULT,85,2651
	SORTID_DENY_ACCOUNTS,86,2668
	SORTID_DENY_QOS,87,2691
	SORTID_FEATURES,88,2709
	SORTID_GRACE_TIME,89,2727
	SORTID_HIDDEN,90,2747
	SORTID_JOB_SIZE,91,2763
	SORTID_MAX_CPUS_PER_NODE,92,2781
	SORTID_MEM,93,2808
	SORTID_NODELIST,95,2836
	SORTID_NODES_ALLOWED,96,2854
	SORTID_NAME,98,2884
	SORTID_NODELIST,100,2914
	SORTID_NODES_ALLOWED,101,2932
	SORTID_NODE_INX,103,2962
	SORTID_NODE_STATE,104,2980
	SORTID_NODE_STATE_NUM,105,3000
	SORTID_NODES,106,3024
	SORTID_NODES_MAX,107,3039
	SORTID_NODES_MIN,108,3058
	SORTID_ONLY_LINE,109,3077
	SORTID_PART_STATE,110,3096
	SORTID_PREEMPT_MODE,111,3116
	SORTID_PRIORITY,112,3138
	SORTID_REASON,113,3156
	SORTID_ROOT,114,3172
	SORTID_SHARE,115,3186
	SORTID_TMP_DISK,116,3201
	SORTID_TIMELIMIT,117,3219
	SORTID_UPDATED,118,3238
	SORTID_CNT119,3255
static char *_initial_page_opts _initial_page_opts124,3373
static display_data_t display_data_part[display_data_part127,3486
static display_data_t create_data_part[create_data_part208,7973
static display_data_t options_data_part[options_data_part264,11145
static display_data_t *local_display_data local_display_data307,12849
static char *got_edit_signal got_edit_signal308,12899
static char *got_features_edit_signal got_features_edit_signal309,12936
static GtkTreeModel *last_model last_model310,12982
static int _build_min_max_32_string(319,13296
static void _set_active_combo_part(340,13913
static uint16_t _set_part_share_popup(432,15858
static const char *_set_part_msg(_set_part_msg478,17085
static void _admin_edit_combo_box_part(679,22444
static gboolean _admin_focus_out_part(708,23038
static GtkWidget *_admin_full_edit_part(_admin_full_edit_part733,23679
static void _subdivide_part(777,24816
static void _layout_part_record(882,27256
static void _update_part_record(1134,33379
static void _update_part_sub_record(1332,39218
static void _append_part_record(1437,42371
static void _append_part_sub_record(1446,42696
static void _update_info_part(1457,43046
static void _part_info_free(1498,44190
static void _part_info_list_del(1507,44400
static void _destroy_part_sub(1517,44608
static void _update_sview_part_sub(1532,44993
static sview_part_sub_t *_create_sview_part_sub(_create_sview_part_sub1605,47298
static int _insert_sview_part_sub(1631,47952
static int _sview_part_sort_aval_dec(1659,48680
static int _sview_sub_part_sort(1684,49237
static List _create_part_info_list(1701,49603
static void _display_info_part(1823,53077
static void _process_each_partition(1902,55001
extern GtkWidget *create_part_entry(create_part_entry1918,55375
extern bool check_part_includes_node(1962,56509
extern void refresh_part(2007,57573
extern bool visible_part(2018,57852
extern int get_new_info_part(2039,58346
static GtkListStore *_create_model_part2(_create_model_part22096,59832
extern GtkListStore *create_model_part(create_model_part2179,62709
extern void admin_edit_part(2292,66113
extern void get_info_part(2368,68154
extern void specific_info_part(2531,73058
extern void set_menus_part(2726,78474
extern void popup_all_part(2766,79492
extern void select_admin_partitions(2900,82877
extern void admin_part(2919,83391
extern void cluster_change_part(3089,88549

src/sview/popups.c,694
void *_refresh_thr(_refresh_thr43,2323
static gboolean _delete_popup(55,2568
void _search_entry(64,2771
static GtkTreeStore *_local_create_treestore_2cols(_local_create_treestore_2cols189,5982
static void _gtk_print_key_pairs(215,6705
static void _layout_conf_ctl(238,7346
static void _layout_conf_dbd(278,8655
extern void create_config_popup(376,12359
extern void create_dbconfig_popup(402,13069
extern void create_daemon_popup(430,13743
extern void create_create_popup(492,15231
extern void create_search_popup(649,19935
extern void change_refresh_popup(861,27081
extern void change_grid_popup(924,28969
extern void about_popup(1052,33596
extern void usage_popup(1092,34561

src/sview/resv_info.c,2488
#define _DEBUG 33,1522
	int color_inx;37,1631
	GtkTreeIter iter_ptr;38,1647
	bool iter_set;39,1670
	int pos;40,1686
	char *resv_name;resv_name41,1696
	reserve_info_t *resv_ptr;resv_ptr42,1714
} sview_resv_info_t;43,1741
	EDIT_REMOVE 46,1770
	EDIT_EDIT47,1788
	SORTID_POS 52,1869
	SORTID_POS = POS_LOC,52,1869
	SORTID_ACCOUNTS,53,1892
	SORTID_ACTION,54,1910
	SORTID_COLOR,55,1926
	SORTID_COLOR_INX,56,1941
	SORTID_DURATION,57,1960
	SORTID_FEATURES,58,1978
	SORTID_FLAGS,59,1996
	SORTID_LICENSES,60,2011
	SORTID_NAME,61,2029
	SORTID_NODE_CNT,62,2043
	SORTID_NODELIST,63,2061
	SORTID_NODE_INX,64,2079
	SORTID_PARTITION,65,2097
	SORTID_TIME_END,66,2116
	SORTID_TIME_START,67,2134
	SORTID_UPDATED,68,2154
	SORTID_USERS,69,2171
	SORTID_CNT70,2186
static char *_initial_page_opts _initial_page_opts81,2526
static display_data_t display_data_resv[display_data_resv84,2613
static display_data_t create_data_resv[create_data_resv129,4878
static display_data_t options_data_resv[options_data_resv164,6452
static display_data_t *local_display_data local_display_data182,7157
static char *got_edit_signal got_edit_signal183,7207
static GtkTreeModel *last_model last_model184,7244
static uint32_t _parse_flags(195,7680
static void _set_active_combo_resv(283,9862
static const char *_set_resv_msg(_set_resv_msg313,10411
static void _resv_info_free(424,12949
static void _resv_info_list_del(431,13082
static void _admin_edit_combo_box_resv(441,13290
static gboolean _admin_focus_out_resv(472,13866
static GtkWidget *_admin_full_edit_resv(_admin_full_edit_resv496,14506
static void _layout_resv_record(540,15641
static void _update_resv_record(619,18061
static void _append_resv_record(667,19638
static void _update_info_resv(676,19983
static int _sview_resv_sort_aval_dec(719,21174
static List _create_resv_info_list(745,21749
static void _display_info_resv(810,23369
extern GtkWidget *create_resv_entry(create_resv_entry889,25291
extern void refresh_resv(933,26424
extern int get_new_info_resv(943,26702
extern GtkListStore *create_model_resv(create_model_resv990,27909
extern void admin_edit_resv(1016,28470
extern void get_info_resv(1091,30391
extern void specific_info_resv(1224,34247
extern void set_menus_resv(1382,38491
extern void popup_all_resv(1422,39509
static void _process_each_resv(1516,41846
extern void select_admin_resv(1529,42154
static void _admin_resv(1546,42618
extern void cluster_change_resv(1664,45783

src/sview/submit_info.c,549
#define _DEBUG 32,1453
	SORTID_POS 35,1478
	SORTID_POS = POS_LOC,35,1478
	SORTID_PARTITION,36,1501
	SORTID_AVAIL,37,1520
	SORTID_TIMELIMIT,38,1535
	SORTID_NODES,39,1554
	SORTID_NODELIST,40,1569
	SORTID_CNT41,1587
static display_data_t display_data_submit[display_data_submit44,1603
static display_data_t options_data_submit[options_data_submit58,2101
static display_data_t *local_display_data local_display_data65,2338
extern void get_info_submit(67,2389
extern void set_menus_submit(73,2506
extern void row_clicked_submit(97,3149

src/sview/sview.c,3663
#define _DEBUG 42,2215
#define MAX_RETRIES 43,2232
	GtkTable *table;table46,2303
	int page_num;47,2321
} page_thr_t;48,2336
sview_config_t default_sview_config;53,2441
sview_config_t working_sview_config;54,2478
int adding 55,2515
int fini 56,2531
int grid_init 57,2545
bool toggled 58,2564
bool force_refresh 59,2586
bool apply_hidden_change 60,2614
bool apply_partition_check 61,2647
List popup_list 62,2683
List signal_params_list 63,2707
int page_running 64,2739
bool global_entry_changed 65,2762
bool global_send_update_msg 66,2793
bool global_edit_error 67,2826
int global_error_code 68,2854
int global_row_count 69,2881
bool global_multi_error 70,2907
gint last_event_x 71,2936
gint last_event_y 72,2959
int sview_max_cpus 73,2982
GdkCursor* in_process_cursor;74,3006
gchar *global_edit_error_msg global_edit_error_msg75,3036
GtkWidget *main_notebook main_notebook76,3073
GtkWidget *main_statusbar main_statusbar77,3106
GtkWidget *main_window main_window78,3140
GtkWidget *grid_window grid_window79,3171
GtkTable *main_grid_table main_grid_table80,3202
GMutex *sview_mutex sview_mutex81,3236
GMutex *grid_mutex grid_mutex82,3264
GCond *grid_cond grid_cond83,3291
uint32_t cluster_flags;84,3316
int cluster_dims;85,3340
List cluster_list 86,3358
switch_record_bitmaps_t *g_switch_nodes_maps g_switch_nodes_maps87,3384
popup_pos_t popup_pos;88,3437
block_info_msg_t *g_block_info_ptr g_block_info_ptr90,3461
front_end_info_msg_t *g_front_end_info_ptr;g_front_end_info_ptr91,3504
job_info_msg_t *g_job_info_ptr g_job_info_ptr92,3548
node_info_msg_t *g_node_info_ptr g_node_info_ptr93,3587
partition_info_msg_t *g_part_info_ptr g_part_info_ptr94,3628
reserve_info_msg_t *g_resv_info_ptr g_resv_info_ptr95,3674
slurm_ctl_conf_info_msg_t *g_ctl_info_ptr g_ctl_info_ptr96,3718
job_step_info_response_msg_t *g_step_info_ptr g_step_info_ptr97,3768
topo_info_response_msg_t *g_topo_info_msg_ptr g_topo_info_msg_ptr98,3822
static GtkActionGroup *admin_action_group admin_action_group100,3877
static GtkActionGroup *menu_action_group menu_action_group101,3927
static bool debug_inited 102,3976
static char *orig_cluster_name orig_cluster_name103,4006
static int g_menu_id 104,4045
static GtkUIManager *g_ui_manager g_ui_manager105,4071
static GtkToggleActionEntry *debug_actions debug_actions106,4113
static int debug_action_entries 107,4164
display_data_t main_display_data[main_display_data117,4387
void *_page_thr(_page_thr170,6156
void *_grid_init_thr(_grid_init_thr233,7618
static void _page_switched(271,8475
static void _set_admin_mode(341,10369
static void _set_grid(360,10926
static void _set_hidden(373,11185
static void _set_page_opts(399,11814
static void _set_topogrid(417,12241
static void _set_ruled(444,12816
static void _reconfigure(471,13382
static void _get_current_debug(484,13666
static void _get_current_debug_flags(505,14351
static void _set_debug(530,15183
static void _set_flags(555,15874
static void _tab_pos(584,16535
static void _init_pages(593,16790
static void _persist_dynamics(603,16980
static gboolean _delete(617,17209
static char *_get_ui_description(_get_ui_description650,17827
static GtkWidget *_get_menubar_menu(_get_menubar_menu759,21272
void *_popup_thr_main(_popup_thr_main1033,31769
static void _get_info_tabs(1039,31838
extern void _change_cluster_main(1080,32799
static GtkWidget *_create_cluster_combo(_create_cluster_combo1304,39038
extern void refresh_main(1371,40847
extern void toggle_tab_visiblity(1380,41138
extern void tab_pressed(1418,42102
extern void close_tab(1434,42622
int main(1445,42962

src/sview/sview.h,6087
#define _SVIEW_H29,1411
#  define _GNU_SOURCE32,1449
#define OPT_LONG_HELP	80,2482
#define OPT_LONG_USAGE	81,2510
#define OPT_LONG_HIDE	82,2539
#define POS_LOC 84,2568
#define DEFAULT_ENTRY_LENGTH 85,2586
#define MAKE_TOPO_1 87,2620
#define MAKE_TOPO_2 88,2643
#define MAKE_INIT 89,2666
#define MAKE_DOWN 90,2687
#define MAKE_BLACK 91,2708
#define MAKE_WHITE 92,2730
#define EXTRA_BASE 94,2753
#define EXTRA_FLAGS 95,2784
#define EXTRA_NODES 96,2815
enum { JOB_PAGE,98,2847
       PART_PAGE,99,2864
       RESV_PAGE,100,2882
       BLOCK_PAGE,101,2900
       NODE_PAGE,102,2919
       FRONT_END_PAGE,103,2937
       SUBMIT_PAGE,104,2960
       ADMIN_PAGE,105,2980
       INFO_PAGE,106,2999
       TAB_PAGE,107,3017
       PAGE_CNT108,3034
enum { TAB_CLICKED,110,3053
       ROW_LEFT_CLICKED,111,3073
       ROW_CLICKED,112,3098
       FULL_CLICKED,113,3118
       POPUP_CLICKED114,3139
enum { ERROR_VIEW,117,3164
       INFO_VIEW118,3183
enum { STATUS_ADMIN_MODE,121,3204
       STATUS_REFRESH,122,3230
       STATUS_ADMIN_EDIT123,3253
enum { DISPLAY_NAME,126,3282
       DISPLAY_VALUE,127,3303
       DISPLAY_FONT128,3325
enum { EDIT_NONE,131,3349
       EDIT_ARRAY,132,3367
       EDIT_MODEL,133,3386
       EDIT_TEXTBOX,134,3405
       EDIT_COLOR135,3426
typedef struct display_data display_data_t;139,3492
typedef struct specific_info specific_info_t;140,3536
typedef struct popup_info popup_info_t;141,3582
typedef struct popup_positioner popup_positioner_t;142,3622
	       CREATE_BATCH_JOB 145,3690
	       CREATE_PARTITION,146,3720
	       CREATE_RESERVATION,147,3746
	       SEARCH_JOB_ID 148,3774
	       SEARCH_JOB_USER,149,3802
	       SEARCH_JOB_STATE,150,3827
	       SEARCH_BLOCK_NAME,151,3853
	       SEARCH_BLOCK_NODENAME,152,3880
	       SEARCH_BLOCK_SIZE,153,3911
	       SEARCH_BLOCK_STATE,154,3938
	       SEARCH_PARTITION_NAME,155,3966
	       SEARCH_PARTITION_STATE,156,3997
	       SEARCH_NODE_NAME,157,4029
	       SEARCH_NODE_STATE,158,4055
	       SEARCH_RESERVATION_NAME,159,4082
} sview_search_type_t;160,4115
	uint32_t x;163,4156
	uint32_t y;164,4169
	int cntr;165,4182
	int slider;166,4193
} popup_pos_t;167,4206
	char *nodes;nodes170,4240
	bitstr_t *node_bitmap;node_bitmap171,4254
} switch_record_bitmaps_t;172,4278
	List col_list;175,4323
	bool def_col_list;176,4339
	display_data_t *display_data;display_data177,4359
	char *page_name;page_name178,4390
} page_opts_t;179,4408
	GtkToggleAction *action_admin;action_admin183,4464
	GtkToggleAction *action_grid;action_grid184,4496
	GtkToggleAction *action_hidden;action_hidden185,4527
	GtkToggleAction *action_page_opts;action_page_opts186,4560
	GtkToggleAction *action_gridtopo;action_gridtopo187,4596
	GtkToggleAction *action_ruled;action_ruled188,4631
	GtkRadioAction *action_tab;action_tab189,4663
	uint16_t button_size;190,4692
	uint16_t gap_size;191,4715
	bool admin_mode;192,4735
	uint16_t default_page;193,4753
	uint32_t fi_popup_width;194,4777
	uint32_t fi_popup_height;195,4803
	uint32_t grid_hori;196,4830
	bool grid_topological;197,4851
	uint32_t grid_vert;198,4875
	uint32_t grid_x_width;199,4896
	uint32_t main_width;200,4920
	uint32_t main_height;201,4942
	GtkWidget *page_check_widget[page_check_widget202,4965
	page_opts_t page_opts[page_opts203,5006
	bool page_visible[page_visible204,5040
	uint16_t refresh_delay;205,5070
	bool ruled_treeview;206,5095
	bool show_grid;207,5117
	bool show_hidden;208,5134
	bool save_page_opts;209,5153
	uint16_t tab_pos;210,5175
} sview_config_t;211,5194
struct display_data 213,5213
	GType type;214,5235
	int id;215,5248
	char *name;name216,5257
	bool show;217,5270
	uint32_t extra;218,5282
	void (*refresh)refresh219,5299
	GtkListStore *(*create_model)create_model220,5361
	void (*admin_edit)admin_edit221,5403
	void (*get_info)get_info225,5539
	void (*specific)specific226,5609
	void (*set_menu)set_menu227,5657
	gpointer user_data;229,5740
	gpointer button_list;230,5761
struct popup_positioner 233,5788
	int id;234,5814
	char *name;name235,5823
	uint32_t width;236,5836
	uint32_t height;237,5853
	sview_search_type_t search_type;241,5892
	gchar *gchar_data;gchar_data242,5926
	int  int_data;243,5946
	int  int_data2;244,5962
} sview_search_info_t;245,5979
struct specific_info 247,6003
	int type;248,6026
	int view;249,6063
	sview_search_info_t *search_info;search_info250,6074
	char *title;title251,6109
	GtkWidget *display_widget;display_widget252,6123
struct popup_info 255,6155
	display_data_t *display_data;display_data256,6175
	GtkWidget *event_box;event_box257,6206
	int force_refresh;258,6229
	int full_grid;259,6249
	List grid_button_list;260,6265
	List multi_button_list;261,6289
	GtkTable *grid_table;grid_table262,6314
	GtkTreeIter iter;263,6337
	GtkTreeModel *model;model264,6356
	int *node_inx;node_inx265,6378
	int node_inx_id;266,6394
	bool not_found;267,6412
	GtkWidget *popup;popup268,6429
	int *running;running269,6448
	int show_grid;270,6463
	specific_info_t *spec_info;spec_info271,6479
	GtkTable *table;table272,6508
	int toggled;273,6526
	int type;274,6540
	GtkWidget *button;button278,6590
	List button_list;279,6610
	char *color;color282,6754
	int color_inx;283,6768
	int inx;284,6784
	GtkStateType last_state;285,6794
	char *node_name;node_name286,6820
	int state;287,6838
	GtkTable *table;table288,6850
	int table_x;289,6868
	int table_y;290,6882
	GtkTooltips *tip;tip292,6921
	bool used;294,6947
} grid_button_t;295,6959
	char *boot_time;boot_time298,6994
	char *color;color299,7012
	GtkTreeIter iter_ptr;300,7026
	bool iter_set;301,7049
	char *node_name;node_name302,7065
	node_info_t *node_ptr;node_ptr303,7083
	int pos;304,7107
	char *reason;reason305,7117
	char *rack_mp;rack_mp306,7132
	char *slurmd_start_time;slurmd_start_time307,7148
} sview_node_info_t;308,7174
	display_data_t *display_data;display_data311,7213
	List *button_list;button_list312,7244
} signal_params_t;313,7264

src/common/arg_desc.c,69
arg_count(51,2426
arg_idx_by_name(65,2572
arg_name_by_idx(83,2851

src/common/arg_desc.h,116
#define __ARG_DESC_H__38,2081
typedef struct _arg_desc 85,3390
    char *name;name86,3417
} arg_desc_t;87,3433

src/common/assoc_mgr.c,3692
#define ASSOC_USAGE_VERSION 50,2407
slurmdb_association_rec_t *assoc_mgr_root_assoc assoc_mgr_root_assoc52,2438
uint32_t g_qos_max_priority 53,2494
uint32_t g_qos_count 54,2527
List assoc_mgr_association_list 55,2553
List assoc_mgr_res_list 56,2593
List assoc_mgr_qos_list 57,2625
List assoc_mgr_user_list 58,2657
List assoc_mgr_wckey_list 59,2690
static char *assoc_mgr_cluster_name assoc_mgr_cluster_name61,2725
static int setup_children 62,2769
static assoc_mgr_lock_flags_t assoc_mgr_locks;63,2800
static assoc_init_args_t init_setup;64,2847
static pthread_mutex_t locks_mutex 66,2885
static pthread_cond_t locks_cond 67,2949
static void _normalize_assoc_shares(70,3073
static int _addto_used_info(91,3661
static int _clear_used_assoc_info(111,4356
static void _clear_qos_user_limit_info(131,4878
static int _clear_used_qos_info(158,5543
static int _change_user_name(181,6132
static int _grab_parents_qos(230,7317
static int _local_update_assoc_qos_list(258,7993
static void _set_user_default_acct(321,9689
static void _set_user_default_wckey(349,10499
static int _set_assoc_parent_and_user(378,11326
static void _set_qos_norm_priority(509,15130
static int _post_association_list(523,15537
static int _post_user_list(575,16847
static int _post_wckey_list(600,17480
static int _post_qos_list(624,18034
static int _post_res_list(663,18924
static int _get_assoc_mgr_association_list(703,19953
static int _get_assoc_mgr_res_list(757,21528
static int _get_assoc_mgr_qos_list(801,22662
static int _get_assoc_mgr_user_list(828,23313
static int _get_assoc_mgr_wckey_list(861,24095
static int _refresh_assoc_mgr_association_list(914,25565
static int _refresh_assoc_mgr_res_list(1000,27945
static int _refresh_assoc_mgr_qos_list(1046,29100
static int _refresh_assoc_mgr_user_list(1077,29803
static int _refresh_assoc_wckey_list(1112,30632
static void _wr_rdlock(1154,31811
static void _wr_rdunlock(1174,32401
static void _wr_wrlock(1185,32765
static void _wr_wrunlock(1207,33459
extern int assoc_mgr_init(1217,33761
extern int assoc_mgr_fini(1299,36201
extern void assoc_mgr_lock(1332,37033
extern void assoc_mgr_unlock(1360,37684
extern assoc_mgr_association_usage_t *create_assoc_mgr_association_usage(create_assoc_mgr_association_usage1388,38357
extern void destroy_assoc_mgr_association_usage(1402,38703
extern assoc_mgr_qos_usage_t *create_assoc_mgr_qos_usage(create_assoc_mgr_qos_usage1416,38993
extern void destroy_assoc_mgr_qos_usage(1424,39147
extern int assoc_mgr_get_user_assocs(1439,39436
extern int assoc_mgr_fill_in_assoc(1493,40839
extern int assoc_mgr_fill_in_user(1726,47873
extern int assoc_mgr_fill_in_qos(1796,49738
extern int assoc_mgr_fill_in_wckey(1904,53201
extern slurmdb_admin_level_t assoc_mgr_get_admin_level(2070,57317
extern bool assoc_mgr_is_user_acct_coord(2102,58089
extern List assoc_mgr_get_shares(2152,59160
extern int assoc_mgr_update(2324,63465
extern int assoc_mgr_update_assocs(2384,64942
extern int assoc_mgr_update_wckeys(2799,75835
extern int assoc_mgr_update_users(2919,78528
extern int assoc_mgr_update_qos(3038,81205
extern int assoc_mgr_update_res(3347,89211
extern int assoc_mgr_validate_assoc_id(3489,92657
extern void assoc_mgr_clear_used_info(3528,93743
static void _reset_children_usages(3556,94462
extern void assoc_mgr_remove_assoc_usage(3576,94923
extern void assoc_mgr_remove_qos_usage(3621,96149
extern int dump_assoc_mgr_state(3632,96364
extern int load_assoc_usage(3881,103407
extern int load_qos_usage(3987,106185
extern int load_assoc_mgr_state(4086,108672
extern int assoc_mgr_refresh_lists(4261,113536
extern int assoc_mgr_set_missing_uids(4295,114582

src/common/assoc_mgr.h,2371
#define _SLURM_ASSOC_MGR_H41,2244
#define ASSOC_MGR_CACHE_ASSOC 55,2566
#define ASSOC_MGR_CACHE_QOS 56,2603
#define ASSOC_MGR_CACHE_USER 57,2640
#define ASSOC_MGR_CACHE_WCKEY 58,2677
#define ASSOC_MGR_CACHE_RES 59,2714
#define ASSOC_MGR_CACHE_ALL 60,2751
	lock_level_t assoc;64,2827
	lock_level_t file;65,2848
	lock_level_t qos;66,2868
	lock_level_t res;67,2887
	lock_level_t user;68,2906
	lock_level_t wckey;69,2926
} assoc_mgr_lock_t;70,2947
	ASSOC_LOCK,80,3394
	FILE_LOCK,81,3407
	QOS_LOCK,82,3419
	RES_LOCK,83,3430
	USER_LOCK,84,3441
	WCKEY_LOCK,85,3453
	ASSOC_MGR_ENTITY_COUNT86,3466
} assoc_mgr_lock_datatype_t;87,3490
	int entity[entity90,3537
} assoc_mgr_lock_flags_t;91,3578
 	uint16_t cache_level;94,3622
	uint16_t enforce;95,3646
	void (*add_license_notify)add_license_notify96,3665
 	void (*remove_assoc_notify)remove_assoc_notify97,3719
	void (*remove_license_notify)remove_license_notify98,3783
 	void (*remove_qos_notify)remove_qos_notify99,3840
	void (*sync_license_notify)sync_license_notify100,3894
 	void (*update_assoc_notify)update_assoc_notify101,3945
	void (*update_license_notify)update_license_notify102,4009
 	void (*update_qos_notify)update_qos_notify103,4066
	void (*update_resvs)update_resvs104,4120
} assoc_init_args_t;105,4146
struct assoc_mgr_association_usage 107,4168
	List children_list;108,4205
	uint32_t grp_used_cpus;111,4287
	uint32_t grp_used_mem;113,4372
	uint32_t grp_used_nodes;115,4458
	double grp_used_wall;117,4545
	uint64_t grp_used_cpu_run_secs;119,4637
	uint32_t level_shares;122,4724
	slurmdb_association_rec_t *parent_assoc_ptr;parent_assoc_ptr125,4819
	double shares_norm;129,4949
	long double usage_efctv;131,5012
	long double usage_norm;132,5084
	long double usage_raw;133,5145
	uint32_t used_jobs;135,5215
	uint32_t used_submit_jobs;136,5276
	uint32_t tickets;139,5367
	unsigned active_seqno;141,5463
	bitstr_t *valid_qos;valid_qos144,5567
struct assoc_mgr_qos_usage 149,5691
	List job_list;150,5720
	uint32_t grp_used_cpus;152,5807
	uint64_t grp_used_cpu_run_secs;154,5891
	uint32_t grp_used_jobs;156,5977
	uint32_t grp_used_mem;157,6042
	uint32_t grp_used_nodes;159,6126
	uint32_t grp_used_submit_jobs;161,6213
	double grp_used_wall;163,6304
	double norm_priority;165,6406
	long double usage_raw;166,6467
	List user_limit_list;168,6537

src/common/bitstring.c,1468
#define	_bit_word(55,2557
#define _bit_byteaddr(58,2668
#define	_bit_mask(63,2836
#define	_bit_mask(65,2922
#define _bitstr_bits(69,3044
#define _bitstr_magic(72,3116
#define	_bitstr_words(75,3199
#define _assert_bitstr_valid(79,3318
#define _assert_bit_valid(86,3527
#define	bit_decl(97,3773
bit_alloc(151,5946
bit_realloc(173,6395
bit_free(195,6764
bit_size(209,7020
bit_test(222,7246
bit_set(235,7501
bit_clear(248,7740
bit_nset(262,8065
bit_nclear(285,8759
bit_ffc(308,9421
bit_nffc(338,10047
bit_noc(369,10709
bit_nffs(417,11700
bit_ffs(447,12204
bit_fls(477,12724
bit_fill_gaps(519,13477
bit_super_set(539,13744
bit_equal(560,14175
bit_and(586,14576
bit_not(603,14917
bit_or(619,15175
bit_copy(637,15503
bit_copybits(655,15872
hweight(673,16362
hweight(690,16785
bit_set_count(711,17427
bit_set_count_range(738,18000
bit_overlap(768,18688
bit_clear_count(798,19354
bit_nset_max_count(809,19658
bit_rotate_copy(845,20422
bit_rotate(890,21367
bit_pick_cnt(910,21683
#define BITSTR_RANGE_FMT	962,22713
#define BITSTR_SINGLE_FMT	963,22761
#define BITSTR_RANGE_FMT	965,22806
#define BITSTR_SINGLE_FMT	966,22840
bit_fmt(973,22941
bit_unfmt(1023,24151
bitfmt2int 1048,24774
inx2bitfmt 1097,25919
int inx2bitstr(1116,26228
char * bit_fmt_hexmask(1146,26895
int bit_unfmt_hexmask(1189,27967
char * bit_fmt_binmask(1242,29303
void bit_unfmt_binmask(1275,30031
bit_get_bit_num(1301,30685
bit_get_pos_num(1332,31258

src/common/bitstring.h,516
#define	_BITSTRING_H_58,3019
#define BITSTR_SHIFT_WORD8	73,3310
#define BITSTR_SHIFT_WORD32	74,3339
#define BITSTR_SHIFT_WORD64	75,3369
#  define __bitstr_datatypes_defined78,3437
typedef int64_t bitstr_t;81,3499
#define BITSTR_SHIFT 82,3525
typedef int32_t bitstr_t;84,3574
#define BITSTR_SHIFT 85,3600
typedef bitstr_t bitoff_t;88,3651
#define BITSTR_OVERHEAD 97,3766
#define BITSTR_MAGIC 100,3833
#define BITSTR_MAGIC_STACK	101,3867
#define BITSTR_MAXPOS	104,3965
#define FREE_NULL_BITMAP(154,5948

src/common/cbuf.c,2344
#  undef lsd_fatal_error63,2672
	static void lsd_fatal_error(70,2898
#  undef lsd_nomem_error85,3251
	static void * lsd_nomem_error(89,3409
#define CBUF_CHUNK 103,3662
#define CBUF_MAGIC 104,3691
#define CBUF_MAGIC_LEN 105,3726
struct cbuf 112,3832
    unsigned long       magic;115,3862
    pthread_mutex_t     mutex;119,3985
    int                 alloc;122,4093
    int                 minsize;123,4173
    int                 maxsize;124,4253
    int                 size;125,4333
    int                 used;126,4413
    cbuf_overwrite_t    overwrite;127,4493
    int                 got_wrap;128,4573
    int                 i_in;129,4653
    int                 i_out;130,4733
    int                 i_rep;131,4813
    unsigned char      *data;data132,4893
typedef int (*cbuf_iof)cbuf_iof135,4977
#  define MAX(170,6089
#  define MIN(174,6166
#  define cbuf_mutex_init(179,6253
#  define cbuf_mutex_lock(189,6911
#  define cbuf_mutex_unlock(199,7569
#  define cbuf_mutex_destroy(209,8227
#  define cbuf_mutex_init(225,9004
#  define cbuf_mutex_lock(226,9034
#  define cbuf_mutex_unlock(227,9064
#  define cbuf_mutex_destroy(228,9096
#  define cbuf_mutex_is_locked(229,9129
cbuf_create 239,9259
cbuf_destroy 301,11109
cbuf_flush 326,11787
cbuf_size 344,12118
cbuf_free 358,12314
cbuf_used 372,12524
cbuf_lines_used 386,12717
cbuf_reused 400,12951
cbuf_lines_reused 420,13352
cbuf_is_empty 434,13594
cbuf_opt_get 448,13796
cbuf_opt_set 473,14210
cbuf_drop 503,14791
cbuf_peek 533,15271
cbuf_read 556,15699
cbuf_replay 582,16180
cbuf_rewind 605,16612
cbuf_write 639,17252
cbuf_drop_line 665,17755
cbuf_peek_line 692,18221
cbuf_read_line 728,19016
cbuf_replay_line 765,19841
cbuf_rewind_line 810,20916
cbuf_write_line 838,21459
cbuf_peek_to_fd 919,23598
cbuf_read_to_fd 944,24063
cbuf_replay_to_fd 972,24593
cbuf_write_from_fd 997,25074
cbuf_copy 1032,25852
cbuf_move 1081,26797
cbuf_find_replay_line 1133,27814
cbuf_find_unread_line 1228,30817
cbuf_get_fd 1286,32447
cbuf_get_mem 1307,32931
cbuf_put_fd 1324,33314
cbuf_put_mem 1345,33790
cbuf_copier 1362,34173
cbuf_dropper 1448,36783
cbuf_reader 1474,37420
cbuf_replayer 1530,38999
cbuf_writer 1587,40693
cbuf_grow 1674,43331
cbuf_shrink 1749,45765
cbuf_mutex_is_locked 1773,46178
cbuf_is_valid 1789,46470

src/common/cbuf.h,228
#define LSD_CBUF_H40,2146
typedef struct cbuf * cbuf_t;81,3843
    CBUF_OPT_OVERWRITE84,4004
} cbuf_opt_t;85,4027
    CBUF_NO_DROP,88,4122
    CBUF_WRAP_ONCE,89,4202
    CBUF_WRAP_MANY 90,4282
} cbuf_overwrite_t;91,4362

src/common/checkpoint.c,1414
typedef struct slurm_checkpoint_ops 61,2865
	int     (*ckpt_op)ckpt_op62,2903
	int	(*ckpt_comp)ckpt_comp66,3116
	int	(*ckpt_task_comp)ckpt_task_comp68,3233
	int	(*ckpt_alloc_jobinfo)ckpt_alloc_jobinfo73,3386
	int	(*ckpt_free_jobinfo)ckpt_free_jobinfo74,3441
	int	(*ckpt_pack_jobinfo)ckpt_pack_jobinfo75,3494
	int	(*ckpt_unpack_jobinfo)ckpt_unpack_jobinfo77,3596
	check_jobinfo_t (*ckpt_copy_jobinfo)ckpt_copy_jobinfo79,3695
	int     (*ckpt_stepd_prefork)ckpt_stepd_prefork80,3760
	int     (*ckpt_signal_tasks)ckpt_signal_tasks81,3811
	int     (*ckpt_restart_task)ckpt_restart_task82,3878
} slurm_checkpoint_ops_t;84,3965
static const char *syms[syms90,4101
static slurm_checkpoint_ops_t ops;104,4405
static plugin_context_t *g_context g_context105,4440
static pthread_mutex_t      context_lock 106,4483
static bool init_run 107,4553
checkpoint_init(111,4630
checkpoint_fini(142,5248
checkpoint_op(159,5521
checkpoint_comp(182,6109
checkpoint_task_comp(201,6552
extern int checkpoint_alloc_jobinfo(220,7088
extern int checkpoint_free_jobinfo(236,7488
extern int  checkpoint_pack_jobinfo 252,7876
extern int  checkpoint_unpack_jobinfo 269,8300
extern check_jobinfo_t checkpoint_copy_jobinfo(286,8723
extern int checkpoint_stepd_prefork 300,9065
extern int checkpoint_signal_tasks 315,9483
extern int checkpoint_restart_task 331,9928
extern int checkpoint_tasks 346,10392

src/common/checkpoint.h,582
#define _HAVE_SLURM_CHECKPOINT_H__42,2281
enum check_opts 50,2479
	CHECK_ABLE,51,2497
	CHECK_DISABLE,52,2540
	CHECK_ENABLE,53,2585
	CHECK_CREATE,54,2628
	CHECK_VACATE,56,2726
	CHECK_RESTART,58,2815
	CHECK_ERROR,59,2876
	CHECK_REQUEUE	60,2912
enum checkpoint_plugin 66,3070
	CHECK_NONE,67,3095
	CHECK_AIX,68,3108
	CHECK_BLCR,69,3120
	CHECK_OMPI,70,3133
	CHECK_POE71,3146
#  define __check_jobinfo_t_defined76,3238
   typedef struct check_jobinfo *check_jobinfo_t;check_jobinfo_t77,3274
typedef struct slurm_checkpoint_context * slurm_checkpoint_context_t;79,3331

src/common/cpu_frequency.c,685
#define PATH_TO_CPU 56,2366
#define LINE_LEN 57,2413
#define SYSFS_PATH_MAX 58,2434
#define FREQ_LIST_MAX 59,2461
#define GOV_NAME_LEN 60,2486
static uint16_t cpu_freq_count 62,2511
static struct cpu_freq_data 63,2547
	uint32_t frequency_to_set;64,2577
	uint32_t reset_frequency;65,2605
	char     reset_governor[reset_governor66,2632
} * cpufreq 67,2672
cpu_freq_init(80,3009
cpu_freq_fini(164,5125
cpu_freq_send_info(173,5230
cpu_freq_recv_info(194,5664
cpu_freq_cpuset_validate(224,6402
cpu_freq_cgroup_validate(306,8491
_cpu_freq_next_cpu(349,9808
_cpu_freq_find_valid(424,10935
cpu_freq_verify_param(551,14047
cpu_freq_set(585,14672
cpu_freq_reset(629,15612

src/common/cpu_frequency.h,34
#define _CPU_FREQUENCY_H_38,2026

src/common/daemonize.c,90
daemon(63,2622
read_pidfile(121,3980
create_pidfile(161,4798
test_core_limit(205,5635

src/common/daemonize.h,34
#define _HAVE_DAEMONIZE_H42,2200

src/common/eio.c,899
#define EIO_SHUTDOWN_WAIT 59,2697
struct eio_handle_components 66,2884
#       define EIO_MAGIC 68,2930
	int  magic;69,2963
	int  fds[fds71,2983
	List obj_list;72,2997
	List new_objs;73,3013
static time_t eio_shutdown_time 87,3443
eio_handle_t *eio_handle_create(eio_handle_create89,3490
void eio_handle_destroy(111,3937
bool eio_message_socket_readable(127,4237
int eio_message_socket_accept(145,4582
int eio_signal_shutdown(207,6095
int eio_signal_wakeup(217,6315
static void _mark_shutdown_true(225,6486
static int _eio_wakeup_handler(237,6708
int eio_handle_mainloop(256,7069
_poll_internal(321,8550
_is_writable(345,8937
_is_readable(351,9043
_poll_setup_pollfds(357,9157
_poll_dispatch(400,10183
_poll_handle_event(412,10421
_ops_copy(480,12026
eio_obj_create(490,12191
void eio_obj_destroy(500,12396
void eio_new_initial_obj(525,13025
void eio_new_obj(537,13301

src/common/eio.h,586
#define _EIO_H 29,1416
typedef struct eio_obj eio_obj_t;34,1538
typedef struct eio_handle_components eio_handle_t;36,1573
struct io_operations 54,2388
	bool (*readable readable55,2411
	bool (*writable writable56,2447
	void (*handle_msg handle_msg57,2483
	int  (*handle_read handle_read58,2535
	int  (*handle_write)handle_write59,2577
	int  (*handle_error)handle_error60,2619
	int  (*handle_close)handle_close61,2661
	int  timeout;62,2703
struct eio_obj 65,2722
	int fd;66,2739
	void *arg;arg67,2812
	struct io_operations *ops;ops68,2885
	bool shutdown;69,2958

src/common/env.c,1382
#define ENV_BUFSIZE 88,3805
#define MAX_ENV_STRLEN 89,3838
static int _setup_particulars(92,3957
_find_name_in_env(174,6190
_extend_env(201,6654
static bool _discard_env(222,7054
envcount 236,7336
setenvfs(252,7659
int setenvf(280,8133
void unsetenvp(324,9144
char *getenvp(getenvp345,9458
int setup_env(361,9703
static char *_uint16_array_to_str(_uint16_array_to_str892,25467
extern char *uint32_compressed_to_str(uint32_compressed_to_str936,26617
env_array_for_job(982,27843
env_array_for_batch_job(1137,32605
env_array_for_step(1292,37412
char **env_array_create(env_array_create1391,40433
static int _env_array_update(1401,40578
int env_array_append_fmt(1437,41307
int env_array_append(1461,41843
int env_array_overwrite_fmt(1477,42318
int env_array_overwrite(1502,42933
char **env_array_copy(env_array_copy1511,43135
void env_array_free(1523,43313
static int _env_array_entry_splitter(1543,43689
static int _env_array_putenv(1576,44380
void env_array_set_environment(1595,44766
void env_unset_environment(1614,45155
void env_array_merge(1637,45686
void env_array_merge_slurm(1659,46278
static void _strip_cr_nl(1680,46772
static int _bracket_cnt(1697,47158
char **env_array_from_file(env_array_from_file1722,47871
static char **_load_env_cache(_load_env_cache1805,49905
char **env_array_user_default(env_array_user_default1878,51962

src/common/env.h,1366
#define _ENV_H28,1428
typedef struct env_options 38,1613
	int ntasks;39,1642
	char *task_count;task_count40,1684
	bool ntasks_set;41,1703
	bool cpus_set;42,1757
	task_dist_states_t distribution;43,1817
	uint16_t plane_size;44,1882
		cpu_bind_type;46,1967
	char *cpu_bind;cpu_bind47,2004
	uint32_t cpu_freq;48,2057
		mem_bind_type;50,2124
	char *mem_bind;mem_bind51,2161
	bool overcommit;52,2217
	int  slurmd_debug;53,2261
	bool labelio;54,2316
	dynamic_plugin_data_t *select_jobinfo;select_jobinfo55,2358
	int nhosts;56,2398
	char *nodelist;nodelist57,2411
	char *partition;partition58,2459
	char **env;env59,2498
	uint16_t comm_port;60,2545
	slurm_addr_t *cli;cli61,2598
	slurm_addr_t *self;self62,2644
	int jobid;63,2665
	int stepid;64,2700
	int procid;65,2744
	int localid;66,2794
	int nodeid;67,2843
	int cpus_per_task;68,2856
	int ntasks_per_node;69,2906
	int ntasks_per_socket;70,2955
	int ntasks_per_core;71,3007
	int cpus_on_node;72,3056
	pid_t task_pid;73,3075
	char *sgtids;sgtids74,3092
	uint16_t pty_port;75,3145
	uint8_t ws_col;76,3211
	uint8_t ws_row;77,3256
	char *ckpt_dir;ckpt_dir78,3303
	uint16_t restart_cnt;79,3355
	uint16_t batch_flag;80,3406
	uint32_t uid;81,3469
	char *user_name;user_name82,3499
} env_t;83,3533
int env_array_append_fmt(236,8202
int env_array_overwrite_fmt(261,9087

src/common/fd.c,653
void fd_set_close_on_exec(67,2774
void fd_set_noclose_on_exec(76,2920
int open_cloexec(86,3060
int creat_cloexec(99,3276
int fd_is_blocking(112,3518
void fd_set_nonblocking(123,3699
void fd_set_blocking(136,3941
int fd_get_read_lock(150,4182
int fd_get_readw_lock(156,4261
int fd_get_write_lock(162,4342
int fd_get_writew_lock(168,4422
int fd_release_lock(174,4504
pid_t fd_is_read_lock_blocked(180,4582
pid_t fd_is_write_lock_blocked(186,4662
static int fd_get_lock(192,4743
static pid_t fd_test_lock(207,4956
ssize_t fd_read_n(227,5319
ssize_t fd_write_n(252,5686
ssize_t fd_read_line(274,6001
extern int wait_fd_readable(309,6772

src/common/fd.h,59
#define _FD_H40,2086
static inline void closeall(53,2290

src/common/forward.c,730
#define MAX_RETRIES 63,2698
	pthread_cond_t *notify;notify66,2738
	int            *p_thr_count;p_thr_count67,2763
	slurm_msg_t *orig_msg;orig_msg68,2793
	List ret_list;69,2817
	int timeout;70,2833
	hostlist_t tree_hl;71,2847
	pthread_mutex_t *tree_mutex;tree_mutex72,2868
} fwd_tree_t;73,2898
void _destroy_tree_fwd(75,2913
void *_forward_thread(_forward_thread94,3355
void *_fwd_tree_thread(_fwd_tree_thread315,9952
extern void forward_init(442,13611
extern int forward_msg(469,14586
extern List start_msg_tree(567,17539
extern void mark_as_failed_forward(675,20409
extern void forward_wait(692,20858
void destroy_data_info(723,21676
void destroy_forward(734,21936
void destroy_forward_struct(744,22119

src/common/forward.h,27
#define _FORWARD_H42,2183

src/common/getopt1.c,175
#define const31,1166
#define GETOPT_INTERFACE_VERSION 45,1729
#define ELIDE_CODE49,1910
#define NULL 63,2118
getopt_long 67,2145
getopt_long_only 83,2648
main 101,2989

src/common/getopt.c,989
# define _NO_PROTO27,1217
#  define const38,1435
#define GETOPT_INTERFACE_VERSION 54,2049
#  define ELIDE_CODE58,2232
#   define _(86,2855
#  define _(89,2907
char *optarg;optarg115,3900
int optind 130,4451
int __getopt_initialized;136,4623
static char *nextchar;nextchar145,4932
int opterr 150,5046
int optopt 156,5229
  REQUIRE_ORDER,189,6653
  REQUIRE_ORDER, PERMUTE,189,6653
  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER189,6653
} ordering;190,6695
static char *posixly_correct;posixly_correct193,6762
# define my_index	201,7039
my_index 218,7299
static int first_nonopt;251,8253
static int last_nonopt;252,8278
static int nonoption_flags_max_len;268,8774
static int nonoption_flags_len;269,8810
#  define SWAP_FLAGS(273,8879
#  define SWAP_FLAGS(281,9184
# define SWAP_FLAGS(284,9242
exchange 301,9826
_getopt_initialize 387,12379
_getopt_internal 512,16880
# define NONOPTION_P 542,17773
# define NONOPTION_P 546,17960
getopt 978,28930
main 997,29297

src/common/getopt.h,315
# define _GETOPT_H 23,947
struct option94,3619
  const char *name;name97,3694
  char *name;name99,3721
  int has_arg;103,3879
  int *flag;flag104,3894
  int val;105,3907
# define no_argument	110,3994
# define required_argument	111,4018
# define optional_argument	112,4047
#undef __need_getopt178,6408

src/common/gres.c,5912
#define GRES_MAGIC 87,3252
typedef struct slurm_gres_ops 90,3325
	int		(*node_config_load)node_config_load91,3357
	void		(*job_set_env)job_set_env92,3408
	void		(*step_set_env)step_set_env94,3480
	void		(*send_stepd)send_stepd96,3553
	void		(*recv_stepd)recv_stepd97,3587
	int		(*job_info)job_info98,3621
	int		(*step_info)step_info102,3766
} slurm_gres_ops_t;106,3914
typedef struct slurm_gres_context 109,3985
	plugin_handle_t	cur_plugin;110,4021
	char *		gres_name;111,4050
	char *		gres_name_colon;112,4095
	int		gres_name_colon_len;113,4154
	char *		gres_type;114,4211
	bool		has_file;115,4268
	slurm_gres_ops_t ops;116,4320
	uint32_t	plugin_id;117,4378
	plugrack_t	plugin_list;118,4423
} slurm_gres_context_t;119,4469
typedef struct gres_state 124,4661
	uint32_t	plugin_id;125,4689
	void		*gres_data;gres_data126,4710
} gres_state_t;127,4729
static int gres_context_cnt 130,4768
static uint32_t gres_cpu_cnt 131,4802
static bool gres_debug 132,4836
static slurm_gres_context_t *gres_context gres_context133,4868
static char *gres_node_name gres_node_name134,4918
static char *gres_plugin_list gres_plugin_list135,4954
static pthread_mutex_t gres_context_lock 136,4992
static List gres_conf_list 137,5062
static bool init_run 138,5097
static uint32_t	_build_id(218,9158
static int _gres_find_id(231,9338
static int  _strcmp(241,9601
static int _load_gres_plugin(252,9824
static int _unload_gres_plugin(329,12057
extern int gres_plugin_init(355,12593
extern int gres_plugin_fini(439,14809
extern int gres_plugin_help_msg(474,15714
extern int gres_plugin_reconfig(504,16415
static void _destroy_gres_slurmd_conf(547,17436
static int _log_gres_slurmd_conf(561,17700
static void _my_stat(588,18300
static int _validate_file(596,18466
static int _parse_gres_config(645,19529
static int _parse_gres_config2(739,22167
static void _validate_config(771,23100
extern int gres_plugin_node_config_devices_path(798,23946
static int _no_gres_conf(869,26128
extern int gres_plugin_node_config_load(901,27075
extern int gres_plugin_node_config_pack(967,29066
extern int gres_plugin_node_config_unpack(1006,30171
static void _gres_node_list_delete(1105,33082
static uint32_t _get_gres_cnt(1126,33735
static void _set_gres_cnt(1162,34764
static gres_node_state_t *_build_gres_node_state(_build_gres_node_state1206,36063
static int _node_config_init(1220,36377
extern int gres_plugin_init_node_config(1267,37880
static uint32_t _get_tot_gres_cnt(1310,39189
extern int gres_gresid_to_gresname(1343,40131
extern int _node_config_validate(1376,41024
extern int gres_plugin_node_config_validate(1549,47345
static int _node_reconfig(1589,48523
extern int gres_plugin_node_reconfig(1653,50971
extern int gres_plugin_node_state_pack(1695,52217
extern int gres_plugin_node_state_unpack(1754,53833
static void *_node_state_dup(_node_state_dup1824,55868
extern List gres_plugin_node_state_dup(1870,57402
static void _node_state_dealloc(1912,58469
extern void gres_plugin_node_state_dealloc_all(1953,59835
static void _node_state_log(1972,60277
extern void gres_plugin_node_state_log(2021,61958
static void _job_state_delete(2048,62616
static void _gres_job_list_delete(2068,63120
static int _job_config_validate(2082,63440
static int _job_state_validate(2113,64259
extern int gres_plugin_job_state_validate(2137,64945
static void *_job_state_dup(_job_state_dup2185,66218
static void *_job_state_dup2(_job_state_dup22212,66906
List gres_plugin_job_state_dup(2240,67777
List gres_plugin_job_state_extract(2251,68118
extern int gres_plugin_job_state_pack(2300,69648
extern int gres_plugin_job_state_unpack(2383,71989
static bitstr_t *_cpu_bitmap_rebuild(_cpu_bitmap_rebuild2490,75117
static void _validate_gres_node_cpus(2521,75787
static void	_job_core_filter(2550,76641
extern uint32_t _job_test(2587,77989
extern void gres_plugin_job_core_filter(2767,83676
extern uint32_t gres_plugin_job_test(2834,85935
static bool _cores_on_gres(2904,87921
extern int _job_alloc(2918,88316
extern int gres_plugin_job_alloc(3097,94856
static int _job_dealloc(3160,96735
extern int gres_plugin_job_dealloc(3270,100571
extern void gres_plugin_job_merge(3341,102817
extern void gres_plugin_job_set_env(3509,108034
static void _job_state_log(3542,108899
extern uint32_t gres_plugin_get_job_value_by_type(3594,110584
extern void gres_plugin_job_state_log(3625,111371
extern void gres_plugin_job_state_file(3652,112030
static void _step_state_delete(3705,113367
static void _gres_step_list_delete(3722,113747
static int _step_state_validate(3730,113925
static uint32_t _step_test(3748,114357
extern int gres_plugin_step_state_validate(3825,116764
static void *_step_state_dup(_step_state_dup3912,119329
static void *_step_state_dup2(_step_state_dup23940,120100
List gres_plugin_step_state_dup(3968,120960
List gres_plugin_step_state_extract(3979,121295
void gres_plugin_step_state_rebase(4021,122604
extern int gres_plugin_step_state_pack(4114,125246
extern int gres_plugin_step_state_unpack(4176,127118
extern void gres_plugin_step_set_env(4267,129789
static void _step_state_log(4300,130661
extern void gres_plugin_step_state_log(4335,131633
extern uint32_t gres_plugin_step_test(4372,132794
static int _step_alloc(4431,134340
extern int gres_plugin_step_alloc(4555,138554
static int _step_dealloc(4617,140269
extern int gres_plugin_step_dealloc(4690,142627
extern uint32_t gres_get_value_by_type(4745,144207
extern int gres_plugin_job_count(4787,145466
extern int gres_plugin_node_count(4832,146874
extern void gres_plugin_step_state_file(4884,148201
extern void gres_plugin_send_stepd(4938,149617
extern void gres_plugin_recv_stepd(4955,150040
static int _get_job_info(4972,150454
extern int gres_get_job_info(5011,151747
static int _get_step_info(5049,152819
extern int gres_get_step_info(5089,154197

src/common/gres.h,1689
#define _GRES_H40,2137
#define GRES_MAGIC 46,2243
	GRES_VAL_TYPE_FOUND 50,2282
	GRES_VAL_TYPE_CONFIG 51,2309
	GRES_VAL_TYPE_AVAIL 52,2336
	GRES_VAL_TYPE_ALLOC 53,2363
typedef struct gres_slurmd_conf 57,2448
	uint32_t count;59,2542
	uint16_t cpu_cnt;62,2623
	char *cpus;cpus63,2642
	char *file;file66,2717
	uint8_t has_file;67,2730
	char *name;name70,2824
	uint32_t plugin_id;73,2860
} gres_slurmd_conf_t;74,2881
typedef struct gres_node_state 77,2969
	uint32_t gres_cnt_found;79,3031
	uint32_t gres_cnt_config;82,3105
	uint32_t gres_cnt_avail;86,3257
	uint32_t  gres_cnt_alloc;89,3329
	bitstr_t *gres_bit_alloc;gres_bit_alloc90,3356
	uint16_t topo_cnt;93,3494
	bitstr_t **topo_cpus_bitmap;topo_cpus_bitmap94,3514
	bitstr_t **topo_gres_bitmap;topo_gres_bitmap95,3544
	uint32_t *topo_gres_cnt_alloc;topo_gres_cnt_alloc96,3574
	uint32_t *topo_gres_cnt_avail;topo_gres_cnt_avail97,3606
} gres_node_state_t;98,3638
typedef struct gres_job_state 101,3709
	uint32_t gres_cnt_alloc;103,3783
	uint32_t node_cnt;106,3867
	bitstr_t **gres_bit_alloc;gres_bit_alloc107,3887
	bitstr_t **gres_bit_step_alloc;gres_bit_step_alloc112,4095
	uint32_t  *gres_cnt_step_alloc;gres_cnt_step_alloc113,4128
} gres_job_state_t;114,4161
typedef struct gres_step_state 117,4236
	uint32_t gres_cnt_alloc;119,4311
	uint32_t node_cnt;127,4684
	bitstr_t *node_in_use;node_in_use128,4704
	bitstr_t **gres_bit_alloc;gres_bit_alloc129,4728
} gres_step_state_t;130,4756
enum gres_job_data_type 638,25158
	GRES_JOB_DATA_COUNT,639,25184
	GRES_JOB_DATA_BITMAP,640,25229
enum gres_step_data_type 658,25907
	GRES_STEP_DATA_COUNT,659,25934
	GRES_STEP_DATA_BITMAP,660,25980

src/common/hostlist.c,7375
#  undef lsd_fatal_error146,6378
	static void lsd_fatal_error(150,6531
#  undef lsd_nomem_error161,6781
	static void * lsd_nomem_error(165,6936
#define out_of_memory(179,7254
#define HOSTLIST_CHUNK 190,7509
#define MAX_RANGE 193,7608
#define MAX_RANGES 196,7726
#define MAXHOSTNAMELEN 201,7924
struct hostname_components 207,8083
	char *hostname;hostname208,8112
	char *prefix;prefix209,8180
	unsigned long num;210,8248
	char *suffix;suffix214,8429
typedef struct hostname_components *hostname_t;hostname_t217,8448
struct hostrange_components 220,8576
	char *prefix;prefix221,8606
	unsigned long lo,224,8707
	unsigned long lo, hi;224,8707
	int width;228,8807
	unsigned singlehost:singlehost231,8873
typedef struct hostrange_components *hostrange_t;hostrange_t234,8901
struct hostlist 237,9014
#define HOSTLIST_MAGIC 239,9047
	int magic;240,9079
	pthread_mutex_t mutex;243,9119
	int size;247,9239
	int nranges;250,9299
	int nhosts;253,9364
	hostrange_t *hr;hr256,9412
	struct hostlist_iterator *ilist;ilist259,9456
struct hostset 265,9543
	hostlist_t hl;266,9560
struct hostlist_iterator 269,9580
	int magic;271,9622
	hostlist_t hl;274,9675
	int idx;277,9737
	hostrange_t hr;280,9809
	int depth;283,9878
	struct hostlist_iterator *next;next286,9930
struct _range 289,9967
	unsigned long lo,290,9983
	unsigned long lo, hi;290,9983
	int width;291,10006
char *alpha_num alpha_num297,10079
static bitstr_t *bit_grid bit_grid300,10177
static int grid_start[grid_start302,10212
static int grid_end[grid_end303,10255
static int offset[offset304,10296
static int dim_grid_size 305,10335
static uint64_t grid_size 306,10367
static pthread_mutex_t multi_dim_lock 309,10463
static void _error(342,11476
#  define mutex_init(402,14454
#  define mutex_lock(412,14698
#  define mutex_unlock(422,14939
#  define mutex_destroy(432,15184
#  define mutex_init(444,15475
#  define mutex_lock(445,15503
#  define mutex_unlock(446,15531
#  define mutex_destroy(447,15561
#define LOCK_HOSTLIST(451,15636
#define UNLOCK_HOSTLIST(458,15798
#define seterrno_ret(463,15890
static void _error(477,16148
static char * _next_tok(504,16757
static int _zero_padded(550,17821
static int _width_equiv(572,18454
static int host_prefix_end(599,19018
static hostname_t hostname_create_dims(623,19428
static hostname_t hostname_create(684,20764
static void hostname_destroy(693,20949
static int hostname_suffix_is_valid(707,21196
static int hostname_suffix_width(716,21382
static hostrange_t hostrange_new(729,21602
static hostrange_t hostrange_create_single(740,21888
hostrange_create(769,22364
static unsigned long hostrange_count(798,22826
static hostrange_t hostrange_copy(809,23005
static void hostrange_destroy(823,23280
static hostrange_t hostrange_delete_host(838,23721
static int hostrange_cmp(866,24370
static int hostrange_prefix_cmp(889,24962
static int hostrange_within_range(910,25595
static int hostrange_width_combine(924,25950
static int hostrange_empty(935,26195
static char *hostrange_pop(hostrange_pop946,26538
static char *hostrange_shift(hostrange_shift987,27543
static int hostrange_join(1040,28757
static hostrange_t hostrange_intersect(1074,29631
static int hostrange_hn_within(1102,30195
hostrange_to_string(1201,33057
static size_t hostrange_numstr(1258,34347
static hostlist_t hostlist_new(1319,35658
static int hostlist_resize(1357,36441
static int hostlist_expand(1378,36887
static int hostlist_push_range(1390,37174
hostlist_push_hr(1432,37966
static int hostlist_insert_range(1444,38337
static void hostlist_delete_range(1484,39190
hostlist_t _hostlist_create(1512,39866
hostlist_t _hostlist_create(1656,43261
static int _parse_box_range(1666,43484
static int _parse_single_range(1715,44659
static int _parse_range_list(1779,46067
_push_range_list(1814,46937
_hostlist_create_bracketed(1886,48806
hostlist_t hostlist_create_dims(1954,50207
hostlist_t hostlist_create(1961,50377
hostlist_t hostlist_copy(1968,50515
void hostlist_destroy(1994,50928
int hostlist_push(2015,51306
int hostlist_push_host_dims(2032,51626
int hostlist_push_host(2059,52124
int hostlist_push_list(2065,52279
char *hostlist_pop(hostlist_pop2083,52518
hostlist_shift_iterators(2108,53058
char *hostlist_shift(hostlist_shift2130,53532
char *hostlist_pop_range(hostlist_pop_range2159,53970
char *hostlist_shift_range(hostlist_shift_range2194,54637
int hostlist_delete(2236,55477
int hostlist_delete_host(2258,55911
_hostrange_string(2273,56127
char * hostlist_nth(2304,56822
int hostlist_delete_nth(2329,57230
int hostlist_count(2368,58002
int hostlist_find(2380,58158
int _cmp(2412,58761
void hostlist_sort(2420,58953
static void hostlist_collapse(2446,59396
static void hostlist_coalesce(2468,59925
static int _attempt_range_join(2522,61047
void hostlist_uniq(2537,61368
char *hostlist_deranged_string_malloc(hostlist_deranged_string_malloc2560,61817
char *hostlist_deranged_string_xmalloc_dims(hostlist_deranged_string_xmalloc_dims2573,62131
char *hostlist_deranged_string_xmalloc(hostlist_deranged_string_xmalloc2588,62447
ssize_t hostlist_deranged_string_dims(2594,62610
ssize_t hostlist_deranged_string(2619,63082
void hostlist_parse_int_to_array(2626,63340
static int _is_bracket_needed(2635,63629
_get_bracketed_list(2651,64152
static int _tell_if_used(2705,65523
static int _get_next_box(2778,67353
_get_boxes(2871,69967
_set_box_in_grid(2935,71452
static int _add_box_ranges(2954,71833
static void _set_min_max_of_grid(2999,72890
_set_grid(3026,73461
_test_box_in_grid(3050,74165
_test_box(3071,74555
char *hostlist_ranged_string_malloc(hostlist_ranged_string_malloc3085,74807
char *hostlist_ranged_string_xmalloc_dims(hostlist_ranged_string_xmalloc_dims3098,75115
char *hostlist_ranged_string_xmalloc(hostlist_ranged_string_xmalloc3111,75405
ssize_t hostlist_ranged_string_dims(3117,75567
ssize_t hostlist_ranged_string(3261,79336
static hostlist_iterator_t hostlist_iterator_new(3270,79561
hostlist_iterator_t hostlist_iterator_create(3284,79859
hostlist_iterator_t hostset_iterator_create(3300,80156
void hostlist_iterator_reset(3305,80263
void hostlist_iterator_destroy(3315,80438
static void _iterator_advance(3335,80840
static void _iterator_advance_range(3353,81274
char *hostlist_next_dims(hostlist_next_dims3371,81626
char *hostlist_next(hostlist_next3416,82611
char *hostlist_next_range(hostlist_next_range3423,82744
int hostlist_remove(3454,83304
hostset_t hostset_create(3481,83892
hostset_t hostset_copy(3499,84182
void hostset_destroy(3516,84456
static int hostset_insert_range(3528,84688
int hostset_insert(3580,85692
static int hostset_find_host(3599,86076
int hostset_intersects(3618,86437
int hostset_within(3639,86805
int hostset_delete(3662,87226
int hostset_delete_host(3667,87325
char *hostset_shift(hostset_shift3672,87440
char *hostset_pop(hostset_pop3677,87513
char *hostset_shift_range(hostset_shift_range3682,87582
char *hostset_pop_range(hostset_pop_range3687,87667
int hostset_count(3692,87748
ssize_t hostset_ranged_string(3697,87819
ssize_t hostset_deranged_string(3702,87939
char * hostset_nth(3707,88063
int hostset_find(3712,88143
int hostlist_nranges(3719,88259
int hostset_nranges(3724,88321
int iterator_test(3732,88466
int main(3775,89462

src/common/hostlist.h,533
#define _HOSTLIST_H42,2266
#define MAXHOSTRANGELEN 47,2383
#define MAX_PREFIX_CNT 53,2681
#define HOSTLIST_BASE 56,2738
#define HOSTLIST_BASE 58,2769
#  define HIGHEST_DIMENSIONS 63,2872
#define HIGHEST_BASE 65,2910
#define FREE_NULL_HOSTLIST(67,2935
#  define __hostlist_t_defined101,4081
   typedef struct hostlist * hostlist_t;102,4112
typedef struct hostset * hostset_t;112,4403
typedef struct hostlist_iterator * hostlist_iterator_t;118,4570
#define hostlist_is_empty(313,10408
#define hostlist_get_base(332,10793

src/common/io_hdr.c,359
#define IO_PROTOCOL_VERSION 48,2318
io_hdr_pack(66,2576
io_hdr_unpack(75,2744
io_hdr_packed_size(89,3044
static int _full_read(98,3222
int io_hdr_read_fd(129,3790
io_init_msg_validate(154,4180
io_init_msg_packed_size(178,4730
io_init_msg_pack(191,5027
io_init_msg_unpack(203,5322
io_init_msg_write_to_fd(223,5795
io_init_msg_read_from_fd(257,6492

src/common/io_hdr.h,677
#define _HAVE_IO_HDR_H41,2187
#define MAX_MSG_LEN 60,2520
#define SLURM_IO_KEY_SIZE 61,2545
#define SLURM_IO_STDIN 63,2574
#define SLURM_IO_STDOUT 64,2599
#define SLURM_IO_STDERR 65,2625
#define SLURM_IO_ALLSTDIN 66,2651
#define SLURM_IO_CONNECTION_TEST 67,2679
struct slurm_io_init_msg 69,2715
	uint16_t      version;70,2742
	unsigned char cred_signature[cred_signature71,2766
	uint32_t      nodeid;72,2816
	uint32_t      stdout_objs;73,2839
	uint32_t      stderr_objs;74,2867
typedef struct slurm_io_header 78,2900
	uint16_t      type;79,2933
	uint16_t      gtaskid;80,2954
	uint16_t      ltaskid;81,2978
	uint32_t      length;82,3002
} io_hdr_t;83,3025

src/common/job_options.c,634
#define JOB_OPTIONS_PACK_TAG 52,2423
struct job_options 54,2467
#define JOB_OPTIONS_MAGIC 56,2503
	int magic;57,2540
	List options;59,2574
	ListIterator iterator;60,2589
job_option_info_create 65,2650
static void job_option_info_destroy 76,2893
static void job_option_info_pack 85,3043
static struct job_option_info * job_option_info_unpack 93,3246
job_options_t job_options_create 115,3684
void job_options_destroy 130,4014
int job_options_append 146,4330
int job_options_pack 161,4687
int job_options_unpack 193,5315
const struct job_option_info * job_options_next 226,5895
void job_options_iterator_reset 238,6157

src/common/job_options.h,194
#define _JOB_OPTIONS_H41,2179
typedef struct job_options * job_options_t;49,2284
struct job_option_info 51,2352
	int type;52,2377
	char *option;option53,2388
	char *optarg;optarg54,2403

src/common/job_resources.c,1243
extern job_resources_t *create_job_resources(create_job_resources54,2493
extern int build_job_resources(74,3288
extern int build_job_resources_cpu_array(130,5140
extern int build_job_resources_cpus_array(172,6461
extern int reset_node_bitmap(221,7964
extern int valid_job_resources(250,8792
extern job_resources_t *copy_job_resources(copy_job_resources303,10327
extern void free_job_resources(403,13743
extern void log_job_resources(427,14563
extern void pack_job_resources(529,17665
extern int unpack_job_resources(697,23013
extern int get_job_resources_offset(846,27491
extern int get_job_resources_bit(891,28827
extern int set_job_resources_bit(903,29159
extern int job_resources_bits_copy(919,29698
extern int get_job_resources_node(999,32316
static int _change_job_resources_node(1039,33391
extern int set_job_resources_node(1083,34593
extern int clear_job_resources_node(1089,34756
extern int count_job_resources_node(1096,34989
extern bitstr_t * copy_job_resources_node(1140,36173
extern int get_job_resources_cnt(1184,37375
extern int job_fits_into_cores(1219,38409
extern void add_job_to_cores(1257,39549
extern void remove_job_from_cores(1300,40883
extern int job_resources_node_inx_to_cpu_inx(1338,42095

src/common/job_resources.h,783
#define _JOB_RESOURCES_H40,2158
struct job_resources 110,5327
	bitstr_t *	core_bitmap;111,5350
	bitstr_t *	core_bitmap_used;112,5375
	uint32_t	cpu_array_cnt;113,5405
	uint16_t *	cpu_array_value;114,5430
	uint32_t *	cpu_array_reps;115,5459
	uint16_t *	cpus;116,5487
	uint16_t *	cpus_used;117,5505
	uint16_t *	cores_per_socket;118,5528
	uint32_t *	memory_allocated;119,5558
	uint32_t *	memory_used;120,5588
	uint32_t	nhosts;121,5613
	bitstr_t *	node_bitmap;122,5631
	uint32_t	node_req;123,5656
	char *		nodes;124,5676
	uint32_t	ncpus;125,5692
	uint32_t *	sock_core_rep_count;126,5709
	uint16_t *	sockets_per_node;127,5742
	uint8_t		whole_node;128,5772
enum node_cr_state 144,6383
	NODE_CR_AVAILABLE 145,6404
	NODE_CR_ONE_ROW 146,6477
	NODE_CR_RESERVED 147,6543

src/common/list.c,2634
#  undef lsd_fatal_error96,4208
static void lsd_fatal_error(100,4361
#  undef lsd_nomem_error112,4651
static void * lsd_nomem_error(116,4806
#  define LIST_ALLOC 147,5933
#  define LIST_ALLOC 149,5962
#define LIST_MAGIC 151,5994
struct listNode 158,6082
	void                 *data;data159,6100
	struct listNode      *next;next160,6177
struct listIterator 163,6258
	struct list          *list;list164,6280
	struct listNode      *pos;pos165,6357
	struct listNode     **prev;prev166,6434
	struct listIterator  *iNext;iNext167,6511
	unsigned int          magic;169,6603
struct list 173,6705
	struct listNode      *head;head174,6719
	struct listNode     **tail;tail175,6796
	struct listIterator  *iNext;iNext176,6873
	ListDelF              fDel;177,6950
	int                   count;178,7027
	pthread_mutex_t       mutex;180,7125
	unsigned int          magic;183,7244
typedef struct listNode * ListNode;187,7346
static List list_free_lists 211,8057
static ListNode list_free_nodes 212,8093
static ListIterator list_free_iterators 213,8133
static pthread_mutex_t list_free_lock 216,8203
#  define list_mutex_init(226,8365
#  define list_mutex_lock(236,8584
#  define list_mutex_unlock(246,8797
#  define list_mutex_destroy(256,9016
#  define list_mutex_init(272,9365
#  define list_mutex_lock(273,9398
#  define list_mutex_unlock(274,9431
#  define list_mutex_destroy(275,9466
#  define list_mutex_is_locked(276,9502
list_create 288,9654
list_destroy 309,10006
list_is_empty 343,10654
list_count 359,10862
list_append 375,11064
list_append_list 392,11317
list_transfer 416,11654
list_prepend 440,11950
list_find_first 458,12214
list_delete_all 483,12591
list_for_each 515,13047
list_flush 540,13395
list_push 566,13728
list_sort(587,14027
list_pop 642,14927
list_pop_top 659,15142
list_pop_bottom 686,15591
list_peek 713,16058
list_enqueue 730,16287
list_dequeue 748,16547
list_iterator_create 765,16791
list_iterator_reset 791,17273
list_iterator_destroy 807,17569
list_next 832,18072
list_insert 854,18433
list_find 873,18754
list_remove 890,19002
list_delete_item 909,19329
list_node_create 928,19571
list_node_destroy 975,20826
list_alloc 1011,21462
list_free 1019,21580
list_node_alloc 1027,21682
list_node_free 1035,21814
list_iterator_alloc 1043,21933
list_iterator_free 1051,22081
list_alloc_aux 1059,22201
list_free_aux 1096,23045
list_reinit_mutexes 1119,23441
void list_install_fork_handlers 1124,23508
void list_install_fork_handlers 1133,23708
list_mutex_is_locked 1142,23815
_list_pop_locked(1161,24193
_list_append_locked(1176,24412

src/common/list.h,442
#define LSD_LIST_H40,2182
#define FREE_NULL_LIST(42,2202
#  define __list_datatypes_defined78,3415
typedef struct list * List;79,3450
# define __COMPAR_FN_T85,3568
typedef int (*__compar_fn_t)__compar_fn_t86,3591
typedef struct listIterator * ListIterator;93,3697
typedef void (*ListDelF)ListDelF98,3785
typedef int (*ListCmpF)ListCmpF105,4027
typedef int (*ListFindF)ListFindF112,4229
typedef int (*ListForF)ListForF118,4389

src/common/log.c,2605
#  define LINEBUFSIZE 91,3436
	char *argv0;argv0129,4799
	char *fpfx;fpfx130,4813
	FILE *logfp;logfp131,4881
	cbuf_t buf;132,4949
	cbuf_t fbuf;133,5017
	log_facility_t facility;134,5085
	log_options_t opt;135,5111
	unsigned initialized:initialized136,5131
	uint16_t fmt;137,5156
	uint32_t debug_flags;138,5225
}	log_t;139,5248
char *slurm_prog_name slurm_prog_name141,5258
  static pthread_mutex_t  log_lock 145,5333
  static int              log_lock;147,5403
static log_t            *log log149,5466
static log_t            *sched_log sched_log150,5503
#define LOG_INITIALIZED 152,5547
#define SCHED_LOG_INITIALIZED 153,5609
#  define default_name	159,5925
#  define default_name 161,5978
static void _atfork_prep(169,6069
static void _atfork_parent(170,6133
static void _atfork_child(171,6197
static bool at_forked 172,6261
#  define atfork_install_handlers(173,6292
#  define atfork_install_handlers(179,6609
static size_t _make_timestamp(186,6819
size_t rfc2822_timestamp(198,7160
size_t log_timestamp(203,7272
static int _fd_writeable(239,8189
_log_init(287,9415
_sched_log_init(383,11462
int log_init(459,12929
int sched_log_init(471,13218
void log_fini(483,13512
void sched_log_fini(503,13839
void log_reinit(522,14213
void log_set_fpfx(527,14270
void log_set_argv0(540,14502
int log_alter(555,14806
void log_set_debug_flags(569,15153
int log_alter_with_fp(581,15423
int sched_log_alter(603,15984
FILE *log_fp(log_fp616,16410
void log_fatal(629,16635
void log_oom(644,17035
void log_set_timefmt(658,17364
set_idbuf(675,17751
static char *vxstrfmt(vxstrfmt700,18603
static void xlogfmtcat(903,23444
_log_printf(919,23647
static void log_msg(956,24458
log_has_data(1085,27100
_log_flush(1096,27282
log_flush(1108,27532
lsd_fatal_error(1119,27720
lsd_nomem_error(1125,27822
void fatal(1135,28001
int error(1148,28165
void info(1163,28397
void verbose(1172,28516
void debug(1181,28641
void debug2(1190,28762
void debug3(1199,28885
void debug4(1212,29158
void debug5(1221,29281
void schedlog(1230,29404
struct fatal_cleanup 1241,29549
	pthread_t thread_id;1242,29572
	struct fatal_cleanup *next;next1243,29594
	void (*proc)proc1244,29623
	void *context;context1245,29647
  static pthread_mutex_t  fatal_lock 1250,29711
  static int	fatal_lock;1252,29783
static struct fatal_cleanup *fatal_cleanups fatal_cleanups1254,29835
fatal_add_cleanup(1259,29987
fatal_add_cleanup_job(1276,30390
fatal_remove_cleanup(1292,30769
fatal_remove_cleanup_job(1317,31438
fatal_cleanup(1341,32065
dump_cleanup_list(1372,32814

src/common/log.h,1916
#define _LOG_H47,2723
	SYSLOG_FACILITY_DAEMON 65,3010
	SYSLOG_FACILITY_DAEMON = 	LOG_DAEMON,65,3010
	SYSLOG_FACILITY_USER 66,3049
	SYSLOG_FACILITY_USER = 		LOG_USER,66,3049
	SYSLOG_FACILITY_AUTH 67,3085
	SYSLOG_FACILITY_AUTH = 		LOG_AUTH,67,3085
	SYSLOG_FACILITY_AUTHPRIV 69,3141
	SYSLOG_FACILITY_AUTHPRIV =	LOG_AUTHPRIV,69,3141
	SYSLOG_FACILITY_LOCAL0 71,3190
	SYSLOG_FACILITY_LOCAL0 =	LOG_LOCAL0,71,3190
	SYSLOG_FACILITY_LOCAL1 72,3228
	SYSLOG_FACILITY_LOCAL1 =	LOG_LOCAL1,72,3228
	SYSLOG_FACILITY_LOCAL2 73,3266
	SYSLOG_FACILITY_LOCAL2 =	LOG_LOCAL2,73,3266
	SYSLOG_FACILITY_LOCAL3 74,3304
	SYSLOG_FACILITY_LOCAL3 =	LOG_LOCAL3,74,3304
	SYSLOG_FACILITY_LOCAL4 75,3342
	SYSLOG_FACILITY_LOCAL4 =	LOG_LOCAL4,75,3342
	SYSLOG_FACILITY_LOCAL5 76,3380
	SYSLOG_FACILITY_LOCAL5 =	LOG_LOCAL5,76,3380
	SYSLOG_FACILITY_LOCAL6 77,3418
	SYSLOG_FACILITY_LOCAL6 =	LOG_LOCAL6,77,3418
	SYSLOG_FACILITY_LOCAL7 78,3456
	SYSLOG_FACILITY_LOCAL7 =	LOG_LOCAL778,3456
} 	log_facility_t;79,3493
	LOG_LEVEL_QUIET 86,3637
	LOG_LEVEL_FATAL,87,3659
	LOG_LEVEL_ERROR,88,3677
	LOG_LEVEL_INFO,89,3695
	LOG_LEVEL_VERBOSE,90,3712
	LOG_LEVEL_DEBUG,91,3732
	LOG_LEVEL_DEBUG2,92,3750
	LOG_LEVEL_DEBUG3,93,3769
	LOG_LEVEL_DEBUG4,94,3788
	LOG_LEVEL_DEBUG5,95,3807
	LOG_LEVEL_SCHED,96,3826
	LOG_LEVEL_END97,3844
}	log_level_t;98,3859
	log_level_t stderr_level;105,3979
	log_level_t syslog_level;106,4049
	log_level_t logfile_level;107,4119
	unsigned    prefix_level:prefix_level108,4189
	unsigned    buffered:buffered109,4259
} 	log_options_t;110,4329
#define LOG_OPTS_INITIALIZER	116,4429
#define LOG_OPTS_SYSLOG_DEFAULT	119,4519
#define LOG_OPTS_STDERR_ONLY	122,4614
#define SCHEDLOG_OPTS_INITIALIZER	125,4707
void	fatal(260,8424
int	error(261,8495
void	info(262,8565
void	verbose(263,8635
void	debug(264,8708
void	debug2(265,8779
void	debug3(266,8851
void	debug4(271,9073
void	debug5(272,9145

src/common/macros.h,1831
#define _MACROS_H 41,2179
typedef enum {false,false54,2355
typedef enum {false, true}true54,2355
typedef enum {false, true} bool;54,2355
#  define FALSE	65,2579
#  define TRUE	69,2622
#  define MAX(73,2662
#  define MIN(77,2725
#define SLURM_DIFFTIME(88,3123
#  define UINT64_SWAP_LE_BE(91,3244
# define HTON_int64(110,4536
# define NTOH_int64(111,4578
# define HTON_uint64(112,4620
# define NTOH_uint64(113,4663
# define HTON_int64(115,4712
# define NTOH_int64(116,4772
# define HTON_uint64(117,4831
# define NTOH_uint64(118,4879
#  define __CURRENT_FUNC__	127,5070
#    define __CURRENT_FUNC__	130,5154
#    define __CURRENT_FUNC__ 132,5200
#  define __STRING(137,5295
#  define __PRINTF_ATTR(143,5460
#  define __NORETURN_ATTR	145,5578
#  define __PRINTF_ATTR(148,5672
#  define __NORETURN_ATTR	149,5729
#    define _STMT_START 165,6394
#    define _STMT_END 166,6433
#      define _STMT_START 169,6519
#      define _STMT_END 170,6557
#      define _STMT_START 172,6611
#      define _STMT_END 173,6645
#  define slurm_mutex_init(180,6736
#  define slurm_mutex_destroy(190,7394
#  define slurm_mutex_lock(200,8052
#  define slurm_mutex_unlock(210,8710
#  define slurm_attr_init(221,9398
#  define slurm_attr_init(232,10073
#  define slurm_attr_destroy(241,10580
#  define slurm_mutex_init(249,10913
#  define slurm_mutex_destroy(250,10947
#  define slurm_mutex_lock(251,10984
#  define slurm_mutex_unlock(252,11018
#  define slurm_attr_init(253,11054
#  define slurm_attr_destroy(254,11086
#define slurm_atoul(258,11150
#define slurm_atoull(259,11198
#    define strong_alias(263,11286
#    define strong_alias(268,11497
#  undef  strndup274,11616
#  define strndup(275,11634
#define slurm_strftime(280,11795
#define FUZZY_EPSILON 294,12329
#define fuzzy_equal(295,12359

src/common/malloc.c,55
#    undef malloc8,146
     void * rpl_malloc 14,297

src/common/malloc.h,54
#     undef malloc5,117
#     undef rpl_malloc7,159

src/common/mpi.c,888
typedef struct slurm_mpi_ops 60,2691
	int          (*slurmstepd_prefork)slurmstepd_prefork61,2722
	int          (*slurmstepd_init)slurmstepd_init63,2809
	             (*client_prelaunch)client_prelaunch66,2931
	bool         (*client_single_task)client_single_task68,3026
	int          (*client_fini)client_fini69,3069
} slurm_mpi_ops_t;70,3135
static const char *syms[syms76,3257
static slurm_mpi_ops_t ops;84,3457
static plugin_context_t *g_context g_context85,3485
static pthread_mutex_t      context_lock 86,3528
static bool init_run 87,3598
int _mpi_init 89,3629
int mpi_hook_slurmstepd_init 152,4877
int mpi_hook_slurmstepd_prefork 166,5139
int mpi_hook_slurmstepd_task 174,5340
int mpi_hook_client_init 182,5541
mpi_hook_client_prelaunch(193,5739
bool mpi_hook_client_single_task_per_node 201,5907
int mpi_hook_client_fini 216,6236
int mpi_fini 224,6387

src/common/mpi.h,616
#define _SRUN_MPI_H40,2173
typedef struct slurm_mpi_context *slurm_mpi_context_t;slurm_mpi_context_t51,2339
typedef void mpi_plugin_client_state_t;52,2394
	uint32_t jobid;55,2452
	uint32_t stepid;56,2469
	slurm_step_layout_t *step_layout;step_layout57,2487
} mpi_plugin_client_info_t;58,2522
	uint32_t jobid;61,2568
	uint32_t stepid;62,2634
	uint32_t nnodes;63,2700
	uint32_t nodeid;64,2766
	uint32_t ntasks;65,2832
	uint32_t ltasks;66,2898
	uint32_t gtaskid;68,2965
	int      ltaskid;69,3031
	slurm_addr_t *self;self71,3098
	slurm_addr_t *client;client72,3119
} mpi_plugin_task_info_t;73,3142

src/common/net.c,312
#define	SOL_TCP	56,2511
#  define NET_DEFAULT_BACKLOG	73,2980
static short _sock_bind_wild(79,3077
int net_stream_listen(104,3791
#undef SOMAXCONN117,4065
#define SOMAXCONN	118,4082
int net_accept_stream(131,4227
int readn(148,4520
int net_set_low_water(171,4879
extern int net_set_keep_alive(183,5146

src/common/net.h,23
#define _NET_H41,2217

src/common/node_conf.c,1832
#define _DEBUG 80,3389
List config_list 83,3430
List feature_list 84,3492
List front_end_list 85,3556
time_t last_node_update 86,3628
struct node_record *node_record_table_ptr node_record_table_ptr87,3692
struct node_record **node_hash_table node_hash_table88,3761
int node_record_count 89,3835
uint16_t *cr_node_num_cores cr_node_num_cores91,3901
uint32_t *cr_node_cores_offset cr_node_cores_offset92,3937
static void _add_config_feature(110,4666
static int _build_single_nodeline_info(145,5739
static int _delete_config_record 317,10787
static void _dump_hash 334,11333
static struct node_record *_find_alias_node_record _find_alias_node_record361,12024
static int _hash_index 415,13276
static void _list_delete_config 439,13875
static void _list_delete_feature 456,14373
static int _list_find_config 474,14859
char * bitmap2node_name_sortable 491,15382
char * bitmap2node_name 528,16290
static int _list_find_feature 539,16566
static void _dump_front_end(554,16901
extern int build_all_frontend_info 572,17541
extern int build_all_nodeline_info 652,20136
extern void  build_config_feature_list(700,21553
extern struct config_record * create_config_record 746,23077
extern struct node_record *create_node_record create_node_record772,23903
extern struct node_record *find_node_record find_node_record819,25654
static struct node_record *_find_node_record _find_node_record830,25976
extern int init_node_conf 884,27300
extern void node_fini2 911,27975
extern int node_name2bitmap 944,28830
extern void purge_node_rec 989,29902
extern void rehash_node 1013,30561
extern int state_str2int(1038,31169
extern void cr_init_global_core_data(1068,32007
extern void cr_fini_global_core_data(1103,32997
extern uint32_t cr_get_coremap_offset(1111,33170
extern int adjust_cpus_nppcu(1120,33458

src/common/node_conf.h,2246
#define _HAVE_NODE_CONF_H42,2328
#define CONFIG_MAGIC	62,2731
#define FEATURE_MAGIC	63,2763
#define NODE_MAGIC	64,2796
struct config_record 66,2827
	uint32_t magic;67,2850
	uint16_t cpus;68,2910
	uint16_t boards;69,2973
	uint16_t sockets;70,3024
	uint16_t cores;71,3076
	uint16_t threads;72,3124
	uint32_t real_memory;73,3176
	uint32_t tmp_disk;74,3232
	uint32_t weight;75,3297
	char *feature;feature77,3378
	char *gres;gres78,3435
	char *nodes;nodes79,3498
	bitstr_t *node_bitmap;node_bitmap80,3557
struct features_record 86,3765
	uint32_t magic;87,3790
	char *name;name88,3850
	bitstr_t *node_bitmap;node_bitmap89,3888
struct node_record 93,4020
	uint32_t magic;94,4041
	char *name;name95,4098
	char *node_hostname;node_hostname96,4151
	uint16_t node_state;97,4201
	bool not_responding;100,4314
	time_t boot_time;102,4401
	time_t slurmd_start_time;104,4476
	time_t last_response;105,4532
	time_t last_idle;106,4590
	uint16_t cpus;107,4643
	uint16_t boards;108,4699
	uint16_t sockets;109,4752
	uint16_t cores;110,4805
	uint16_t threads;111,4854
	uint32_t real_memory;112,4907
	uint32_t tmp_disk;113,4964
	uint32_t up_time;114,5015
	struct config_record *config_ptr;config_ptr115,5065
	uint16_t part_cnt;116,5130
	struct part_record **part_pptr;part_pptr117,5189
	char *comm_name;comm_name119,5293
	uint16_t port;120,5351
	slurm_addr_t slurm_addr;121,5405
	uint16_t comp_job_cnt;122,5453
	uint16_t run_job_cnt;123,5517
	uint16_t sus_job_cnt;124,5577
	uint16_t no_share_job_cnt;125,5639
	char *reason;reason127,5729
	time_t reason_time;128,5784
	uint32_t reason_uid;130,5880
	char *features;features132,5971
	char *gres;gres135,6098
	List gres_list;138,6230
	uint32_t weight;140,6306
	char *arch;arch143,6433
	char *os;os144,6476
	struct node_record *node_next;node_next145,6524
	uint32_t node_rank;146,6594
	uint32_t basil_node_id;151,6785
	time_t down_time;153,6872
	acct_gather_energy_t *energy;energy155,6955
	ext_sensors_data_t *ext_sensors;ext_sensors156,6986
	dynamic_plugin_data_t *select_nodeinfo;select_nodeinfo157,7047
	uint32_t cpu_load;160,7182
	time_t cpu_load_time;161,7224
	uint16_t protocol_version;162,7282
	char *version;version163,7337

src/common/node_select.c,3155
const char *node_select_syms[node_select_syms67,3258
static int select_context_cnt 121,4746
static int select_context_default 122,4782
static slurm_select_ops_t *ops ops124,4823
static plugin_context_t **select_context select_context125,4862
static pthread_mutex_t select_context_lock 126,4911
static bool init_run 127,4983
extern void destroy_select_ba_request(131,5047
extern void print_select_ba_request(152,5488
extern int select_char2coord(178,6263
extern int slurm_select_init(190,6509
extern int slurm_select_fini(403,11806
extern int select_get_plugin_id_pos(426,12294
extern int select_get_plugin_id(443,12641
extern int select_g_state_save(455,12883
extern int select_g_state_restore(469,13217
extern int select_g_job_init(482,13520
extern bool select_g_node_ranking(497,13894
extern int select_g_node_init(511,14249
extern int select_g_block_init(525,14567
extern int select_g_job_test(554,15871
extern int select_g_job_begin(577,16554
extern int select_g_job_ready(592,16940
extern bool select_g_job_expand_allow(604,17157
extern int select_g_job_expand(619,17531
extern int select_g_job_resized(634,17905
extern int select_g_job_signal(650,18322
extern int select_g_job_fini(663,18645
extern int select_g_job_suspend(679,19093
extern int select_g_job_resume(695,19578
extern bitstr_t *select_g_step_pick_nodes(select_g_step_pick_nodes718,20404
extern int select_g_step_start(736,20869
extern int select_g_step_finish(749,21177
extern int select_g_pack_select_info(758,21365
extern int select_g_select_nodeinfo_pack(769,21681
extern int select_g_select_nodeinfo_unpack(797,22343
extern dynamic_plugin_data_t *select_g_select_nodeinfo_alloc(select_g_select_nodeinfo_alloc843,23587
extern int select_g_select_nodeinfo_free(861,24056
extern int select_g_select_nodeinfo_set_all(877,24362
extern int select_g_select_nodeinfo_set(886,24535
extern int select_g_select_nodeinfo_get(895,24729
extern dynamic_plugin_data_t *select_g_select_jobinfo_alloc(select_g_select_jobinfo_alloc916,25194
extern int select_g_select_jobinfo_free(937,25781
extern int select_g_select_jobinfo_set(953,26084
extern int select_g_select_jobinfo_get(978,26730
extern dynamic_plugin_data_t *select_g_select_jobinfo_copy(select_g_select_jobinfo_copy1003,27370
extern int select_g_select_jobinfo_pack(1026,28073
extern int select_g_select_jobinfo_unpack(1058,28989
extern char *select_g_select_jobinfo_sprint(select_g_select_jobinfo_sprint1111,30484
extern char *select_g_select_jobinfo_xstrdup(select_g_select_jobinfo_xstrdup1134,31079
extern int select_g_update_block 1157,31563
extern int select_g_update_sub_node 1170,31890
extern int select_g_fail_cnode 1184,32247
extern int select_g_get_info_from_plugin 1198,32633
extern int select_g_update_node_config 1215,33164
extern int select_g_update_node_state 1231,33623
extern int select_g_alter_node_cnt 1244,33939
extern int select_g_reconfigure 1260,34359
extern bitstr_t * select_g_resv_test(1280,35108
extern void select_g_ba_init(1291,35427
extern void select_g_ba_fini(1306,35759
extern int *select_g_ba_get_dims(select_g_ba_get_dims1321,36019

src/common/node_select.h,4108
#define _NODE_SELECT_H41,2246
#define NO_JOB_RUNNING 54,2572
#define NOT_FROM_CONTROLLER 55,2598
	bitstr_t *avail_nodes;avail_nodes58,2647
	struct job_record *job_ptr;job_ptr61,2805
	uint32_t max_nodes;67,3030
	uint32_t min_nodes;68,3104
	uint32_t req_nodes;69,3162
} select_will_run_t;70,3235
	bitstr_t *avail_mp_bitmap;avail_mp_bitmap76,3349
	char *blrtsimage;blrtsimage77,3410
	uint16_t conn_type[conn_type78,3472
	bool elongate;79,3541
	int elongate_count;80,3611
	List elongate_geos;82,3694
	void *geo_table;geo_table84,3772
	uint16_t geometry[geometry86,3864
	char *linuximage;linuximage87,3936
	char *mloaderimage;mloaderimage88,4000
	uint16_t deny_pass;89,4066
	int procs;94,4262
	char *ramdiskimage;ramdiskimage96,4342
	bool rotate;97,4408
	int rotate_count;98,4478
	char *save_name;save_name99,4540
	int size;100,4605
	uint16_t small16;101,4671
	uint16_t small32;104,4801
	uint16_t small64;107,4931
	uint16_t small128;110,5061
	uint16_t small256;113,5192
	uint16_t start[start116,5323
	int start_req;118,5408
	bool full_check;120,5485
} select_ba_request_t;127,5725
typedef struct slurm_select_ops 132,5770
	uint32_t	(*plugin_id)plugin_id133,5804
	int		(*state_save)state_save134,5828
	int		(*state_restore)state_restore135,5867
	int		(*job_init)job_init136,5908
	int		(*node_ranking)node_ranking137,5944
	int		(*node_init)node_init139,6020
	int		(*block_init)block_init141,6093
	int		(*job_test)job_test142,6133
	int		(*job_begin)job_begin151,6412
	int		(*job_ready)job_ready152,6462
	bool		(*job_expand_allow)job_expand_allow153,6512
	int		(*job_expand)job_expand154,6547
	int		(*job_resized)job_resized156,6641
	int		(*job_signal)job_signal158,6730
	int		(*job_fini)job_fini160,6800
	int		(*job_suspend)job_suspend161,6849
	int		(*job_resume)job_resume163,6924
	bitstr_t *      (*step_pick_nodes)step_pick_nodes165,6998
	int             (*step_start)step_start169,7167
	int             (*step_finish)step_finish170,7240
	int		(*pack_select_info)pack_select_info171,7313
	int		(*nodeinfo_pack)nodeinfo_pack175,7451
	int		(*nodeinfo_unpack)nodeinfo_unpack178,7558
	select_nodeinfo_t *(*nodeinfo_alloc)nodeinfo_alloc181,7668
	int		(*nodeinfo_free)nodeinfo_free182,7714
	int		(*nodeinfo_set_all)nodeinfo_set_all183,7768
	int		(*nodeinfo_set)nodeinfo_set184,7802
	int		(*nodeinfo_get)nodeinfo_get185,7855
	select_jobinfo_t *(*jobinfo_alloc)jobinfo_alloc190,8006
	int		(*jobinfo_free)jobinfo_free191,8050
	int		(*jobinfo_set)jobinfo_set192,8102
	int		(*jobinfo_get)jobinfo_get196,8222
	select_jobinfo_t *(*jobinfo_copy)jobinfo_copy200,8342
	int		(*jobinfo_pack)jobinfo_pack201,8406
	int		(*jobinfo_unpack)jobinfo_unpack204,8511
	char *		(*jobinfo_sprint)jobinfo_sprint207,8623
	char *		(*jobinfo_xstrdup)jobinfo_xstrdup210,8727
	int		(*update_block)update_block212,8801
	int		(*update_sub_node)update_sub_node214,8869
	int             (*fail_cnode)fail_cnode216,8939
	int		(*get_info_from_plugin)get_info_from_plugin217,9012
	int		(*update_node_config)update_node_config221,9140
	int		(*update_node_state)update_node_state222,9181
	int		(*alter_node_cnt)alter_node_cnt223,9240
	int		(*reconfigure)reconfigure225,9312
	bitstr_t *      (*resv_test)resv_test226,9342
	void            (*ba_init)ba_init231,9516
	void            (*ba_fini)ba_fini233,9617
	int *           (*ba_get_dims)ba_get_dims234,9666
} slurm_select_ops_t;236,9716
#define SELECT_MODE_BASE 427,15935
#define SELECT_MODE_FLAGS 428,15975
#define SELECT_MODE_RUN_NOW	430,16016
#define SELECT_MODE_TEST_ONLY	431,16052
#define SELECT_MODE_WILL_RUN	432,16090
#define SELECT_MODE_PREEMPT_FLAG 434,16128
#define SELECT_MODE_CHECK_FULL 435,16168
#define SELECT_IS_MODE_RUN_NOW(437,16209
#define SELECT_IS_MODE_TEST_ONLY(441,16342
#define SELECT_IS_MODE_WILL_RUN(444,16412
#define SELECT_IS_PREEMPT_SET(447,16480
#define SELECT_IS_CHECK_FULL_SET(450,16550
#define SELECT_IS_TEST(453,16621
#define SELECT_IS_PREEMPT_ON_FULL_TEST(456,16714
#define SELECT_IS_PREEMPTABLE_TEST(459,16821

src/common/optz.c,172
static const struct option opt_table_end 49,2251
struct option *optz_create(optz_create51,2317
void optz_destroy(58,2444
int optz_add(64,2511
int optz_append(88,2936

src/common/optz.h,54
#define _OPTZ_H39,2107
#  define _GNU_SOURCE46,2194

src/common/pack.c,1002
#define MAX_PACK_ARRAY_LEN	63,2837
#define MAX_PACK_MEM_LEN	64,2877
#define MAX_PACK_STR_LEN	65,2921
Buf create_buf(105,4562
void free_buf(125,4970
void grow_buf 133,5120
Buf init_buf(145,5385
void *xfer_buf_data(xfer_buf_data165,5829
void pack_time(179,6137
int unpack_time(196,6548
void 	packdouble(215,7014
		double d;219,7080
		uint64_t u;220,7092
int	unpackdouble(245,7827
		double d;249,7895
		uint64_t u;250,7907
void pack64(269,8305
int unpack64(290,8836
void pack32(306,9235
int unpack32(327,9759
void pack16_array(340,10080
int unpack16_array(353,10325
void pack32_array(369,10737
int unpack32_array(382,10982
void pack16(401,11433
int unpack16(422,11957
void pack8(439,12350
int unpack8(458,12858
void packmem(473,13285
int unpackmem_ptr(504,14162
int unpackmem(536,15047
int unpackmem_xmalloc(568,16012
int unpackmem_malloc(602,17029
void packstr_array(635,17938
int unpackstr_array(666,18794
void packmem_array(698,19627
int unpackmem_array(717,20151

src/common/pack.h,1704
#define _PACK_INCLUDED42,2355
#define BUF_MAGIC 61,2713
#define BUF_SIZE 62,2742
#define MAX_BUF_SIZE 63,2771
#define FLOAT_MULT 64,2847
struct slurm_buf 66,2875
	uint32_t magic;67,2894
	char *head;head68,2911
	uint32_t size;69,2924
	uint32_t processed;70,2940
typedef struct slurm_buf * Buf;73,2965
#define get_buf_data(75,2998
#define get_buf_offset(76,3041
#define set_buf_offset(77,3091
#define remaining_buf(78,3154
#define size_buf(79,3217
#define safe_pack_time(123,4780
#define safe_unpack_time(129,4941
#define safe_packdouble(136,5143
#define safe_unpackdouble(142,5307
#define safe_pack64(149,5517
#define safe_unpack64(155,5673
#define safe_pack32(162,5877
#define safe_unpack32(168,6033
#define safe_pack16(175,6237
#define safe_unpack16(181,6393
#define safe_pack8(188,6593
#define safe_unpack8(194,6747
#define safe_pack32_array(201,6944
#define safe_unpack16_array(207,7129
#define safe_unpack32_array(214,7432
#define safe_packmem(221,7657
#define safe_unpackmem(228,7881
#define safe_unpackmem_ptr(235,8097
#define safe_unpackmem_xmalloc(242,8320
#define safe_unpackmem_malloc(249,8550
#define safe_pack_bit_fmt(256,8778
#define safe_packstr(269,9145
#define packstr(285,9613
#define packnull(295,9921
#define pack_bit_fmt(301,10049
#define pack_bit_str(313,10366
#define unpack_bit_str(327,10779
#define unpackstr_ptr	342,11268
#define unpackstr_malloc	345,11340
#define unpackstr_xmalloc	348,11417
#define safe_unpackstr_malloc	351,11496
#define safe_unpackstr_xmalloc	354,11583
#define safe_packstr_array(357,11672
#define safe_unpackstr_array(364,11910
#define safe_packmem_array(371,12136
#define safe_unpackmem_array(378,12355

src/common/parse_config.c,1918
#define BUFFER_SIZE 82,3671
#define CONF_HASH_LEN 84,3697
static regex_t keyvalue_re;86,3724
static char *keyvalue_pattern keyvalue_pattern87,3752
static bool keyvalue_initialized 94,3992
struct s_p_values 96,4035
	char *key;key97,4055
	int type;98,4067
	int data_count;99,4078
	void *data;data100,4095
	int (*handler)handler101,4108
	void (*destroy)destroy104,4253
	s_p_values_t *next;next105,4283
static int _conf_hashtbl_index(111,4352
static void _conf_hashtbl_insert(121,4556
static s_p_values_t *_conf_hashtbl_lookup(_conf_hashtbl_lookup135,4808
s_p_hashtbl_t *s_p_hashtbl_create(s_p_hashtbl_create153,5135
static void _conf_hashtbl_swap_data(180,5815
static void _conf_file_values_free(197,6216
void s_p_hashtbl_destroy(227,6714
static void _keyvalue_regex_init(243,6986
static int _keyvalue_regex(263,7651
static int _strip_continuation(297,8447
static void _strip_cr_nl(327,8995
static void _strip_comments(345,9341
static void _strip_escapes(369,9809
static void _compute_hash_val(383,10069
static int _get_next_line(412,10690
static int _handle_string(439,11265
static int _handle_long(464,11777
static int _handle_uint16(507,12753
static int _handle_uint32(560,14034
static int _handle_pointer(617,15405
static int _handle_array(642,15933
static int _handle_boolean(666,16455
static void _handle_keyvalue_match(719,17865
static int _line_is_space(757,18743
int s_p_parse_line(778,19024
static int _parse_next_key(809,19753
static int _parse_include_directive(848,20768
int s_p_parse_file(881,21512
void s_p_hashtbl_merge(978,24026
int s_p_parse_pair(1019,25042
int s_p_get_string(1071,26606
int s_p_get_long(1109,27460
int s_p_get_uint16(1147,28307
int s_p_get_uint32(1186,29175
int s_p_get_pointer(1225,30049
int s_p_get_array(1269,31238
int s_p_get_boolean(1309,32145
void s_p_dump_values(1340,32712
extern void transfer_s_p_options(1409,34233

src/common/parse_config.h,572
#define _PARSE_CONFIG_H44,2273
typedef struct s_p_values s_p_values_t;155,7998
typedef s_p_values_t * s_p_hashtbl_t;156,8038
typedef enum slurm_parser_enum 158,8077
	S_P_IGNORE 159,8110
	S_P_STRING,160,8127
	S_P_LONG,161,8140
	S_P_UINT16,162,8151
	S_P_UINT32,163,8164
	S_P_POINTER,164,8177
	S_P_ARRAY,165,8191
	S_P_BOOLEAN166,8203
} slurm_parser_enum_t;167,8216
typedef struct conf_file_options 169,8240
	char *key;key170,8275
	slurm_parser_enum_t type;171,8287
	int (*handler)handler172,8314
	void (*destroy)destroy175,8459
} s_p_options_t;176,8489

src/common/parse_spec.c,196
#  define _GNU_SOURCE45,2217
#define BUFFER_SIZE 62,2535
#define SEPCHARS 63,2560
slurm_parser 86,3616
_load_float 138,4911
_load_integer 176,6118
_load_long 233,7807
load_string 291,9588

src/common/parse_spec.h,32
#define	_SLURM_PARSE_H_40,2165

src/common/parse_time.c,800
#  define __USE_ISOC99 51,2352
#define _RUN_STAND_ALONE 58,2475
time_t     time_now;60,2503
struct tm *time_now_tm;time_now_tm61,2524
typedef struct unit_names 63,2549
	char *name;name64,2577
	int name_len;65,2590
	int multiplier;66,2605
} unit_names_t;67,2622
static unit_names_t un[un68,2638
_get_dash(86,2993
_get_num_colon(108,3222
_is_valid_timespec(130,3449
static int _get_delta(188,4361
_get_time(235,5414
static int _get_date(324,7330
extern time_t parse_time(447,10474
int main(629,15194
static char *_relative_date_fmt(_relative_date_fmt657,15857
slurm_make_time_str 697,17104
extern int time_str2secs(754,18564
extern int time_str2mins(841,20205
extern void secs2time_str(849,20374
extern void mins2time_str(875,20991
extern char *mon_abbr(mon_abbr901,21590

src/common/parse_time.h,31
#define _PARSE_TIME_H_41,2191

src/common/plugin.c,443
static char *_dlerror(_dlerror79,3271
const char * plugin_strerror(90,3433
plugin_peek(113,4040
plugin_load_from_file(154,5025
plugin_load_and_link(213,6437
plugin_unload(293,8287
plugin_get_sym(307,8499
plugin_get_name(316,8663
plugin_get_type(325,8832
plugin_get_version(334,8997
plugin_get_syms(344,9189
extern plugin_context_t *plugin_context_create(plugin_context_create367,9559
extern int plugin_context_destroy(448,11629

src/common/plugin.h,586
#define __GENERIC_PLUGIN_H__40,2172
#define PLUGIN_NAME	67,2795
#define PLUGIN_TYPE	68,2830
#define PLUGIN_VERSION	69,2865
typedef void *plugin_handle_t;plugin_handle_t80,3281
	plugin_handle_t	cur_plugin;83,3330
	void *plugin_list;plugin_list84,3359
	char *type;type85,3379
} plugin_context_t;86,3392
#define PLUGIN_INVALID_HANDLE 89,3414
	EPLUGIN_SUCCESS 92,3471
	EPLUGIN_NOTFOUND,93,3539
	EPLUGIN_ACCESS_ERROR,94,3607
	EPLUGIN_DLOPEN_FAILED,95,3675
	EPLUGIN_INIT_FAILED,96,3743
	EPLUGIN_MISSING_NAME,97,3811
	EPLUGIN_MISSING_SYMBOL,98,3879
} plugin_err_t;99,3947

src/common/plugrack.c,1114
#    define NAMLEN(45,2304
#    define dirent 47,2386
#    define NAMLEN(48,2412
#      define strchr 55,2581
#      define strrchr 56,2608
typedef struct _plugrack_entry 114,4371
	const char *full_type;full_type115,4404
	const char *fq_path;fq_path116,4428
	plugin_handle_t	plug;117,4450
	int refcount;118,4473
} plugrack_entry_t;119,4488
struct _plugrack 134,4948
	List entries;135,4967
	const char *major_type;major_type136,4982
	uid_t uid;137,5007
	uint8_t     paranoia;138,5019
#define PLUGRACK_UID_NOBODY	141,5046
plugrack_entry_destructor(152,5401
accept_path_paranoia(183,6415
plugrack_t plugrack_create(221,7199
plugrack_destroy(238,7578
plugrack_set_major_type(270,8337
plugrack_set_paranoia(294,8783
plugrack_add_plugin_path(311,9023
plugrack_read_dir(334,9538
_plugrack_read_single_dir(364,10142
_so_file 484,13081
_match_major 502,13512
plugrack_read_cache(518,13850
plugrack_purge_idle(528,13979
plugrack_load_all(551,14401
plugrack_write_cache(572,14770
plugrack_use_by_type(581,14906
plugrack_finished_with_plugin(621,15817
plugrack_print_all_plugin(649,16354

src/common/plugrack.h,302
#define __PLUGRACK_H__40,2171
typedef struct _plugrack * plugrack_t;48,2315
#define PLUGRACK_PARANOIA_NONE	85,3391
#define PLUGRACK_PARANOIA_DIR_OWN	86,3429
#define PLUGRACK_PARANOIA_DIR_WRITABLE	87,3469
#define PLUGRACK_PARANOIA_FILE_OWN	88,3514
#define PLUGRACK_PARANOIA_FILE_WRITABLE	89,3555

src/common/plugstack.c,6659
#define REQUIRED 67,2828
#define OPTIONAL 68,2856
#define INCLUDE 69,2884
struct spank_plugin_operations 71,2912
	spank_f *init;init72,2945
	spank_f *slurmd_init;slurmd_init73,2961
	spank_f *job_prolog;job_prolog74,2984
	spank_f *init_post_opt;init_post_opt75,3006
	spank_f *local_user_init;local_user_init76,3031
	spank_f *user_init;user_init77,3058
	spank_f *task_init_privileged;task_init_privileged78,3079
	spank_f *user_task_init;user_task_init79,3111
	spank_f *task_post_fork;task_post_fork80,3137
	spank_f *task_exit;task_exit81,3163
	spank_f *job_epilog;job_epilog82,3184
	spank_f *slurmd_exit;slurmd_exit83,3206
	spank_f *exit;exit84,3229
const int n_spank_syms 87,3249
const char *spank_syms[spank_syms88,3278
struct spank_plugin 104,3670
	const char *name;name105,3692
	char *fq_path;fq_path106,3711
	plugin_handle_t plugin;107,3727
	bool required;108,3752
	int ac;109,3768
	char **argv;argv110,3777
	struct spank_plugin_operations ops;111,3791
	struct spank_option *opts;opts112,3828
	struct spank_stack *stack;stack113,3856
#define SPANK_OPTION_ENV_PREFIX 120,3921
struct spank_plugin_opt 122,3977
	struct spank_option *opt;opt123,4003
	struct spank_plugin *plugin;plugin124,4075
	int optval;125,4147
	int found:found126,4219
	int disabled:disabled127,4291
	char *optarg;optarg128,4363
enum spank_context_type 134,4503
	S_TYPE_NONE,135,4529
	S_TYPE_LOCAL,136,4543
	S_TYPE_REMOTE,137,4601
	S_TYPE_ALLOCATOR,138,4659
	S_TYPE_SLURMD,139,4717
	S_TYPE_JOB_SCRIPT,140,4775
typedef enum step_fn 146,4873
	SPANK_INIT 147,4896
	SPANK_SLURMD_INIT,148,4913
	SPANK_JOB_PROLOG,149,4933
	SPANK_INIT_POST_OPT,150,4952
	LOCAL_USER_INIT,151,4974
	STEP_USER_INIT,152,4992
	STEP_TASK_INIT_PRIV,153,5009
	STEP_USER_TASK_INIT,154,5031
	STEP_TASK_POST_FORK,155,5053
	STEP_TASK_EXIT,156,5075
	SPANK_JOB_EPILOG,157,5092
	SPANK_SLURMD_EXIT,158,5111
	SPANK_EXIT159,5131
} step_fn_t;160,5143
struct job_script_info 165,5210
	uint32_t  jobid;166,5235
	uid_t     uid;167,5253
struct spank_handle 170,5273
#   define SPANK_MAGIC 171,5295
	int                  magic;172,5329
	struct spank_plugin *plugin;plugin173,5402
	step_fn_t            phase;174,5475
	void               * job;175,5548
	stepd_step_task_info_t * task;176,5621
	struct spank_stack  *stack;stack178,5711
struct spank_stack 184,5862
	enum spank_context_type type;185,5883
	List plugin_list;186,5956
	List option_cache;187,6023
	int  spank_optval;188,6096
	const char * plugin_path;189,6169
static struct spank_stack *global_spank_stack global_spank_stack195,6288
static void spank_stack_destroy 209,6956
spank_stack_create 220,7220
static List get_global_option_cache 244,7788
static int plugin_in_list 253,7930
static void _argv_append(268,8213
   CF_ERROR 277,8421
   CF_OPTIONAL,278,8438
   CF_REQUIRED,279,8454
   CF_INCLUDE,280,8470
} cf_line_t;281,8485
static cf_line_t _plugin_stack_line_type 283,8499
_plugin_stack_parse_line(300,8890
static struct spank_plugin *_spank_plugin_create(_spank_plugin_create342,9589
void _spank_plugin_destroy(381,10609
_spank_plugin_find 404,10980
spank_stack_plugin_valid_for_context 445,11749
_spank_stack_process_line(473,12317
static int _spank_stack_load(543,13909
static int _spank_conf_include 575,14546
_spank_handle_init(629,15595
static const char *_step_fn_name(_step_fn_name648,16018
static spank_f *spank_plugin_get_fn spank_plugin_get_fn683,16775
static int _do_call_stack(719,17701
struct spank_stack *spank_stack_init(spank_stack_init765,18660
int _spank_init(774,18884
static int spank_stack_post_opt 785,19134
static int spank_init_remote 817,19934
int spank_init 828,20165
int spank_init_allocator 836,20303
int spank_slurmd_init 841,20386
int spank_init_post_opt 846,20463
int spank_user(860,20826
int spank_local_user(865,20941
int spank_task_privileged(870,21076
int spank_user_task(875,21222
int spank_task_post_fork(880,21363
int spank_task_exit(885,21509
int spank_slurmd_exit 890,21645
int spank_fini(899,21845
static int spank_job_script 912,22121
int spank_job_prolog 930,22514
int spank_job_epilog 935,22625
static int _spank_next_option_val(944,22772
static struct spank_option * _spank_option_copy(949,22871
static void _spank_option_destroy(968,23286
static struct spank_plugin_opt *_spank_plugin_opt_create(_spank_plugin_opt_create976,23429
void _spank_plugin_opt_destroy(994,23847
static int _opt_by_val(1001,23990
static int _opt_by_name(1006,24097
_spank_option_register(1012,24230
spank_err_t spank_option_register(1053,25344
static int _spank_plugin_options_cache(1067,25657
static int _add_one_option(1080,25908
struct option *spank_option_table_create(spank_option_table_create1108,26471
void spank_option_table_destroy(1142,27182
int spank_process_option(1147,27261
_find_word_boundary(1180,27935
_get_next_segment 1211,28406
_term_columns 1245,29000
_spank_opt_print(1262,29214
int spank_print_options(1309,30201
#define OPT_TYPE_SPANK 1331,30687
static char _canonical_char 1333,30718
static char * _opt_env_name 1344,30891
static int _option_setenv 1376,31548
static int spank_stack_set_remote_options_env 1391,31919
int spank_set_remote_options(1413,32369
struct opt_find_args 1443,32985
	const char *optname;optname1444,33008
	const char *plugin_name;plugin_name1445,33030
static int _opt_find(1448,33060
spank_stack_find_option_by_name(1459,33324
spank_option_getopt 1501,34246
int spank_get_remote_options_env 1576,35932
spank_stack_get_remote_options_env 1583,36065
int spank_get_remote_options(1618,36803
spank_stack_get_remote_options(1624,36935
int spank_clear_remote_options_env 1655,37663
static int tasks_execd 1680,38155
_global_to_local_id(1688,38351
static int _valid_in_local_context 1707,38773
static int _valid_in_allocator_context 1727,39074
static spank_err_t _check_spank_item_validity 1738,39236
const char * spank_strerror 1789,40429
int spank_symbol_supported 1821,41260
int spank_remote(1836,41469
spank_context_t spank_context 1846,41652
spank_err_t spank_get_item(1868,42099
spank_err_t spank_env_access_check 2169,49324
spank_err_t spank_getenv(2181,49613
spank_err_t spank_setenv(2202,50040
spank_err_t spank_unsetenv 2225,50516
const char *dyn_spank_get_job_env dyn_spank_get_job_env2244,50867
int dyn_spank_set_job_env 2256,51080
extern int dyn_spank_unset_job_env 2268,51350
static spank_err_t spank_job_control_access_check 2280,51557
spank_err_t spank_job_control_getenv 2295,51867
spank_err_t spank_job_control_setenv 2317,52328
spank_err_t spank_job_control_unsetenv 2334,52700

src/common/plugstack.h,322
#define _PLUGSTACK_H39,2108
#  define _GNU_SOURCE46,2200
struct spank_launcher_job_info 58,2404
	uid_t       uid;59,2437
	gid_t       gid;60,2455
	uint32_t    jobid;61,2473
	uint32_t    stepid;62,2493
	slurm_step_layout_t *step_layout;step_layout63,2514
	int         argc;64,2549
	char      **argv;argv65,2568

src/common/print_fields.c,630
int print_fields_parsable_print 43,2315
int print_fields_have_header 44,2352
extern void destroy_print_field(46,2387
extern void print_fields_header(56,2543
extern void print_fields_date(95,3530
extern void print_fields_str(112,4053
extern void print_fields_int(147,4857
extern void print_fields_uint16(177,5678
extern void print_fields_uint32(205,6430
extern void print_fields_uint64(232,7137
extern void print_fields_double(260,7957
extern void print_fields_long_double(287,8678
extern void print_fields_time(317,9431
extern void print_fields_time_from_secs(346,10250
extern void print_fields_char_list(376,11084

src/common/print_fields.h,361
#define __PRINT_FIELDS_H__40,2239
	int len;72,2757
	char *name;name73,2805
	void (*print_routine)print_routine74,2854
	uint16_t type;75,2923
} print_field_t;76,2975
	PRINT_FIELDS_PARSABLE_NOT 79,3000
	PRINT_FIELDS_PARSABLE_ENDING,80,3032
	PRINT_FIELDS_PARSABLE_NO_ENDING81,3063
#define print_fields_uint 110,4310
#define print_fields_time 111,4356

src/common/proc_args.c,1115
#define __USE_ISOC9950,2352
#  define _GNU_SOURCE58,2452
#  define SYSTEM_DIMENSIONS 62,2508
void print_slurm_version(86,3083
void print_gres_help(92,3191
void set_distribution(103,3393
task_dist_states_t verify_dist_type(149,4473
static uint16_t _get_conn_type(198,5804
extern void verify_conn_type(233,6791
int verify_geometry(278,7892
char * base_name(314,8751
long str_to_mbytes(338,9184
_str_to_nodes(365,9817
bool verify_node_count(393,10428
bool verify_node_list(457,12089
bool get_resource_arg_range(497,13176
bool verify_socket_core_thread_count(571,14693
bool verify_hint(638,16616
uint16_t parse_mail_type(697,18300
char *print_mail_type(print_mail_type717,18776
_freeF(738,19183
_create_path_list(744,19233
search_path(778,19734
char *print_commandline(print_commandline815,20468
char *print_geometry(print_geometry831,20783
int get_signal_opts(855,21340
int sig_name2num(895,22114
extern int parse_uint32(943,23172
extern int parse_uint16(975,23905
void print_db_notok(1006,24702
static bool _check_is_pow_of_2(1024,25405
extern void bg_figure_nodes_tasks(1032,25642

src/common/proc_args.h,70
#define _PROC_ARGS_H40,2203
#define format_task_dist_states(54,2400

src/common/read_config.c,4117
slurm_ctl_conf_t slurmctld_conf;102,4137
static pthread_mutex_t conf_lock 104,4171
static s_p_hashtbl_t *conf_hashtbl conf_hashtbl105,4233
static slurm_ctl_conf_t *conf_ptr conf_ptr106,4276
static bool conf_initialized 107,4329
static s_p_hashtbl_t *default_frontend_tbl;default_frontend_tbl109,4368
static s_p_hashtbl_t *default_nodename_tbl;default_nodename_tbl110,4412
static s_p_hashtbl_t *default_partition_tbl;default_partition_tbl111,4456
#define NAME_HASH_LEN 116,4615
typedef struct names_ll_s 117,4641
	char *alias;alias118,4669
	char *hostname;hostname119,4698
	char *address;address120,4734
	uint16_t port;121,4765
	uint16_t cpus;122,4781
	uint16_t boards;123,4797
	uint16_t sockets;124,4815
	uint16_t cores;125,4834
	uint16_t threads;126,4851
	slurm_addr_t addr;127,4870
	bool addr_initialized;128,4890
	struct names_ll_s *next_alias;next_alias129,4914
	struct names_ll_s *next_hostname;next_hostname130,4946
} names_ll_t;131,4981
static bool nodehash_initialized 132,4995
static names_ll_t *host_to_node_hashtbl[host_to_node_hashtbl133,5037
static names_ll_t *node_to_host_hashtbl[node_to_host_hashtbl134,5102
s_p_options_t slurm_conf_options[slurm_conf_options158,6203
static bool _is_valid_path 341,12317
static int _defunct_option(404,13433
static void _set_node_prefix(417,13901
static int _parse_frontend(449,14678
static int _parse_nodename(545,17423
extern void destroy_frontend(812,25335
extern int list_find_frontend 831,25795
static void _destroy_nodename(844,26077
int slurm_conf_frontend_array(859,26348
int slurm_conf_nodename_array(911,27903
static int _parse_partitionname(925,28164
static void _destroy_partitionname(1248,37862
int slurm_conf_partition_array(1264,38195
static int _parse_downnodes(1279,38477
static void _destroy_downnodes(1311,39228
extern int slurm_conf_downnodes_array(1320,39407
static void _free_name_hashtbl(1334,39687
static void _init_name_hashtbl(1355,40054
static int _get_hash_idx(1360,40105
static void _push_to_hashtbls(1381,40570
static int _register_conf_node_aliases(1460,42716
static int _register_front_ends(1609,46968
static void _init_slurmd_nodehash(1659,48286
static char *_internal_get_hostname(_internal_get_hostname1689,49033
extern char *slurm_conf_get_hostname(slurm_conf_get_hostname1710,49424
extern char *slurm_conf_get_nodename(slurm_conf_get_nodename1727,49817
extern char *slurm_conf_get_aliases(slurm_conf_get_aliases1775,50942
extern char *slurm_conf_get_nodeaddr(slurm_conf_get_nodeaddr1810,51682
extern char *slurm_conf_get_nodename_from_addr(slurm_conf_get_nodename_from_addr1843,52380
extern char *slurm_conf_get_aliased_nodename(slurm_conf_get_aliased_nodename1879,53354
extern uint16_t slurm_conf_get_port(1928,54708
extern void slurm_reset_alias(1957,55255
extern int slurm_conf_get_addr(1992,55971
extern int slurm_conf_get_cpus_bsct(2032,56895
gethostname_short 2074,57782
free_slurm_conf 2104,58514
init_slurm_conf 2212,62712
static int _config_is_storage(2373,69518
static int _init_slurm_conf(2437,71502
_destroy_slurm_conf(2471,72466
slurm_conf_init(2505,73570
static int _internal_reinit(2523,73948
slurm_conf_reinit(2558,74929
slurm_conf_mutex_init(2570,75113
slurm_conf_install_fork_handlers(2576,75197
slurm_conf_destroy(2585,75388
slurm_conf_lock(2602,75652
slurm_conf_unlock(2623,76155
static void _normalize_debug_level(2629,76293
static uint16_t _health_node_state(2640,76631
_validate_and_set_defaults(2677,77667
slurm_conf_expand_slurmd_path(3952,120274
extern char * prolog_flags2str(3970,120696
extern uint16_t prolog_str2flags(3988,121046
extern char * debug_flags2str(4017,121632
extern uint32_t debug_str2flags(4163,124648
extern char * reconfig_flags2str(4244,127192
extern uint16_t reconfig_str2flags(4267,127680
extern void destroy_config_key_pair(4294,128247
extern void pack_config_key_pair(4305,128473
extern int unpack_config_key_pair(4312,128675
extern int sort_key_pairs(4330,129131
extern char *get_extra_conf_path(get_extra_conf_path4347,129471
extern bool run_in_daemon(4362,129746

src/common/read_config.h,6522
#define _READ_CONFIG_H44,2392
#define ACCOUNTING_ENFORCE_ASSOCS 56,2727
#define ACCOUNTING_ENFORCE_LIMITS 57,2768
#define ACCOUNTING_ENFORCE_WCKEYS 58,2809
#define ACCOUNTING_ENFORCE_QOS 59,2850
#define ACCOUNTING_ENFORCE_SAFE 60,2891
#define ACCOUNTING_ENFORCE_NO_JOBS 61,2932
#define ACCOUNTING_ENFORCE_NO_STEPS 62,2974
#define DEFAULT_ACCOUNTING_DB 64,3018
#define DEFAULT_ACCOUNTING_ENFORCE 65,3069
#define DEFAULT_ACCOUNTING_STORAGE_TYPE 66,3107
#define DEFAULT_AUTH_TYPE 67,3173
#define DEFAULT_BATCH_START_TIMEOUT 68,3221
#define DEFAULT_COMPLETE_WAIT 69,3260
#define DEFAULT_CRYPTO_TYPE 70,3298
#define DEFAULT_EPILOG_MSG_TIME 71,3348
#define DEFAULT_EXT_SENSORS_TYPE 72,3389
#define DEFAULT_FAST_SCHEDULE 73,3444
#define DEFAULT_FIRST_JOB_ID 74,3482
#define DEFAULT_GET_ENV_TIMEOUT 75,3520
#define DEFAULT_GROUP_INFO 76,3558
#define DEFAULT_INACTIVE_LIMIT 78,3667
#define DEFAULT_JOB_ACCT_GATHER_TYPE 79,3705
#define JOB_ACCT_GATHER_TYPE_NONE 80,3765
#define DEFAULT_JOB_ACCT_GATHER_FREQ 81,3821
#define DEFAULT_ACCT_GATHER_ENERGY_TYPE 82,3864
#define DEFAULT_ACCT_GATHER_PROFILE_TYPE 83,3930
#define DEFAULT_ACCT_GATHER_INFINIBAND_TYPE 84,3998
#define DEFAULT_ACCT_GATHER_FILESYSTEM_TYPE 85,4072
#define ACCOUNTING_STORAGE_TYPE_NONE 86,4146
#define DEFAULT_CORE_SPEC_PLUGIN 87,4209
#define DEFAULT_DISABLE_ROOT_JOBS 88,4262
#define DEFAULT_ENFORCE_PART_LIMITS 89,4300
#define DEFAULT_JOB_CKPT_DIR 90,4338
#define DEFAULT_JOB_COMP_TYPE 91,4398
#define DEFAULT_JOB_COMP_LOC 92,4449
#define DEFAULT_JOB_COMP_DB 93,4514
#define DEFAULT_JOB_CONTAINER_PLUGIN 94,4569
#define DEFAULT_KEEP_ALIVE_TIME 95,4627
#define DEFAULT_KILL_ON_BAD_EXIT 96,4683
#define DEFAULT_KILL_TREE 97,4721
#define DEFAULT_KILL_WAIT 98,4759
#  define DEFAULT_LAUNCH_TYPE 101,4849
#  define DEFAULT_LAUNCH_TYPE 103,4929
#  define DEFAULT_LAUNCH_TYPE 105,5035
#  define DEFAULT_LAUNCH_TYPE 107,5094
#define DEFAULT_MAIL_PROG 110,5155
#define DEFAULT_MAX_ARRAY_SIZE 111,5203
#define DEFAULT_MAX_JOB_COUNT 112,5244
#define DEFAULT_MAX_JOB_ID 113,5286
#define DEFAULT_MAX_STEP_COUNT 114,5333
#define DEFAULT_MEM_PER_CPU 115,5375
#define DEFAULT_MAX_MEM_PER_CPU 116,5413
#define DEFAULT_MIN_JOB_AGE 117,5451
#define DEFAULT_MPI_DEFAULT 118,5491
#define DEFAULT_MSG_TIMEOUT 119,5534
#  define DEFAULT_CHECKPOINT_TYPE 121,5642
#  define DEFAULT_PROCTRACK_TYPE 122,5695
#  define DEFAULT_CHECKPOINT_TYPE 124,5753
#    define DEFAULT_PROCTRACK_TYPE 126,5888
#    define DEFAULT_PROCTRACK_TYPE 128,5954
#define DEFAULT_PREEMPT_TYPE 131,6025
#define DEFAULT_PRIORITY_DECAY 132,6076
#define DEFAULT_PRIORITY_CALC_PERIOD 133,6132
#define DEFAULT_PRIORITY_TYPE 134,6190
#define DEFAULT_RECONF_KEEP_PART_STATE 135,6243
#define DEFAULT_RETURN_TO_SERVICE 136,6284
#define DEFAULT_RESUME_RATE 137,6322
#define DEFAULT_RESUME_TIMEOUT 138,6362
#define DEFAULT_SAVE_STATE_LOC 139,6401
#define DEFAULT_SCHEDROOTFILTER 140,6450
#define DEFAULT_SCHEDULER_PORT 141,6488
#define DEFAULT_SCHED_LOG_LEVEL 142,6529
#define DEFAULT_SCHED_TIME_SLICE 143,6567
#define DEFAULT_SCHEDTYPE 144,6606
#  define DEFAULT_SELECT_TYPE 146,6732
#  define DEFAULT_SELECT_TYPE 148,6815
#  define DEFAULT_SELECT_TYPE 150,6896
#  define DEFAULT_SELECT_TYPE 152,6952
#define DEFAULT_SLURMCTLD_PIDFILE 154,7011
#define DEFAULT_SLURMCTLD_TIMEOUT 155,7072
#define DEFAULT_SLURMD_PIDFILE 156,7112
#define DEFAULT_SLURMD_TIMEOUT 157,7170
#define DEFAULT_SPOOLDIR 158,7210
#define DEFAULT_STORAGE_HOST 159,7266
#define DEFAULT_STORAGE_LOC 160,7314
#define DEFAULT_STORAGE_USER 161,7379
#define DEFAULT_STORAGE_PORT 162,7422
#define DEFAULT_MYSQL_PORT 163,7460
#define DEFAULT_SUSPEND_RATE 164,7501
#define DEFAULT_SUSPEND_TIME 165,7540
#define DEFAULT_SUSPEND_TIMEOUT 166,7578
#define DEFAULT_SWITCH_TYPE 167,7617
#define DEFAULT_TASK_PLUGIN 168,7667
#define DEFAULT_TMP_FS 169,7715
#  define DEFAULT_TOPOLOGY_PLUGIN 171,7805
#  define DEFAULT_TOPOLOGY_PLUGIN 173,7869
#define DEFAULT_WAIT_TIME 175,7930
#  define DEFAULT_TREE_WIDTH 176,7968
#define DEFAULT_UNKILLABLE_TIMEOUT 177,8007
#define DEFAULT_MAX_TASKS_PER_NODE 178,8060
typedef struct slurm_conf_frontend 180,8101
	char *allow_groups;allow_groups181,8138
	char *allow_users;allow_users182,8187
	char *deny_groups;deny_groups183,8234
	char *deny_users;deny_users184,8281
	char *frontends;frontends185,8326
	char *addresses;addresses186,8370
	uint16_t port;187,8417
	char *reason;reason188,8464
	uint16_t node_state;189,8517
} slurm_conf_frontend_t;192,8630
typedef struct slurm_conf_node 194,8656
	char *nodenames;nodenames195,8689
	char *hostnames;hostnames196,8707
	char *addresses;addresses197,8725
	char *gres;gres198,8743
	char *feature;feature199,8806
	char *port_str;port_str200,8863
	uint16_t cpus;201,8880
	uint16_t boards;202,8937
	uint16_t sockets;203,8988
	uint16_t cores;204,9046
	uint16_t threads;205,9101
	uint32_t real_memory;206,9159
	char *reason;reason207,9215
	char *state;state208,9230
	uint32_t tmp_disk;209,9244
	uint32_t weight;210,9309
} slurm_conf_node_t;212,9390
typedef struct slurm_conf_partition 214,9412
	char *allow_alloc_nodes;allow_alloc_nodes215,9450
	char *allow_accounts;allow_accounts218,9563
	char *allow_groups;allow_groups220,9654
	char *allow_qos;allow_qos222,9739
	char *deny_accounts;deny_accounts224,9832
	char *deny_qos;deny_qos226,9930
	char *alternate;alternate228,10016
	uint16_t cr_type;229,10068
	uint32_t def_mem_per_cpu;231,10174
	bool default_flag;232,10243
	uint32_t default_time;233,10294
	uint16_t disable_root_jobs;234,10344
	uint32_t grace_time;237,10467
	bool     hidden_flag;238,10528
	bool     lln_flag;239,10580
	uint32_t max_cpus_per_node;240,10643
	uint16_t max_share;241,10710
	uint32_t max_time;242,10769
	uint32_t max_mem_per_cpu;243,10815
	uint32_t max_nodes;244,10884
	uint32_t min_nodes;245,10931
	char	*name;name246,10966
	char 	*nodes;nodes247,11008
	uint16_t preempt_mode;248,11066
	uint16_t priority;249,11132
	bool     req_resv_flag;250,11187
	bool     root_only_flag;252,11274
	uint16_t state_up;254,11369
	uint32_t total_nodes;255,11433
	uint32_t total_cpus;256,11501
} slurm_conf_partition_t;257,11567
typedef struct slurm_conf_downnodes 259,11594
	char *nodenames;nodenames260,11632
	char *reason;reason261,11650
	char *state;state262,11665
} slurm_conf_downnodes_t;263,11679
	char *name;name266,11723
	char *value;value267,11736
} config_key_pair_t;268,11750

src/common/safeopen.c,25
FILE * safeopen(59,2447

src/common/safeopen.h,135
#define _SAFEOPEN_H40,2118
#define SAFEOPEN_LINK_OK	50,2295
#define SAFEOPEN_CREATE_ONLY	51,2361
#define SAFEOPEN_NOCREATE	52,2432

src/common/slurm_accounting_storage.c,6163
#  define _GNU_SOURCE48,2369
typedef struct slurm_acct_storage_ops 70,2874
	void *(*get_conn)get_conn71,2914
	int  (*close_conn)close_conn74,3053
	int  (*commit)commit75,3099
	int  (*add_users)add_users76,3157
	int  (*add_coord)add_coord78,3240
	int  (*add_accts)add_accts81,3363
	int  (*add_clusters)add_clusters83,3446
	int  (*add_associations)add_associations85,3532
	int  (*add_qos)add_qos87,3622
	int  (*add_res)add_res89,3704
	int  (*add_wckeys)add_wckeys91,3786
	int  (*add_reservation)add_reservation93,3870
	List (*modify_users)modify_users95,3956
	List (*modify_accts)modify_accts98,4089
	List (*modify_clusters)modify_clusters101,4228
	List (*modify_associations)modify_associations104,4373
	List (*modify_job)modify_job107,4522
	List (*modify_qos)modify_qos110,4658
	List (*modify_res)modify_res113,4787
	List (*modify_wckeys)modify_wckeys116,4916
	int  (*modify_reservation)modify_reservation119,5053
	List (*remove_users)remove_users121,5139
	List (*remove_coord)remove_coord123,5238
	List (*remove_accts)remove_accts126,5361
	List (*remove_clusters)remove_clusters128,5463
	List (*remove_associations)remove_associations130,5568
	List (*remove_qos)remove_qos132,5675
	List (*remove_res)remove_res134,5772
	List (*remove_wckeys)remove_wckeys136,5869
	int  (*remove_reservation)remove_reservation138,5970
	List (*get_users)get_users140,6056
	List (*get_accts)get_accts142,6155
	List (*get_clusters)get_clusters144,6257
	List (*get_config)get_config146,6362
	List (*get_associations)get_associations147,6426
	List (*get_events)get_events149,6533
	List (*get_problems)get_problems151,6634
	List (*get_qos)get_qos153,6741
	List (*get_res)get_res155,6838
	List (*get_wckeys)get_wckeys157,6935
	List (*get_resvs)get_resvs159,7036
	List (*get_txn)get_txn161,7142
	int  (*get_usage)get_usage163,7239
	int (*roll_usage)roll_usage167,7368
	int  (*node_down)node_down170,7488
	int  (*node_up)node_up174,7641
	int  (*cluster_cpus)cluster_cpus177,7751
	int  (*register_ctld)register_ctld179,7859
	int  (*register_disconn_ctld)register_disconn_ctld180,7919
	int  (*fini_ctld)fini_ctld181,7986
	int  (*job_start)job_start183,8075
	int  (*job_complete)job_complete184,8148
	int  (*step_start)step_start186,8229
	int  (*step_complete)step_complete188,8312
	int  (*job_suspend)job_suspend190,8395
	List (*get_jobs_cond)get_jobs_cond192,8476
	int (*archive_dump)archive_dump194,8573
	int (*archive_load)archive_load196,8661
	int (*update_shares_used)update_shares_used198,8747
	int (*flush_jobs)flush_jobs200,8818
} slurm_acct_storage_ops_t;202,8890
static const char *syms[syms206,8986
static slurm_acct_storage_ops_t ops;269,10992
static plugin_context_t *plugin_context plugin_context270,11029
static pthread_mutex_t plugin_context_lock 271,11077
static bool init_run 272,11149
static uint16_t enforce 273,11179
extern int slurm_acct_storage_init(278,11262
extern int slurm_acct_storage_fini(313,12006
extern void *acct_storage_g_get_connection(acct_storage_g_get_connection327,12243
extern int acct_storage_g_close_connection(336,12513
extern int acct_storage_g_commit(344,12678
extern int acct_storage_g_add_users(352,12849
extern int acct_storage_g_add_coord(360,13058
extern int acct_storage_g_add_accounts(369,13318
extern int acct_storage_g_add_clusters(377,13533
extern int acct_storage_g_add_associations(385,13757
extern int acct_storage_g_add_qos(393,13994
extern int acct_storage_g_add_res(401,14195
extern int acct_storage_g_add_wckeys(408,14395
extern int acct_storage_g_add_reservation(416,14609
extern List acct_storage_g_modify_users(424,14817
extern List acct_storage_g_modify_accounts(433,15076
extern List acct_storage_g_modify_clusters(442,15350
extern List acct_storage_g_modify_associations(451,15639
extern List acct_storage_g_modify_job(461,15924
extern List acct_storage_g_modify_qos(471,16191
extern List acct_storage_g_modify_res(480,16450
extern List acct_storage_g_modify_wckeys(489,16709
extern int acct_storage_g_modify_reservation(498,16978
extern List acct_storage_g_remove_users(506,17195
extern List acct_storage_g_remove_coord(514,17417
extern List acct_storage_g_remove_accounts(523,17671
extern List acct_storage_g_remove_clusters(531,17902
extern List acct_storage_g_remove_associations(539,18142
extern List acct_storage_g_remove_qos(548,18385
extern List acct_storage_g_remove_res(556,18605
extern List acct_storage_g_remove_wckeys(564,18825
extern int acct_storage_g_remove_reservation(572,19053
extern List acct_storage_g_get_users(580,19270
extern List acct_storage_g_get_accounts(588,19490
extern List acct_storage_g_get_clusters(596,19712
extern List acct_storage_g_get_config(604,19943
extern List acct_storage_g_get_associations(611,20126
extern List acct_storage_g_get_events(620,20363
extern List acct_storage_g_get_problems(628,20589
extern List acct_storage_g_get_qos(636,20820
extern List acct_storage_g_get_res(644,21031
extern List acct_storage_g_get_wckeys(652,21242
extern List acct_storage_g_get_reservations(660,21468
extern List acct_storage_g_get_txn(668,21695
extern int acct_storage_g_get_usage(676,21907
extern int acct_storage_g_roll_usage(685,22166
extern int clusteracct_storage_g_node_down(694,22436
extern int clusteracct_storage_g_node_up(705,22754
extern int clusteracct_storage_g_cluster_cpus(775,24655
extern int clusteracct_storage_g_register_ctld(786,24945
extern int clusteracct_storage_g_register_disconn_ctld(793,25136
extern int clusteracct_storage_g_fini_ctld(801,25358
extern int jobacct_storage_g_job_start(813,25694
extern int jobacct_storage_g_job_complete(840,26497
extern int jobacct_storage_g_step_start(853,26828
extern int jobacct_storage_g_step_complete(866,27155
extern int jobacct_storage_g_job_suspend(879,27491
extern List jobacct_storage_g_get_jobs_cond(894,27873
extern int jobacct_storage_g_archive(905,28144
extern int jobacct_storage_g_archive_load(916,28403
extern int acct_storage_g_update_shares_used(930,28799
extern int acct_storage_g_flush_jobs_on_cluster(945,29325

src/common/slurm_accounting_storage.h,44
#define _SLURM_ACCOUNTING_STORAGE_H41,2271

src/common/slurm_acct_gather.c,364
bool acct_gather_suspended 45,2208
static bool inited 47,2245
static int _get_int(49,2270
extern int acct_gather_conf_init(65,2542
extern int acct_gather_conf_destroy(130,4637
extern List acct_gather_conf_values(144,4913
extern int acct_gather_parse_freq(161,5395
extern void acct_gather_suspend_poll(200,6330
extern void acct_gather_resume_poll(205,6409

src/common/slurm_acct_gather_energy.c,1365
typedef struct slurm_acct_gather_energy_ops 57,2575
	int (*update_node_energy)update_node_energy58,2621
	int (*get_data)get_data59,2656
	int (*set_data)set_data60,2730
	void (*conf_options)conf_options61,2804
	void (*conf_set)conf_set63,2893
	void (*conf_values)conf_values64,2942
} slurm_acct_gather_energy_ops_t;65,2984
static const char *syms[syms70,3135
static slurm_acct_gather_energy_ops_t ops;79,3390
static plugin_context_t *g_context g_context80,3433
static pthread_mutex_t g_context_lock 81,3476
static bool init_run 82,3543
static bool acct_shutdown 83,3573
static int freq 84,3607
static void *_watch_node(_watch_node87,3630
extern int slurm_acct_gather_energy_init(106,4178
extern int acct_gather_energy_fini(141,4858
extern acct_gather_energy_t *acct_gather_energy_alloc(acct_gather_energy_alloc155,5048
extern void acct_gather_energy_destroy(163,5208
extern void acct_gather_energy_pack(168,5298
extern int acct_gather_energy_unpack(201,6119
extern int acct_gather_energy_g_update_node_energy(229,7066
extern int acct_gather_energy_g_get_data(241,7274
extern int acct_gather_energy_g_set_data(254,7522
extern int acct_gather_energy_startpoll(267,7770
extern void acct_gather_energy_g_conf_options(307,8742
extern void acct_gather_energy_g_conf_set(316,8966
extern void acct_gather_energy_g_conf_values(324,9111

src/common/slurm_acct_gather_energy.h,194
#define __SLURM_ACCT_GATHER_ENERGY_H__39,2077
typedef struct acct_energy_data 69,2741
	time_t		time;70,2775
	uint64_t	power;71,2790
	uint64_t	cpu_freq;72,2807
} acct_energy_data_t;73,2827

src/common/slurm_acct_gather_filesystem.c,918
typedef struct slurm_acct_gather_filesystem_ops 51,2440
	int (*node_update)node_update52,2490
	void (*conf_options)conf_options53,2518
	void (*conf_set)conf_set55,2600
	void (*conf_values)conf_values56,2640
} slurm_acct_gather_filesystem_ops_t;57,2682
static const char *syms[syms62,2841
static slurm_acct_gather_filesystem_ops_t ops;69,3037
static plugin_context_t *g_context g_context70,3084
static pthread_mutex_t g_context_lock 71,3127
static bool init_run 72,3194
static bool acct_shutdown 73,3224
static int freq 74,3258
static void *_watch_node(_watch_node76,3280
extern int acct_gather_filesystem_init(92,3757
extern int acct_gather_filesystem_fini(128,4458
extern int acct_gather_filesystem_startpoll(142,4652
extern void acct_gather_filesystem_g_conf_options(183,5638
extern void acct_gather_filesystem_g_conf_set(191,5888
extern void acct_gather_filesystem_g_conf_values(200,6064

src/common/slurm_acct_gather_filesystem.h,238
#define __SLURM_ACCT_GATHER_FILESYSTEM_H__39,2114
typedef struct acct_filesystem_data 68,2737
	uint64_t	reads;69,2775
	uint64_t	writes;70,2792
	double		read_size;71,2810
	double		write_size;72,2863
} acct_filesystem_data_t;73,2916

src/common/slurm_acct_gather.h,40
#define __SLURM_ACCT_GATHER_H__39,2081

src/common/slurm_acct_gather_infiniband.c,918
typedef struct slurm_acct_gather_infiniband_ops 52,2490
	int (*node_update)node_update53,2540
	void (*conf_options)conf_options54,2568
	void (*conf_set)conf_set56,2650
	void (*conf_values)conf_values57,2690
} slurm_acct_gather_infiniband_ops_t;58,2730
static const char *syms[syms63,2889
static slurm_acct_gather_infiniband_ops_t ops;70,3085
static plugin_context_t *g_context g_context71,3132
static pthread_mutex_t g_context_lock 72,3175
static bool init_run 73,3242
static bool acct_shutdown 74,3272
static int freq 75,3306
static void *_watch_node(_watch_node77,3328
extern int acct_gather_infiniband_init(94,3797
extern int acct_gather_infiniband_fini(130,4484
extern int acct_gather_infiniband_startpoll(144,4678
extern void acct_gather_infiniband_g_conf_options(185,5669
extern void acct_gather_infiniband_g_conf_set(193,5891
extern void acct_gather_infiniband_g_conf_values(201,6038

src/common/slurm_acct_gather_infiniband.h,238
#define __SLURM_ACCT_GATHER_INFINIBAND_H__39,2114
typedef struct acct_network_data 68,2737
	uint64_t	packets_in;69,2772
	uint64_t	packets_out;70,2794
	double		size_in;71,2817
	double		size_out;72,2868
} acct_network_data_t;73,2919

src/common/slurm_acct_gather_profile.c,2119
#define SLEEP_TIME 59,2739
#define USLEEP_TIME 60,2760
typedef struct slurm_acct_gather_profile_ops 62,2789
	void (*conf_options)conf_options63,2836
	void (*conf_set)conf_set65,2921
	void* (*get)get66,2968
	int (*node_step_start)node_step_start68,3053
	int (*node_step_end)node_step_end69,3099
	int (*task_start)task_start70,3132
	int (*task_end)task_end71,3169
	int (*add_sample_data)add_sample_data72,3203
	void (*conf_values)conf_values73,3247
} slurm_acct_gather_profile_ops_t;75,3288
static const char *syms[syms81,3442
acct_gather_profile_timer_t acct_gather_profile_timer[acct_gather_profile_timer93,3814
bool acct_gather_profile_running 94,3882
static slurm_acct_gather_profile_ops_t ops;96,3925
static plugin_context_t *g_context g_context97,3969
static pthread_mutex_t g_context_lock 98,4012
static pthread_mutex_t profile_mutex 99,4079
static pthread_t timer_thread_id 100,4145
static bool init_run 101,4183
static void _set_freq(103,4214
static void *_timer_thread(_timer_thread112,4518
extern int acct_gather_profile_init(161,5798
extern int acct_gather_profile_fini(196,6475
extern char *acct_gather_profile_to_string(acct_gather_profile_to_string238,7262
extern uint32_t acct_gather_profile_from_string(269,8059
extern char *acct_gather_profile_type_to_string(acct_gather_profile_type_to_string294,8768
extern uint32_t acct_gather_profile_type_from_string(308,9119
extern char *acct_gather_profile_type_t_name(acct_gather_profile_type_t_name322,9554
extern int acct_gather_profile_startpoll(349,10078
extern void acct_gather_profile_endpoll(434,12397
extern void acct_gather_profile_g_conf_options(470,13304
extern void acct_gather_profile_g_conf_set(479,13533
extern void acct_gather_profile_g_get(488,13683
extern int acct_gather_profile_g_node_step_start(498,13878
extern int acct_gather_profile_g_node_step_end(506,14054
extern int acct_gather_profile_g_task_start(515,14193
extern int acct_gather_profile_g_task_end(528,14469
extern int acct_gather_profile_g_add_sample_data(541,14740
extern void acct_gather_profile_g_conf_values(554,15040

src/common/slurm_acct_gather_profile.h,368
#define __SLURM_ACCT_GATHER_PROFILE_H__40,2092
	PROFILE_ENERGY,70,2776
	PROFILE_TASK,71,2793
	PROFILE_FILESYSTEM,72,2808
	PROFILE_NETWORK,73,2829
	PROFILE_CNT74,2847
} acct_gather_profile_type_t;75,2860
	int freq;78,2908
	time_t last_notify;79,2919
	pthread_cond_t notify;80,2940
	pthread_mutex_t notify_mutex;81,2964
} acct_gather_profile_timer_t;82,2995

src/common/slurm_auth.c,1291
static bool auth_dummy 55,2607
static bool init_run 56,2666
typedef struct slurm_auth_ops 64,2946
        void *       (*create)create65,2978
        int          (*destroy)destroy66,3047
        int          (*verify)verify67,3097
        uid_t        (*get_uid)get_uid68,3164
        gid_t        (*get_gid)get_gid69,3231
        int          (*pack)pack70,3298
        void *       (*unpack)unpack71,3357
        int          (*print)print72,3404
        int          (*sa_errno)sa_errno73,3464
        const char * (*sa_errstr)sa_errstr74,3514
} slurm_auth_ops_t;75,3569
static const char *syms[syms80,3692
static slurm_auth_ops_t ops;97,4079
static plugin_context_t *g_context g_context98,4108
static pthread_mutex_t      context_lock 99,4151
_slurm_auth_marshal_args(102,4237
slurm_auth_generic_errstr(115,4565
                int err;118,4636
                const char *msg;msg119,4661
extern int slurm_auth_init(143,5465
slurm_auth_fini(186,6346
g_slurm_auth_create(207,6762
g_slurm_auth_destroy(228,7178
g_slurm_auth_verify(240,7425
g_slurm_auth_get_uid(255,7723
g_slurm_auth_get_gid(264,7932
g_slurm_auth_pack(273,8139
g_slurm_auth_unpack(285,8357
g_slurm_auth_print(294,8517
g_slurm_auth_errno(306,8734
g_slurm_auth_errstr(315,8922

src/common/slurm_auth.h,479
#define __SLURM_AUTHENTICATION_H__40,2207
    SLURM_AUTH_NOPLUGIN,86,3455
    SLURM_AUTH_BADARG,87,3531
    SLURM_AUTH_MEMORY,88,3607
    SLURM_AUTH_NOUSER,89,3683
    SLURM_AUTH_INVALID,90,3759
    SLURM_AUTH_MISMATCH,91,3835
    SLURM_AUTH_VERSION,92,3911
    SLURM_AUTH_FIRST_LOCAL_ERROR 94,3988
	ARG_HOST_LIST 99,4105
	ARG_TIMEOUT,100,4125
	ARG_COUNT,101,4139
typedef struct slurm_auth_context * slurm_auth_context_t;107,4207
#define SLURM_AUTH_NOBODY	130,4879

src/common/slurm_cred.c,5359
#  define  __sbcast_cred_t_defined70,2960
typedef struct sbcast_cred sbcast_cred_t;71,2995
#define DEFAULT_EXPIRATION_WINDOW 79,3250
#define EXTREME_DEBUG 81,3290
#define MAX_TIME 82,3316
	time_t   ctime;89,3402
	time_t   expiration;90,3457
	uint32_t jobid;91,3525
	uint32_t stepid;92,3582
} cred_state_t;93,3640
	time_t   ctime;101,3783
	time_t   expiration;102,3855
	uint32_t jobid;103,3927
	time_t   revoked;104,3991
} job_state_t;105,4063
enum ctx_type 111,4129
	SLURM_CRED_CREATOR,112,4145
	SLURM_CRED_VERIFIER113,4166
struct sbcast_cred 120,4234
	time_t       ctime;121,4255
	time_t       expiration;122,4313
	uint32_t     jobid;123,4381
	char *       nodes;124,4441
	char        *signature;signature125,4504
	unsigned int siglen;126,4558
struct slurm_cred_context 132,4665
#  define CRED_CTX_MAGIC 134,4708
	int magic;135,4742
	pthread_mutex_t mutex;138,4779
	enum ctx_type  type;140,4810
	void          *key;key141,4882
	List           job_list;142,4954
	List           state_list;143,5026
	int          expiry_window;145,5099
	void          *exkey;exkey147,5172
	time_t         exkey_exp;148,5244
struct slurm_job_credential 155,5386
#  define CRED_MAGIC 157,5431
	int      magic;158,5461
	pthread_mutex_t mutex;161,5507
	uint32_t  jobid;163,5538
	uint32_t  stepid;164,5595
	uid_t     uid;165,5652
	uint32_t  job_mem_limit;167,5710
	uint32_t  step_mem_limit;170,5845
	uint16_t  core_array_size;172,5873
	uint16_t *cores_per_socket;cores_per_socket173,5930
	uint16_t *sockets_per_node;sockets_per_node174,5959
	uint32_t *sock_core_rep_count;sock_core_rep_count175,5988
	List job_gres_list;177,6021
	List step_gres_list;178,6084
	bitstr_t *job_core_bitmap;job_core_bitmap180,6150
	uint16_t  job_core_spec;181,6178
	uint32_t  job_nhosts;182,6237
	char     *job_hostlist;job_hostlist183,6298
	bitstr_t *step_core_bitmap;step_core_bitmap184,6360
	time_t    ctime;185,6389
	char     *step_hostlist;step_hostlist186,6442
	char     *signature;signature188,6509
	unsigned int siglen;189,6561
typedef struct slurm_crypto_ops 198,6869
	void *(*crypto_read_private_key)crypto_read_private_key199,6903
	void *(*crypto_read_public_key)crypto_read_public_key200,6957
	void  (*crypto_destroy_key)crypto_destroy_key201,7011
	int   (*crypto_sign)crypto_sign202,7054
	int   (*crypto_verify_sign)crypto_verify_sign205,7175
	const char *(*crypto_str_error)crypto_str_error209,7317
} slurm_crypto_ops_t;210,7358
static const char *syms[syms216,7481
struct sbcast_cache 225,7652
	time_t       expire;226,7674
	uint32_t     value;227,7733
static slurm_crypto_ops_t ops;230,7797
static plugin_context_t *g_context g_context231,7828
static pthread_mutex_t g_context_lock 232,7871
static bool init_run 233,7938
static time_t crypto_restart_time 234,7968
static List sbcast_cache_list 235,8016
static int _slurm_crypto_init(292,10380
static int _slurm_crypto_fini(326,11141
extern int slurm_crypto_fini(342,11437
slurm_cred_creator_ctx_create(351,11571
slurm_cred_verifier_ctx_create(379,12092
slurm_cred_ctx_destroy(409,12628
slurm_cred_ctx_set(439,13182
slurm_cred_ctx_get(469,13652
slurm_cred_ctx_key_update(501,14148
slurm_cred_create(514,14422
slurm_cred_copy(588,16626
slurm_cred_faker(641,18466
void slurm_cred_free_args(709,20540
int slurm_cred_get_args(722,20903
slurm_cred_verify(772,22607
slurm_cred_destroy(870,25409
slurm_cred_jobid_cached(900,26050
slurm_cred_insert_jobid(923,26495
slurm_cred_rewind(940,26839
slurm_cred_revoke(960,27235
slurm_cred_begin_expiration(1003,28145
slurm_cred_get_signature(1046,29031
static char *_core_format(_core_format1064,29438
void format_core_allocs(1087,29976
extern void get_cred_gres(1201,33278
slurm_cred_pack(1243,34348
slurm_cred_unpack(1260,34707
slurm_cred_ctx_pack(1415,39491
slurm_cred_ctx_unpack(1426,39707
slurm_cred_print(1447,40166
_verifier_ctx_init(1489,41538
_ctx_update_private_key(1503,41841
_ctx_update_public_key(1531,42314
_exkey_is_valid(1563,42985
_slurm_cred_ctx_alloc(1580,43273
_slurm_cred_alloc(1598,43649
_print_data(1614,43902
_slurm_cred_sign(1626,44094
_slurm_cred_verify_signature(1650,44604
_pack_cred(1684,45414
_credential_replayed(1770,48088
extern char * timestr 1802,48688
slurm_cred_handle_reissue(1823,49128
slurm_cred_revoked(1842,49727
_credential_revoked(1856,49987
_find_job_state(1884,50568
_find_cred_state(1899,50837
_insert_job_state(1906,51016
_job_state_create(1915,51186
_job_state_destroy(1928,51407
_clear_expired_job_states(1936,51518
_clear_expired_credential_states(1981,52559
_insert_cred_state(2002,52992
_cred_state_create(2010,53165
_cred_state_destroy(2023,53438
_cred_state_pack_one(2030,53504
_cred_state_unpack_one(2040,53702
_job_state_pack_one(2057,54013
_job_state_unpack_one(2067,54212
_cred_state_pack(2107,55092
_cred_state_unpack(2122,55393
_job_state_pack(2150,55886
_job_state_unpack(2166,56193
static void _pack_sbcast_cred(2200,57068
sbcast_cred_t *create_sbcast_cred(create_sbcast_cred2211,57447
void delete_sbcast_cred(2249,58388
static void _sbast_cache_add(2258,58552
static void _sbcast_cache_del(2277,59116
int extract_sbcast_cred(2289,59578
void pack_sbcast_cred(2376,61986
sbcast_cred_t *unpack_sbcast_cred(unpack_sbcast_cred2402,62773
void  print_sbcast_cred(2426,63380

src/common/slurm_cred.h,1064
#define _HAVE_SLURM_CRED_H41,2267
#  define __slurm_cred_t_defined65,2745
   typedef struct slurm_job_credential slurm_cred_t;66,2778
#  define  __sbcast_cred_t_defined75,3048
   typedef struct sbcast_cred *sbcast_cred_t;sbcast_cred_t76,3083
typedef struct slurm_cred_context   * slurm_cred_ctx_t;82,3208
	SLURM_CRED_OPT_EXPIRY_WINDOW 110,3927
} slurm_cred_opt_t;111,3997
	uint32_t  jobid;147,5050
	uint32_t  stepid;148,5068
	uid_t     uid;149,5087
	uint16_t *cores_per_socket;cores_per_socket154,5317
	uint16_t *sockets_per_node;sockets_per_node155,5383
	uint32_t *sock_core_rep_count;sock_core_rep_count156,5449
	bitstr_t *job_core_bitmap;job_core_bitmap159,5544
	uint16_t  job_core_spec;160,5601
	char     *job_hostlist;job_hostlist161,5660
	uint32_t  job_mem_limit;162,5723
	uint32_t  job_nhosts;165,5861
	List job_gres_list;166,5923
	bitstr_t *step_core_bitmap;step_core_bitmap169,6013
	char     *step_hostlist;step_hostlist170,6072
	uint32_t  step_mem_limit;171,6136
	List step_gres_list;174,6275
} slurm_cred_arg_t;175,6340

src/common/slurmdbd_defs.c,5114
#define DBD_MAGIC	87,3460
#define MAX_AGENT_QUEUE	88,3490
#define MAX_DBD_MSG_LEN	89,3521
#define SLURMDBD_TIMEOUT	90,3552
uint16_t running_cache 92,3618
pthread_mutex_t assoc_cache_mutex 93,3646
pthread_cond_t assoc_cache_cond 94,3709
static pthread_mutex_t agent_lock 96,3770
static pthread_cond_t  agent_cond 97,3833
static List      agent_list 98,3895
static pthread_t agent_tid 99,3942
static time_t    agent_shutdown 100,3979
static pthread_mutex_t slurmdbd_lock 102,4017
static pthread_cond_t  slurmdbd_cond 103,4083
static slurm_fd_t  slurmdbd_fd 104,4148
static char *    slurmdbd_auth_info 105,4193
static char *    slurmdbd_cluster 106,4238
static bool      rollback_started 107,4283
static bool      halt_agent 108,4325
static slurm_trigger_callbacks_t callback;109,4367
static bool      callbacks_requested 110,4410
static bool      from_ctld 111,4452
static bool      need_to_register 112,4494
extern uint16_t slurmdbd_translate_rpc(147,6000
extern int slurm_open_slurmdbd_conn(163,6548
extern int slurm_close_slurmdbd_conn(213,7796
extern int slurm_send_slurmdbd_recv_rc_msg(237,8415
extern int slurm_send_recv_slurmdbd_msg(296,10277
extern int slurm_send_slurmdbd_msg(366,12109
static void _open_slurmdbd_fd(418,13646
extern Buf pack_slurmdbd_msg(496,15567
extern int unpack_slurmdbd_msg(678,20161
extern slurmdbd_msg_type_t str_2_slurmdbd_msg_type(866,24871
extern char *slurmdbd_msg_type_2_str(slurmdbd_msg_type_2_str1037,31434
extern void slurmdbd_free_buffer(1528,40815
static int _send_init_msg(1535,40918
static int _send_fini_msg(1575,41940
static void _close_slurmdbd_fd(1598,42420
static void _reopen_slurmdbd_fd(1607,42588
static int _send_msg(1614,42718
static int _unpack_return_code(1662,43784
static int _get_return_code(1724,45427
static int _handle_mult_rc_ret(1737,45677
static Buf _recv_msg(1825,47874
static int _tot_wait 1875,49044
static bool _fd_readable(1888,49401
static int _fd_writeable(1938,50583
static void _create_agent(1998,52200
static void _shutdown_agent(2019,52726
static void _slurmdbd_packstr(2046,53476
static int _slurmdbd_unpackstr(2051,53587
static void *_agent(_agent2060,53809
static void _save_dbd_state(2231,58557
static void _load_dbd_state(2292,60071
static int _save_dbd_rec(2397,62697
static Buf _load_dbd_rec(2435,63483
static void _sig_handler(2484,64529
static int _purge_job_start_req(2490,64666
extern void slurmdbd_free_acct_coord_msg(2521,65484
extern void slurmdbd_free_cluster_cpus_msg(2533,65713
extern void slurmdbd_free_rec_msg(2541,65848
extern void slurmdbd_free_cond_msg(2563,66252
extern void slurmdbd_free_init_msg(2624,67666
extern void slurmdbd_free_fini_msg(2632,67784
extern void slurmdbd_free_job_complete_msg(2637,67858
extern void slurmdbd_free_job_start_msg(2646,68004
extern void slurmdbd_free_id_rc_msg(2664,68376
extern void slurmdbd_free_job_suspend_msg(2670,68487
extern void slurmdbd_free_list_msg(2675,68575
extern void slurmdbd_free_modify_msg(2684,68716
extern void slurmdbd_free_node_state_msg(2733,69984
extern void slurmdbd_free_rc_msg(2742,70132
extern void slurmdbd_free_register_ctld_msg(2750,70241
extern void slurmdbd_free_roll_usage_msg(2755,70333
extern void slurmdbd_free_step_complete_msg(2760,70419
extern void slurmdbd_free_step_start_msg(2768,70546
extern void slurmdbd_free_usage_msg(2778,70713
slurmdbd_pack_acct_coord_msg(2811,71547
slurmdbd_unpack_acct_coord_msg(2835,72041
slurmdbd_pack_cluster_cpus_msg(2866,72785
slurmdbd_unpack_cluster_cpus_msg(2877,73066
extern void slurmdbd_pack_rec_msg(2901,73642
extern int slurmdbd_unpack_rec_msg(2921,74086
extern void slurmdbd_pack_cond_msg(2953,74801
extern int slurmdbd_unpack_cond_msg(3012,76193
slurmdbd_pack_init_msg(3084,77893
slurmdbd_unpack_init_msg(3117,78815
slurmdbd_pack_fini_msg(3163,79990
slurmdbd_unpack_fini_msg(3170,80148
slurmdbd_pack_job_complete_msg(3187,80520
slurmdbd_unpack_job_complete_msg(3207,81092
slurmdbd_pack_job_start_msg(3237,82072
slurmdbd_unpack_job_start_msg(3300,84096
slurmdbd_pack_id_rc_msg(3381,87439
slurmdbd_unpack_id_rc_msg(3394,87715
slurmdbd_pack_job_suspend_msg(3414,88174
slurmdbd_unpack_job_suspend_msg(3426,88495
extern void slurmdbd_pack_list_msg(3445,89080
extern int slurmdbd_unpack_list_msg(3537,91197
extern void slurmdbd_pack_modify_msg(3655,94321
extern int slurmdbd_unpack_modify_msg(3700,95517
slurmdbd_pack_node_state_msg(3760,97078
slurmdbd_unpack_node_state_msg(3775,97476
slurmdbd_pack_rc_msg(3805,98277
slurmdbd_unpack_rc_msg(3814,98474
slurmdbd_pack_register_ctld_msg(3832,98934
slurmdbd_unpack_register_ctld_msg(3844,99232
slurmdbd_pack_roll_usage_msg(3865,99798
slurmdbd_unpack_roll_usage_msg(3876,100060
slurmdbd_pack_step_complete_msg(3897,100568
slurmdbd_unpack_step_complete_msg(3915,101117
slurmdbd_pack_step_start_msg(3946,102121
slurmdbd_unpack_step_start_msg(3982,103214
extern void slurmdbd_pack_usage_msg(4031,105078
extern int slurmdbd_unpack_usage_msg(4061,105775
extern void slurmdbd_pack_buffer(4105,106768
extern int slurmdbd_unpack_buffer(4114,106948

src/common/slurmdbd_defs.h,7399
#define _SLURMDBD_DEFS_H40,2172
#define SLURMDBD_2_6_VERSION 78,3436
#define SLURMDBD_2_5_VERSION 79,3494
#define SLURMDBD_VERSION_MIN 80,3552
	DBD_INIT 85,3701
	DBD_FINI,86,3752
	DBD_ADD_ACCOUNTS,87,3801
	DBD_ADD_ACCOUNT_COORDS,88,3869
	DBD_ADD_ASSOCS,89,3937
	DBD_ADD_CLUSTERS,90,4005
	DBD_ADD_USERS,91,4073
	DBD_CLUSTER_CPUS,92,4141
	DBD_FLUSH_JOBS,93,4201
	DBD_GET_ACCOUNTS,95,4296
	DBD_GET_ASSOCS,96,4346
	DBD_GET_ASSOC_USAGE,97,4407
	DBD_GET_CLUSTERS,98,4467
	DBD_GET_CLUSTER_USAGE,99,4517
	DBD_GET_JOBS,100,4578
	DBD_GET_USERS,101,4625
	DBD_GOT_ACCOUNTS,102,4674
	DBD_GOT_ASSOCS,103,4729
	DBD_GOT_ASSOC_USAGE,104,4783
	DBD_GOT_CLUSTERS,105,4849
	DBD_GOT_CLUSTER_USAGE,106,4904
	DBD_GOT_JOBS,107,4972
	DBD_GOT_LIST,108,5020
	DBD_GOT_USERS,109,5088
	DBD_JOB_COMPLETE,110,5139
	DBD_JOB_START,111,5188
	DBD_ID_RC,112,5233
	DBD_JOB_SUSPEND,115,5360
	DBD_MODIFY_ACCOUNTS,116,5407
	DBD_MODIFY_ASSOCS,117,5475
	DBD_MODIFY_CLUSTERS,118,5543
	DBD_MODIFY_USERS,119,5611
	DBD_NODE_STATE,120,5679
	DBD_RC,121,5733
	DBD_REGISTER_CTLD,122,5778
	DBD_REMOVE_ACCOUNTS,123,5837
	DBD_REMOVE_ACCOUNT_COORDS,124,5905
	DBD_REMOVE_ASSOCS,126,5991
	DBD_REMOVE_CLUSTERS,127,6059
	DBD_REMOVE_USERS,128,6127
	DBD_ROLL_USAGE,129,6195
	DBD_STEP_COMPLETE,130,6263
	DBD_STEP_START,131,6313
	DBD_UPDATE_SHARES_USED,132,6360
	DBD_GET_JOBS_COND,135,6464
	DBD_GET_TXN,136,6528
	DBD_GOT_TXN,137,6578
	DBD_ADD_QOS,138,6628
	DBD_GET_QOS,139,6680
	DBD_GOT_QOS,140,6732
	DBD_REMOVE_QOS,141,6784
	DBD_MODIFY_QOS,142,6842
	DBD_ADD_WCKEYS,143,6910
	DBD_GET_WCKEYS,144,6967
	DBD_GOT_WCKEYS,145,7024
	DBD_REMOVE_WCKEYS,146,7081
	DBD_MODIFY_WCKEYS,147,7143
	DBD_GET_WCKEY_USAGE,148,7211
	DBD_GOT_WCKEY_USAGE,149,7271
	DBD_ARCHIVE_DUMP,150,7331
	DBD_ARCHIVE_LOAD,152,7407
	DBD_ADD_RESV,153,7469
	DBD_REMOVE_RESV,154,7531
	DBD_MODIFY_RESV,155,7596
	DBD_GET_RESVS,156,7661
	DBD_GOT_RESVS,157,7717
	DBD_GET_CONFIG,158,7766
	DBD_GOT_CONFIG,159,7821
	DBD_GET_PROBS,160,7873
	DBD_GOT_PROBS,161,7933
	DBD_GET_EVENTS,162,7983
	DBD_GOT_EVENTS,163,8030
	DBD_SEND_MULT_JOB_START,164,8082
	DBD_GOT_MULT_JOB_START,165,8139
	DBD_SEND_MULT_MSG,166,8210
	DBD_GOT_MULT_MSG,167,8264
	DBD_MODIFY_JOB,168,8326
	DBD_ADD_RES,169,8387
	DBD_GET_RES,170,8448
	DBD_GOT_RES,171,8495
	DBD_REMOVE_RES,172,8542
	DBD_MODIFY_RES,173,8601
	DBD_ADD_CLUS_RES,174,8660
	DBD_REMOVE_CLUS_RES,175,8722
	DBD_MODIFY_CLUS_RES,176,8790
} slurmdbd_msg_type_t;177,8857
typedef struct slurmdbd_msg 183,9080
	uint16_t msg_type;184,9110
	void * data;185,9166
} slurmdbd_msg_t;186,9219
	List acct_list;189,9255
	slurmdb_user_cond_t *cond;cond190,9311
} dbd_acct_coord_msg_t;191,9339
typedef struct dbd_cluster_cpus_msg 193,9364
	char *cluster_nodes;cluster_nodes194,9402
	uint32_t cpu_count;195,9447
	time_t event_time;196,9496
} dbd_cluster_cpus_msg_t;197,9541
	void *rec;rec200,9585
} dbd_rec_msg_t;203,9716
	void *cond;cond206,9751
} dbd_cond_msg_t;209,9886
	uint16_t archive_data;212,9922
	time_t end;213,9946
	time_t start;214,9959
} dbd_roll_usage_msg_t;215,9974
	time_t end;218,10016
	void *rec;rec219,10029
	time_t start;220,10041
} dbd_usage_msg_t;221,10056
typedef struct dbd_get_jobs_msg 223,10076
	char *cluster_name;cluster_name224,10110
	uint16_t completion;225,10162
	uint32_t gid;227,10253
	time_t last_update;228,10284
	List selected_steps;229,10331
	List selected_parts;230,10395
	char *user;user231,10440
} dbd_get_jobs_msg_t;232,10470
typedef struct dbd_init_msg 234,10493
	char *cluster_name;cluster_name235,10523
	uint16_t rollback;236,10590
	uint16_t version;237,10647
	uint32_t uid;238,10689
} dbd_init_msg_t;240,10778
typedef struct dbd_fini_msg 242,10797
	uint16_t close_conn;243,10827
	uint16_t commit;245,10912
} dbd_fini_msg_t;246,10977
typedef struct dbd_job_comp_msg 248,10996
	uint32_t assoc_id;249,11030
	char *	 comment;251,11121
	uint32_t db_index;252,11163
	uint32_t derived_ec;253,11220
	time_t   end_time;254,11280
	uint32_t exit_code;255,11328
	uint32_t job_id;256,11379
	uint16_t job_state;257,11410
	char *   nodes;258,11447
	uint32_t req_uid;259,11498
	time_t   start_time;260,11541
	time_t   submit_time;261,11584
} dbd_job_comp_msg_t;263,11668
typedef struct dbd_job_start_msg 265,11691
	char *   account;266,11726
	uint32_t alloc_cpus;268,11817
	uint32_t alloc_nodes;269,11875
	uint32_t assoc_id;270,11933
	char *   block_id;271,11985
	uint32_t db_index;272,12034
	time_t   eligible_time;273,12091
	uint32_t gid;274,12155
	uint32_t job_id;275,12193
	uint16_t job_state;276,12224
	char *   name;277,12261
	char *   nodes;278,12293
	char *   node_inx;279,12344
	char *   partition;281,12433
	uint32_t priority;282,12488
	uint32_t qos_id;283,12527
	uint32_t req_cpus;284,12582
	uint32_t req_mem;285,12632
	uint32_t resv_id;286,12688
	time_t   start_time;287,12728
	time_t   submit_time;288,12771
	uint32_t timelimit;289,12816
	uint32_t uid;290,12857
	char*    gres_alloc;291,12925
	char*    gres_req;293,13040
	char*    gres_used;295,13155
	char *   wckey;297,13274
} dbd_job_start_msg_t;298,13309
typedef struct dbd_id_rc_msg 301,13383
	uint32_t job_id;302,13414
	uint32_t id;303,13432
	uint32_t return_code;304,13446
} dbd_id_rc_msg_t;305,13469
typedef struct dbd_job_suspend_msg 307,13489
	uint32_t assoc_id;308,13526
	uint32_t db_index;310,13617
	uint32_t job_id;311,13674
	uint16_t job_state;313,13744
	time_t   submit_time;314,13781
	time_t   suspend_time;316,13865
} dbd_job_suspend_msg_t;317,13922
	List my_list;320,13965
	uint32_t return_code;322,14073
} dbd_list_msg_t;325,14192
	void *cond;cond328,14228
	void *rec;rec329,14241
} dbd_modify_msg_t;330,14253
#define DBD_NODE_STATE_DOWN 332,14274
#define DBD_NODE_STATE_UP 333,14305
typedef struct dbd_node_state_msg 334,14336
	uint32_t cpu_count;335,14372
	time_t event_time;336,14426
	char *hostlist;hostlist337,14471
	uint16_t new_state;338,14509
	char *reason;reason339,14576
	uint32_t reason_uid;340,14631
	uint16_t state;342,14723
} dbd_node_state_msg_t;344,14835
typedef struct dbd_rc_msg 346,14860
	char *   comment;347,14888
	uint32_t return_code;348,14932
	uint16_t sent_type;349,14955
} dbd_rc_msg_t;350,15021
typedef struct dbd_register_ctld_msg 352,15038
	uint16_t dimensions;353,15077
	uint32_t flags;354,15129
	uint32_t plugin_id_select;355,15178
	uint16_t port;356,15233
} dbd_register_ctld_msg_t;357,15278
typedef struct dbd_step_comp_msg 359,15306
	uint32_t assoc_id;360,15341
	uint32_t db_index;361,15393
	time_t   end_time;362,15450
	uint32_t exit_code;363,15498
	jobacctinfo_t *jobacct;jobacct364,15549
	uint32_t job_id;365,15592
	uint32_t req_uid;366,15623
	time_t   start_time;367,15666
	time_t   job_submit_time;368,15710
	uint32_t step_id;370,15798
	uint32_t total_tasks;371,15831
} dbd_step_comp_msg_t;372,15884
typedef struct dbd_step_start_msg 374,15908
	uint32_t assoc_id;375,15944
	uint32_t db_index;376,15996
	uint32_t job_id;377,16053
	char *   name;378,16084
	char *   nodes;379,16117
	char *   node_inx;380,16169
	uint32_t node_cnt;382,16246
	time_t   start_time;383,16305
	time_t   job_submit_time;384,16349
	uint32_t req_cpufreq;386,16437
	uint32_t step_id;387,16492
	uint16_t task_dist;388,16525
	uint32_t total_cpus;389,16578
	uint32_t total_tasks;390,16636
} dbd_step_start_msg_t;391,16689

src/common/slurmdb_defs.c,5287
slurmdb_cluster_rec_t *working_cluster_rec working_cluster_rec52,2527
static void _free_assoc_rec_members(57,2705
static void _free_clus_res_rec_members(74,3104
static void _free_cluster_rec_members(81,3230
static void _free_qos_rec_members(94,3564
static void _free_wckey_rec_members(106,3834
static void _free_cluster_cond_members(117,4060
static void _free_res_cond_members(125,4245
static void _free_res_rec_members(139,4663
static int _sort_children_list(159,5093
static int _sort_assoc_by_lft_dec(199,5997
static int _sort_slurmdb_hierarchical_rec_list(214,6329
static int _append_hierarchical_children_ret_list(236,6955
static char *_get_qos_list_str(_get_qos_list_str261,7635
static int _setup_cluster_rec(282,8023
static uint32_t _str_2_qos_flags(351,9868
static uint32_t _str_2_res_flags(377,10515
extern slurmdb_job_rec_t *slurmdb_create_job_rec(slurmdb_create_job_rec382,10577
extern slurmdb_step_rec_t *slurmdb_create_step_rec(slurmdb_create_step_rec397,10984
extern void slurmdb_destroy_user_rec(413,11423
extern void slurmdb_destroy_account_rec(432,11957
extern void slurmdb_destroy_coord_rec(449,12424
extern void slurmdb_destroy_cluster_accounting_rec(460,12632
extern void slurmdb_destroy_clus_res_rec(470,12855
extern void slurmdb_destroy_cluster_rec(481,13099
extern void slurmdb_destroy_accounting_rec(492,13335
extern void slurmdb_destroy_association_rec(502,13543
extern void slurmdb_destroy_event_rec(513,13805
extern void slurmdb_destroy_job_rec(528,14123
extern void slurmdb_destroy_qos_rec(549,14542
extern void slurmdb_destroy_reservation_rec(558,14743
extern void slurmdb_destroy_step_rec(572,15090
extern void slurmdb_destroy_res_rec(583,15306
extern void slurmdb_destroy_txn_rec(594,15510
extern void slurmdb_destroy_wckey_rec(608,15864
extern void slurmdb_destroy_archive_rec(618,16050
extern void slurmdb_destroy_report_assoc_rec(629,16277
extern void slurmdb_destroy_report_user_rec(642,16654
extern void slurmdb_destroy_report_cluster_rec(657,17115
extern void slurmdb_destroy_user_cond(671,17573
extern void slurmdb_destroy_account_cond(685,17972
extern void slurmdb_destroy_cluster_cond(700,18418
extern void slurmdb_destroy_association_cond(711,18658
extern void slurmdb_destroy_event_cond(778,21258
extern void slurmdb_destroy_job_cond(798,21838
extern void slurmdb_destroy_job_modify_cond(835,22918
extern void slurmdb_destroy_qos_cond(846,23127
extern void slurmdb_destroy_res_cond(858,23431
extern void slurmdb_destroy_reservation_cond(868,23638
extern void slurmdb_destroy_txn_cond(884,24084
extern void slurmdb_destroy_wckey_cond(908,24826
extern void slurmdb_destroy_archive_cond(925,25219
extern void slurmdb_destroy_update_object(938,25511
extern void slurmdb_destroy_used_limits(951,25779
extern void slurmdb_destroy_update_shares_rec(961,25981
extern void slurmdb_destroy_print_tree(966,26062
extern void slurmdb_destroy_hierarchical_rec(979,26371
extern void slurmdb_destroy_selected_step(994,26793
extern void slurmdb_destroy_report_job_grouping(1002,26953
extern void slurmdb_destroy_report_acct_grouping(1013,27220
extern void slurmdb_destroy_report_cluster_grouping(1025,27529
extern List slurmdb_get_info_cluster(1037,27874
extern void slurmdb_init_association_rec(1108,29721
extern void slurmdb_init_clus_res_rec(1150,30775
extern void slurmdb_init_cluster_rec(1162,31058
extern void slurmdb_init_qos_rec(1174,31311
extern void slurmdb_init_res_rec(1212,32229
extern void slurmdb_init_wckey_rec(1228,32577
extern void slurmdb_init_cluster_cond(1239,32814
extern void slurmdb_init_res_cond(1251,33072
extern char *slurmdb_qos_str(slurmdb_qos_str1263,33307
extern uint32_t str_2_slurmdb_qos(1288,33758
extern char *slurmdb_qos_flags_str(slurmdb_qos_flags_str1318,34361
extern uint32_t str_2_qos_flags(1350,35257
extern char *slurmdb_res_flags_str(slurmdb_res_flags_str1385,36007
extern uint32_t str_2_res_flags(1403,36370
extern char *slurmdb_res_type_str(slurmdb_res_type_str1438,37179
extern char *slurmdb_admin_level_str(slurmdb_admin_level_str1454,37447
extern slurmdb_admin_level_t str_2_slurmdb_admin_level(1476,37832
extern List slurmdb_get_hierarchical_sorted_assoc_list(1494,38404
extern void slurmdb_sort_hierarchical_assoc_list(1508,38829
extern List slurmdb_get_acct_hierarchical_rec_list(1523,39290
extern char *slurmdb_tree_name_get(slurmdb_tree_name_get1613,42088
extern int set_qos_bitstr_from_list(1662,43485
extern char *get_qos_complete_str_bitstr(get_qos_complete_str_bitstr1697,44210
extern char *get_qos_complete_str(get_qos_complete_str1734,45091
extern char *get_classification_str(get_classification_str1782,46269
extern uint16_t str_2_classification(1818,46940
extern char *slurmdb_problem_str_get(slurmdb_problem_str_get1839,47439
extern uint16_t str_2_slurmdb_problem(1865,47982
extern void log_assoc_rec(1884,48494
extern int slurmdb_report_set_start_end_time(2031,53394
extern uint32_t slurmdb_parse_purge(2122,55793
extern char *slurmdb_purge_string(slurmdb_purge_string2158,56667
extern int slurmdb_addto_qos_char_list(2183,57395
extern int slurmdb_send_accounting_update(2380,61738
extern slurmdb_report_cluster_rec_t *slurmdb_cluster_rec_2_report(slurmdb_cluster_rec_2_report2445,63500

src/common/slurmdb_defs.h,236
#define _SLURMDB_DEFS_H39,2164
#define SLURMDB_PURGE_GET_UNITS(44,2244
#define SLURMDB_PURGE_ARCHIVE_SET(46,2309
#define SLURMDB_PURGE_IN_HOURS(48,2379
#define SLURMDB_PURGE_IN_DAYS(50,2444
#define SLURMDB_PURGE_IN_MONTHS(52,2507

src/common/slurmdb_pack.c,3365
static void _pack_slurmdb_stats(46,2292
static int _unpack_slurmdb_stats(208,7151
extern void slurmdb_pack_user_rec(329,12143
extern int slurmdb_unpack_user_rec(467,15471
extern void slurmdb_pack_used_limits(582,18844
extern int slurmdb_unpack_used_limits(630,19921
extern void slurmdb_pack_account_rec(663,20952
extern int slurmdb_unpack_account_rec(715,22224
extern void slurmdb_pack_coord_rec(768,23641
extern int slurmdb_unpack_coord_rec(782,23920
extern void slurmdb_pack_cluster_accounting_rec(799,24363
extern int slurmdb_unpack_cluster_accounting_rec(852,25715
extern void slurmdb_pack_clus_res_rec(890,27008
extern int slurmdb_unpack_clus_res_rec(904,27322
extern void slurmdb_pack_cluster_rec(925,27839
extern int slurmdb_unpack_cluster_rec(1031,30363
extern void slurmdb_pack_accounting_rec(1120,33011
extern int slurmdb_unpack_accounting_rec(1152,33730
extern void slurmdb_pack_association_rec(1179,34477
extern int slurmdb_unpack_association_rec(1516,42539
extern void slurmdb_pack_event_rec(1735,49649
extern int slurmdb_unpack_event_rec(1765,50430
extern void slurmdb_pack_qos_rec(1792,51340
extern int slurmdb_unpack_qos_rec(2120,59503
extern void slurmdb_pack_reservation_rec(2322,66342
extern int slurmdb_unpack_reservation_rec(2392,68232
extern void slurmdb_pack_res_rec(2448,70223
extern int slurmdb_unpack_res_rec(2501,71714
extern void slurmdb_pack_txn_rec(2554,73195
extern int slurmdb_unpack_txn_rec(2584,73913
extern void slurmdb_pack_wckey_rec(2616,74884
extern int slurmdb_unpack_wckey_rec(2708,76644
extern void slurmdb_pack_archive_rec(2783,78536
extern int slurmdb_unpack_archive_rec(2797,78829
extern void slurmdb_pack_user_cond(2818,79317
extern int slurmdb_unpack_user_cond(2879,80755
extern void slurmdb_pack_account_cond(2945,82462
extern int slurmdb_unpack_account_cond(3002,83836
extern void slurmdb_pack_cluster_cond(3055,85178
extern int slurmdb_unpack_cluster_cond(3164,87663
extern void slurmdb_pack_association_cond(3247,89973
extern int slurmdb_unpack_association_cond(4300,115565
extern void slurmdb_pack_event_cond(5103,137602
extern int slurmdb_unpack_event_cond(5198,139806
extern void slurmdb_pack_job_cond(5274,141820
extern int slurmdb_unpack_job_cond(5883,157345
extern void slurmdb_pack_job_modify_cond(6367,170362
extern int slurmdb_unpack_job_modify_cond(6383,170699
extern void slurmdb_pack_job_rec(6405,171212
extern int slurmdb_unpack_job_rec(6528,175216
extern void slurmdb_pack_qos_cond(6676,180891
extern int slurmdb_unpack_qos_cond(6786,183431
extern void slurmdb_pack_reservation_cond(6876,185724
extern int slurmdb_unpack_reservation_cond(6943,187291
extern void slurmdb_pack_selected_step(6996,188737
extern int slurmdb_unpack_selected_step(7003,188918
extern void slurmdb_pack_step_rec(7022,189338
extern int slurmdb_unpack_step_rec(7077,191304
extern void slurmdb_pack_res_cond(7151,194117
extern int slurmdb_unpack_res_cond(7291,197192
extern void slurmdb_pack_txn_cond(7406,200049
extern int slurmdb_unpack_txn_cond(7537,203177
extern void slurmdb_pack_wckey_cond(7649,206011
extern int slurmdb_unpack_wckey_cond(7808,209553
extern void slurmdb_pack_archive_cond(7931,212749
extern int slurmdb_unpack_archive_cond(7989,214652
extern void slurmdb_pack_update_object(8065,216996
extern int slurmdb_unpack_update_object(8128,218618

src/common/slurmdb_pack.h,32
#define _SLURMDB_PACK_H39,2172

src/common/slurm_errno.c,357
	int xe_number;63,2844
	char *xe_message;xe_message64,2860
} slurm_errtab_t;65,2879
static slurm_errtab_t slurm_errtab[slurm_errtab68,2986
static char *_lookup_slurm_api_errtab(_lookup_slurm_api_errtab411,16014
char *slurm_strerror(slurm_strerror448,16892
int slurm_get_errno(457,17037
void slurm_seterrno(465,17127
void slurm_perror(477,17315

src/common/slurm_ext_sensors.c,979
typedef struct slurm_ext_sensors_ops 59,2579
	int (*update_component_data)update_component_data60,2618
	int (*get_stepstartdata)get_stepstartdata61,2656
	int (*get_stependdata)get_stependdata62,2718
	List (*get_config)get_config63,2780
} slurm_ext_sensors_ops_t;64,2818
static const char *syms[syms69,2955
static slurm_ext_sensors_ops_t ops;76,3128
static plugin_context_t *g_context g_context77,3164
static pthread_mutex_t g_context_lock 78,3207
static bool init_run 79,3274
extern int ext_sensors_init(81,3305
extern int ext_sensors_fini(114,3892
extern ext_sensors_data_t *ext_sensors_alloc(ext_sensors_alloc128,4075
extern void ext_sensors_destroy(139,4309
extern void ext_sensors_data_pack(144,4400
extern int ext_sensors_data_unpack(161,4837
extern int ext_sensors_g_update_component_data(182,5462
extern int ext_sensors_g_get_stepstartdata(194,5656
extern int ext_sensors_g_get_stependdata(206,5874
extern int ext_sensors_g_get_config(218,6088

src/common/slurm_ext_sensors.h,40
#define __SLURM_EXT_SENSORS_H__39,2063

src/common/slurm_jobacct_gather.c,2073
typedef struct slurm_jobacct_gather_ops 86,3771
	void (*poll_data)poll_data87,3813
	int (*endpoll)endpoll88,3886
	int (*add_task)add_task89,3909
} slurm_jobacct_gather_ops_t;90,3967
static const char *syms[syms96,4106
static slurm_jobacct_gather_ops_t ops;102,4230
static plugin_context_t *g_context g_context103,4269
static pthread_mutex_t g_context_lock 104,4312
static bool init_run 105,4379
static int freq 107,4410
static bool pgid_plugin 108,4431
static List task_list 109,4464
static uint64_t cont_id 110,4494
static pthread_mutex_t task_list_lock 111,4538
static bool jobacct_shutdown 113,4606
static bool plugin_polling 114,4643
static uint32_t jobacct_job_id 116,4679
static uint32_t jobacct_step_id 117,4719
static uint64_t jobacct_mem_limit 118,4759
static uint64_t jobacct_vmem_limit 119,4799
static void _acct_kill_step(122,4899
static void _pack_jobacct_id(149,5549
static int _unpack_jobacct_id(161,5855
static void _write_jobacct_id(172,6108
static int _read_jobacct_id(188,6519
static void _poll_data(199,6778
static void _task_sleep(207,6963
static void *_watch_tasks(_watch_tasks219,7198
extern int jobacct_gather_init(241,7926
extern int jobacct_gather_fini(298,9340
extern int jobacct_gather_startpoll(312,9597
extern int jobacct_gather_endpoll(356,10638
extern int jobacct_gather_add_task(376,10979
extern jobacctinfo_t *jobacct_gather_stat_task(jobacct_gather_stat_task420,11910
extern jobacctinfo_t *jobacct_gather_remove_task(jobacct_gather_remove_task464,13088
extern int jobacct_gather_set_proctrack_container_id(504,13935
extern int jobacct_gather_set_mem_limit(524,14463
extern void jobacct_gather_handle_mem_limit(544,15017
extern jobacctinfo_t *jobacctinfo_create(jobacctinfo_create595,16641
extern void jobacctinfo_destroy(640,17975
extern int jobacctinfo_setinfo(646,18104
extern int jobacctinfo_getinfo(827,23846
extern void jobacctinfo_pack(1008,29604
extern int jobacctinfo_unpack(1153,34950
extern void jobacctinfo_aggregate(1324,41505
extern void jobacctinfo_2_stats(1404,43754

src/common/slurm_jobacct_gather.h,1466
#define __SLURM_JOBACCT_GATHER_H__52,2643
#define PROTOCOL_TYPE_SLURM 82,3267
#define PROTOCOL_TYPE_DBD 83,3297
struct lustre_data 85,3326
	uint64_t	reads;86,3347
	uint64_t	writes;87,3364
	double		read_size;88,3382
	double		write_size;89,3433
	uint16_t taskid;93,3505
	uint32_t nodeid;94,3566
	stepd_step_rec_t *job;job95,3627
} jobacct_id_t;96,3684
struct jobacctinfo 98,3701
	pid_t pid;99,3722
	uint32_t sys_cpu_sec;100,3734
	uint32_t sys_cpu_usec;101,3757
	uint32_t user_cpu_sec;102,3781
	uint32_t user_cpu_usec;103,3805
	uint64_t max_vsize;104,3830
	jobacct_id_t max_vsize_id;105,3884
	uint64_t tot_vsize;106,3955
	uint64_t max_rss;108,4044
	jobacct_id_t max_rss_id;109,4091
	uint64_t tot_rss;110,4153
	uint64_t max_pages;112,4227
	jobacct_id_t max_pages_id;113,4264
	uint64_t tot_pages;114,4328
	uint32_t min_cpu;116,4406
	jobacct_id_t min_cpu_id;117,4444
	uint32_t tot_cpu;118,4506
	uint32_t act_cpufreq;119,4576
	acct_gather_energy_t energy;120,4626
	uint32_t last_total_cputime;121,4656
	uint32_t this_sampled_cputime;122,4686
	uint32_t current_weighted_freq;123,4718
	uint32_t current_weighted_power;124,4751
	double max_disk_read;125,4785
	jobacct_id_t max_disk_read_id;126,4833
	double tot_disk_read;127,4898
	double max_disk_write;128,4962
	jobacct_id_t max_disk_write_id;129,5012
	double tot_disk_write;130,5079
#  define  __jobacctinfo_t_defined135,5259
   typedef struct jobacctinfo jobacctinfo_t;136,5294

src/common/slurm_jobcomp.c,803
typedef struct slurm_jobcomp_ops 65,2889
	int          (*set_loc)set_loc66,2924
	int          (*job_write)job_write67,2966
	int          (*sa_errno)sa_errno68,3024
	char *       (*job_strerror)job_strerror69,3061
	List         (*get_jobs)get_jobs70,3108
	int          (*archive)archive71,3167
} slurm_jobcomp_ops_t;72,3230
static const char *syms[syms78,3360
static slurm_jobcomp_ops_t ops;87,3561
static plugin_context_t *g_context g_context88,3593
static pthread_mutex_t context_lock 89,3636
static bool init_run 90,3701
jobcomp_destroy_job(93,3744
g_slurm_jobcomp_init(118,4237
g_slurm_jobcomp_fini(152,4911
g_slurm_jobcomp_write(169,5168
g_slurm_jobcomp_errno(185,5500
g_slurm_jobcomp_strerror(201,5805
g_slurm_jobcomp_get_jobs(215,6096
g_slurm_jobcomp_archive(229,6407

src/common/slurm_jobcomp.h,771
#define __SLURM_JOBCOMP_H__41,2220
	uint32_t jobid;60,2660
	char *partition;partition61,2677
	char *start_time;start_time62,2695
	char *end_time;end_time63,2714
	uint32_t uid;64,2731
	char *uid_name;uid_name65,2746
	uint32_t gid;66,2763
	char *gid_name;gid_name67,2778
	uint32_t node_cnt;68,2795
	char *nodelist;nodelist69,2815
	char *jobname;jobname70,2832
	char *state;state71,2848
	char *timelimit;timelimit72,2862
	char *blockid;blockid73,2880
	char *connection;connection74,2896
	char *reboot;reboot75,2915
	char *rotate;rotate76,2930
	uint32_t max_procs;77,2945
	char *geo;geo78,2966
	char *bg_start_point;bg_start_point79,2978
} jobcomp_job_rec_t;80,3001
typedef struct slurm_jobcomp_context * slurm_jobcomp_context_t;82,3023

src/common/slurm_priority.c,944
typedef struct slurm_priority_ops 44,2272
	uint32_t (*set)set45,2308
	void     (*reconfig)reconfig47,2394
	void     (*set_assoc_usage)set_assoc_usage48,2442
	double   (*calc_fs_factor)calc_fs_factor49,2506
	List	 (*get_priority_factors)get_priority_factors51,2594
	void     (*job_end)job_end53,2680
} slurm_priority_ops_t;54,2738
static const char *syms[syms59,2827
static slurm_priority_ops_t ops;68,3029
static plugin_context_t *g_priority_context g_priority_context69,3062
static pthread_mutex_t g_priority_context_lock 70,3114
static bool init_run 71,3190
extern int slurm_priority_init(76,3270
extern int slurm_priority_fini(108,3907
extern uint32_t priority_g_set(121,4119
extern void priority_g_reconfig(129,4290
extern void priority_g_set_assoc_usage(139,4431
extern double priority_g_calc_fs_factor(148,4595
extern List priority_g_get_priority_factors_list(158,4804
extern void priority_g_job_end(167,5013

src/common/slurm_priority.h,34
#define _SLURM_PRIORITY_H40,2162

src/common/slurm_protocol_api.c,9355
#define _DEBUG	82,3250
#define MAX_SHUTDOWN_RETRY 83,3267
static slurm_protocol_config_t proto_conf_default;87,3390
static slurm_protocol_config_t *proto_conf proto_conf88,3441
static int message_timeout 90,3553
slurm_dbd_conf_t *slurmdbd_conf slurmdbd_conf103,3872
int slurm_set_api_config(115,4292
slurm_protocol_config_t *slurm_get_api_config(slurm_get_api_config125,4579
int slurm_api_set_default_config(135,4865
void slurm_api_clear_config(177,5857
uint16_t slurm_get_complete_wait(185,5992
uint16_t slurm_get_batch_start_timeout(210,6549
uint16_t slurm_get_suspend_timeout(227,6903
uint16_t slurm_get_resume_timeout(244,7235
uint32_t slurm_get_suspend_time(261,7558
uint32_t slurm_get_def_mem_per_cpu(278,7880
uint16_t slurm_get_kill_on_bad_exit(295,8202
uint32_t slurm_get_prolog_flags(312,8535
uint32_t slurm_get_debug_flags(329,8846
void slurm_set_debug_flags(345,9112
uint32_t slurm_get_max_mem_per_cpu(360,9393
uint32_t slurm_get_epilog_msg_time(377,9714
extern int slurm_get_env_timeout(394,10065
char *slurm_get_mpi_default(slurm_get_mpi_default412,10451
char *slurm_get_mpi_params(slurm_get_mpi_params430,10856
uint16_t slurm_get_msg_timeout(447,11187
char *slurm_get_plugin_dir(slurm_get_plugin_dir469,11661
uint32_t slurm_get_priority_decay_hl(488,12097
uint32_t slurm_get_priority_calc_period(507,12507
bool slurm_get_priority_favor_small(526,12933
uint32_t slurm_get_priority_max_age(546,13306
uint16_t slurm_get_priority_reset_period(565,13707
char *slurm_get_priority_type(slurm_get_priority_type584,14125
uint32_t slurm_get_priority_weight_age(603,14515
uint32_t slurm_get_priority_weight_fairshare(623,14908
uint16_t slurm_get_fs_dampening_factor(642,15293
uint32_t slurm_get_priority_weight_job_size(661,15678
uint32_t slurm_get_priority_weight_partition(680,16075
uint32_t slurm_get_priority_weight_qos(700,16463
uint16_t slurm_get_private_data(719,16785
char *slurm_get_state_save_location(slurm_get_state_save_location738,17265
char *slurm_get_auth_type(slurm_get_auth_type756,17677
extern char *slurm_get_checkpoint_type(slurm_get_checkpoint_type775,18117
char *slurm_get_cluster_name(slurm_get_cluster_name793,18531
extern char *slurm_get_crypto_type(slurm_get_crypto_type811,18895
extern char * slurm_get_topology_plugin(829,19302
extern uint16_t slurm_get_propagate_prio_process(846,19680
extern uint16_t slurm_get_fast_schedule(863,20050
extern uint16_t slurm_get_track_wckey(880,20379
extern int slurm_set_tree_width(899,20775
extern uint16_t slurm_get_tree_width(918,21168
extern uint16_t slurm_get_vsize_factor(935,21499
extern int slurm_set_auth_type(954,21892
uint32_t slurm_get_hash_val(975,22361
char *slurm_get_health_check_program(slurm_get_health_check_program995,22788
char *slurm_get_gres_plugins(slurm_get_gres_plugins1014,23240
char *slurm_get_job_submit_plugins(slurm_get_job_submit_plugins1034,23671
char *slurm_get_slurmctld_plugstack(slurm_get_slurmctld_plugstack1053,24134
char *slurm_get_slurmd_plugstack(slurm_get_slurmd_plugstack1072,24587
char *slurm_get_accounting_storage_type(slurm_get_accounting_storage_type1090,25032
char *slurm_get_accounting_storage_user(slurm_get_accounting_storage_user1110,25518
int slurm_set_accounting_storage_user(1129,25945
char *slurm_get_accounting_storage_backup_host(slurm_get_accounting_storage_backup_host1149,26473
char *slurm_get_accounting_storage_host(slurm_get_accounting_storage_host1168,26967
int slurm_set_accounting_storage_host(1187,27394
char *slurm_get_accounting_storage_loc(slurm_get_accounting_storage_loc1207,27908
int slurm_set_accounting_storage_loc(1226,28326
uint16_t slurm_get_accounting_storage_enforce(1245,28763
int slurm_get_is_association_based_accounting(1263,29122
char *slurm_get_accounting_storage_pass(slurm_get_accounting_storage_pass1287,29693
static char *_get_auth_info(_get_auth_info1307,30166
static char *_global_auth_key(_global_auth_key1329,30667
uint32_t slurm_get_accounting_storage_port(1368,31722
int slurm_set_accounting_storage_port(1388,32143
uint16_t slurm_get_preempt_mode(1411,32683
char *slurm_get_jobacct_gather_type(slurm_get_jobacct_gather_type1429,33094
char *slurm_get_jobacct_gather_params(slurm_get_jobacct_gather_params1447,33532
char *slurm_get_jobacct_gather_freq(slurm_get_jobacct_gather_freq1465,33952
char *slurm_get_acct_gather_energy_type(slurm_get_acct_gather_energy_type1483,34353
char *slurm_get_acct_gather_profile_type(slurm_get_acct_gather_profile_type1502,34824
char *slurm_get_acct_gather_infiniband_type(slurm_get_acct_gather_infiniband_type1521,35309
char *slurm_get_acct_gather_filesystem_type(slurm_get_acct_gather_filesystem_type1540,35809
extern uint16_t slurm_get_acct_gather_node_freq(1556,36136
char *slurm_get_ext_sensors_type(slurm_get_ext_sensors_type1574,36523
extern uint16_t slurm_get_ext_sensors_freq(1589,36794
char *slurm_get_jobcomp_type(slurm_get_jobcomp_type1607,37192
char *slurm_get_jobcomp_loc(slurm_get_jobcomp_loc1625,37601
char *slurm_get_jobcomp_user(slurm_get_jobcomp_user1643,37986
char *slurm_get_jobcomp_host(slurm_get_jobcomp_host1661,38379
char *slurm_get_jobcomp_pass(slurm_get_jobcomp_pass1679,38780
uint32_t slurm_get_jobcomp_port(1697,39147
int slurm_set_jobcomp_port(1716,39494
uint16_t slurm_get_keep_alive_time(1738,39899
uint16_t slurm_get_kill_wait(1757,40276
char *slurm_get_launch_type(slurm_get_launch_type1775,40634
int slurm_set_launch_type(1793,40973
char *slurm_get_preempt_type(slurm_get_preempt_type1811,41351
char *slurm_get_proctrack_type(slurm_get_proctrack_type1829,41738
uint16_t slurm_get_slurmd_port(1847,42105
uint32_t slurm_get_slurm_user_id(1865,42453
uint32_t slurm_get_slurmd_user_id(1884,42846
extern uint16_t slurm_get_root_filter(1900,43162
extern char *slurm_get_sched_params(slurm_get_sched_params1916,43509
extern uint16_t slurm_get_sched_port(1932,43813
char *slurm_get_sched_type(slurm_get_sched_type1950,44162
char *slurm_get_select_type(slurm_get_select_type1968,44530
uint16_t slurm_get_select_type_param(1986,44898
bool is_cray_select_type(2001,45219
char *slurm_get_switch_type(slurm_get_switch_type2018,45591
uint16_t slurm_get_wait_time(2033,45899
char *slurm_get_srun_prolog(slurm_get_srun_prolog2051,46268
char *slurm_get_srun_epilog(slurm_get_srun_epilog2069,46638
char *slurm_get_task_epilog(slurm_get_task_epilog2085,46944
char *slurm_get_task_prolog(slurm_get_task_prolog2101,47265
char *slurm_get_task_plugin(slurm_get_task_plugin2117,47586
uint16_t slurm_get_task_plugin_param(2129,47825
char *slurm_get_core_spec_plugin(slurm_get_core_spec_plugin2145,48180
char *slurm_get_job_container_plugin(slurm_get_job_container_plugin2158,48506
static void _remap_slurmctld_errno(2170,48833
slurm_fd_t slurm_init_msg_engine_port(2194,49781
slurm_fd_t slurm_init_msg_engine_addrname_port(2209,50221
slurm_fd_t slurm_init_msg_engine(2231,50738
int slurm_shutdown_msg_engine(2243,51006
int slurm_shutdown_msg_conn(2258,51338
slurm_fd_t slurm_open_msg_conn(2275,52043
slurm_fd_t slurm_open_controller_conn(2289,52538
slurm_fd_t slurm_open_controller_conn_spec(2368,54702
void slurm_get_controller_addr_spec(2402,55568
slurm_fd_t slurm_accept_msg_conn(2414,56010
int slurm_close_accepted_conn(2425,56348
int slurm_receive_msg(2442,56977
List slurm_receive_msgs(2596,61000
static int _unpack_msg_uid(2778,65875
int slurm_receive_msg_and_forward(2801,66605
_pack_msg(3016,72857
int slurm_send_node_msg(3038,73423
slurm_fd_t slurm_listen_stream(3149,76468
slurm_fd_t slurm_accept_stream(3160,76856
slurm_fd_t slurm_open_stream(3171,77266
size_t slurm_write_stream(3184,77659
size_t slurm_write_stream_timeout(3190,77871
size_t slurm_read_stream(3206,78369
size_t slurm_read_stream_timeout(3212,78580
int slurm_get_stream_addr(3225,78977
int slurm_close_stream(3235,79265
int slurm_set_stream_non_blocking(3245,79553
int slurm_set_stream_blocking(3249,79660
void slurm_set_addr_uint(3264,80195
void slurm_set_addr_any(3275,80532
void slurm_set_addr(3286,80880
void reset_slurm_addr(3296,81224
void slurm_set_addr_char(3307,81567
void slurm_get_addr(3320,81931
void slurm_get_ip_str(3333,82352
int slurm_get_peer_addr(3346,82827
void slurm_print_slurm_addr(3364,83349
void slurm_pack_slurm_addr(3378,83840
int slurm_unpack_slurm_addr_no_alloc(3389,84201
void slurm_pack_slurm_addr_array(3402,84609
int slurm_unpack_slurm_addr_array(3422,85130
int slurm_send_rc_msg(3460,86184
int slurm_send_rc_err_msg(3493,87137
_send_and_recv_msg(3529,88223
_send_and_recv_msgs(3569,89384
int slurm_send_recv_controller_msg(3624,90763
int slurm_send_recv_node_msg(3705,92924
int slurm_send_only_controller_msg(3724,93421
int slurm_send_only_node_msg(3768,94401
List slurm_send_recv_msgs(3806,95453
List slurm_send_addr_recv_msgs(3838,96286
int slurm_send_recv_rc_msg_only_one(3895,97997
int slurm_send_recv_controller_rc_msg(3929,98970
extern int *set_span(set_span3954,99628
extern void slurm_free_msg(3995,100326
extern char *nodelist_nth_host(nodelist_nth_host4008,100540
extern int nodelist_find(4016,100725
extern void convert_num_unit2(4024,100909
extern void convert_num_unit(4061,101789
extern int revert_num_unit(4066,101938
static void _print_data(4089,102257
slurm_forward_data(4113,102742

src/common/slurm_protocol_api.h,338
#define _SLURM_PROTOCOL_API_H43,2320
#define MIN_NOALLOC_JOBID 68,2865
#define MAX_NOALLOC_JOBID 69,2915
enum controller_id 71,2966
	PRIMARY_CONTROLLER 72,2987
	SECONDARY_CONTROLLER 73,3012
	UNIT_NONE,78,3066
	UNIT_KILO,79,3078
	UNIT_MEGA,80,3090
	UNIT_GIGA,81,3102
	UNIT_TERA,82,3114
	UNIT_PETA,83,3126
	UNIT_UNKNOWN84,3138

src/common/slurm_protocol_common.h,778
#define _SLURM_PROTOCOL_COMMON_H41,2219
#define SLURM_PROTOCOL_NO_SEND_RECV_FLAGS 53,2413
#define SLURM_PROTOCOL_DEFAULT_LISTEN_BACKLOG 57,2525
#define SLURM_PROTOCOL_FUNCTION_NOT_IMPLEMENTED 61,2616
#define SLURM_PROTOCOL_MAX_MESSAGE_BUFFER_SIZE 65,2767
#define SLURM_PROTOCOL_VERSION 72,3156
#define SLURM_14_03_PROTOCOL_VERSION 73,3228
#define SLURM_2_6_PROTOCOL_VERSION 74,3281
#define SLURM_2_5_PROTOCOL_VERSION 75,3332
#define SLURM_2_4_PROTOCOL_VERSION 78,3469
#define SLURM_2_3_PROTOCOL_VERSION 79,3520
#define SLURM_2_2_PROTOCOL_VERSION 80,3571
#define SLURM_2_1_PROTOCOL_VERSION 81,3622
#define SLURM_2_0_PROTOCOL_VERSION 82,3673
#define SLURM_1_3_PROTOCOL_VERSION 83,3724
#define SLURM_PROTOCOL_NO_FLAGS 87,3816
#define SLURM_GLOBAL_AUTH_KEY 88,3850

src/common/slurm_protocol_defs.c,8160
extern void slurm_msg_t_init(106,4659
extern void slurm_msg_t_copy(127,5256
extern void slurm_destroy_char(137,5508
extern void slurm_destroy_uint32_ptr(143,5600
extern char *slurm_add_slash_to_quotes(slurm_add_slash_to_quotes150,5779
extern int slurm_addto_char_list(168,6193
extern int slurm_sort_char_list_asc(264,8183
extern int slurm_sort_char_list_desc(278,8413
extern void slurm_free_last_update_msg(292,8644
extern void slurm_free_reboot_msg(297,8726
extern void slurm_free_shutdown_msg(305,8839
extern void slurm_free_job_alloc_info_msg(310,8915
extern void slurm_free_return_code_msg(315,9003
extern void slurm_free_job_id_msg(320,9085
extern void slurm_free_job_user_id_msg(325,9157
extern void slurm_free_job_step_id_msg(330,9239
extern void slurm_free_job_id_request_msg(335,9321
extern void slurm_free_update_step_msg(340,9409
extern void slurm_free_job_id_response_msg(349,9572
extern void slurm_free_job_step_kill_msg(354,9662
extern void slurm_free_job_info_request_msg(359,9748
extern void slurm_free_job_step_info_request_msg(364,9839
extern void slurm_free_front_end_info_request_msg369,9940
extern void slurm_free_node_info_request_msg(375,10046
extern void slurm_free_node_info_single_msg(380,10139
extern void slurm_free_part_info_request_msg(388,10271
extern void slurm_free_job_desc_msg(393,10364
extern void slurm_free_prolog_launch_msg(448,11643
extern void slurm_free_complete_prolog_msg(468,12008
extern void slurm_free_job_launch_msg(474,12100
extern void slurm_free_job_info(517,13016
extern void slurm_free_job_info_members(525,13136
extern void slurm_free_acct_gather_node_resp_msg(562,13983
extern void slurm_free_acct_gather_energy_req_msg(572,14170
extern void slurm_free_node_registration_status_msg(580,14291
extern void slurm_free_update_front_end_msg(600,14747
extern void slurm_free_update_node_msg(609,14897
extern void slurm_free_update_part_msg(622,15141
extern void slurm_free_delete_part_msg(630,15301
extern void slurm_free_resv_desc_msg(638,15419
extern void slurm_free_resv_name_msg(654,15724
extern void slurm_free_resv_info_request_msg(662,15845
extern void slurm_free_job_step_create_request_msg(667,15939
extern void slurm_free_complete_job_allocation_msg(682,16219
extern void slurm_free_complete_batch_script_msg(688,16327
extern void slurm_free_launch_tasks_response_msg(699,16511
extern void slurm_free_kill_job_msg(710,16706
extern void slurm_free_signal_job_msg(725,17018
extern void slurm_free_update_job_time_msg(730,17098
extern void slurm_free_task_exit_msg(735,17181
extern void slurm_free_launch_tasks_request_msg(743,17303
extern void slurm_free_task_user_managed_io_stream_msg(806,18576
extern void slurm_free_reattach_tasks_request_msg(812,18685
extern void slurm_free_reattach_tasks_response_msg(823,18888
extern void slurm_free_kill_tasks_msg(840,19203
extern void slurm_free_checkpoint_tasks_msg(845,19283
extern void slurm_free_epilog_complete_msg(853,19416
extern void slurm_free_srun_job_complete_msg(861,19547
extern void slurm_free_srun_exec_msg(867,19644
extern void slurm_free_srun_ping_msg(879,19824
extern void slurm_free_srun_node_fail_msg(884,19902
extern void slurm_free_srun_step_missing_msg(892,20030
extern void slurm_free_srun_timeout_msg(900,20164
extern void slurm_free_srun_user_msg(905,20248
extern void slurm_free_checkpoint_msg(913,20381
extern void slurm_free_checkpoint_comp_msg(921,20501
extern void slurm_free_checkpoint_task_comp_msg(929,20631
extern void slurm_free_checkpoint_resp_msg(937,20771
extern void slurm_free_suspend_msg(944,20900
slurm_free_requeue_msg(950,20985
extern void slurm_free_suspend_int_msg(955,21046
extern void slurm_free_stats_response_msg(963,21195
extern void slurm_free_spank_env_request_msg(968,21287
extern void slurm_free_spank_env_responce_msg(973,21380
extern char *job_reason_string(job_reason_string984,21664
extern void slurm_free_get_kvs_msg(1064,23550
extern void slurm_free_will_run_response_msg(1072,23663
inline void slurm_free_forward_data_msg(1082,23908
extern void slurm_free_ping_slurmd_resp(1091,24050
extern char *preempt_mode_string(preempt_mode_string1096,24137
extern uint16_t preempt_mode_num(1126,24947
extern char *log_num2string(log_num2string1173,26176
extern uint16_t log_string2num(1202,26599
extern char *job_state_string(job_state_string1234,27364
extern char *job_state_string_compact(job_state_string_compact1273,28148
static bool _job_name_test(1312,28843
extern int job_state_num(1321,29077
extern char *trigger_res_type(trigger_res_type1342,29534
extern char *health_check_node_state_str(health_check_node_state_str1362,30122
extern char *trigger_type(trigger_type1388,30685
extern char *reservation_flags_string(reservation_flags_string1434,32361
extern char *node_state_string(node_state_string1518,34362
extern char *node_state_string_compact(node_state_string_compact1644,37166
extern void private_data_string(1771,39862
extern void accounting_enforce_string(1818,40909
extern char *conn_type_string(conn_type_string1865,41936
extern char *conn_type_string_full(conn_type_string_full1891,42410
extern char* node_use_string(1913,43041
extern char *bg_block_state_string(bg_block_state_string1926,43270
extern char *cray_nodelist2nids(cray_nodelist2nids1978,44177
extern void slurm_free_resource_allocation_response_msg 2046,45685
extern void slurm_free_sbcast_cred_msg(2067,46280
extern void slurm_free_job_alloc_info_response_msg(2083,46724
extern void slurm_free_job_step_create_response_msg(2104,47245
extern void slurm_free_submit_response_response_msg(2128,47824
extern void slurm_free_ctl_conf(2139,48115
extern void slurm_free_slurmd_status(2152,48438
extern void slurm_free_job_info_msg(2168,48906
static void _free_all_job_info(2179,49146
extern void slurm_free_job_step_info_response_msg(2197,49580
static void _free_all_step_info 2209,49807
extern void slurm_free_job_step_info_members 2221,50053
extern void slurm_free_front_end_info_msg(2241,50595
static void _free_all_front_end_info(2252,50799
extern void slurm_free_front_end_info_members(2263,51046
extern void slurm_free_node_info_msg(2281,51542
static void _free_all_node_info(2292,51721
extern void slurm_free_node_info_members(2303,51943
extern void slurm_free_partition_info_msg(2326,52509
static void  _free_all_partitions(2337,52709
extern void slurm_free_partition_info_members(2351,52963
extern void slurm_free_reservation_info_msg(2373,53533
static void  _free_all_reservations(2384,53739
extern void slurm_free_reserve_info_members(2398,53995
extern void slurm_free_topo_info_msg(2418,54502
extern void slurm_free_file_bcast_msg(2434,54798
extern void slurm_free_step_complete_msg(2445,54993
extern void slurm_free_job_step_stat(2453,55131
extern void slurm_free_job_step_pids(2463,55348
extern void slurm_free_block_job_info(2474,55529
extern void slurm_free_block_info_members(2485,55806
extern void slurm_free_block_info(2501,56224
extern void slurm_free_block_info_msg(2509,56377
extern void slurm_free_block_info_request_msg(2523,56720
extern void slurm_free_trigger_msg(2529,56817
extern void slurm_free_set_debug_flags_msg(2541,57053
extern void slurm_free_set_debug_level_msg(2546,57142
extern void slurm_destroy_association_shares_object(2551,57231
extern void slurm_free_shares_request_msg(2564,57498
extern void slurm_free_shares_response_msg(2575,57711
inline void slurm_free_stats_info_request_msg(2585,57888
extern void slurm_destroy_priority_factors_object(2591,57984
extern void slurm_free_priority_factors_request_msg(2598,58147
extern void slurm_free_priority_factors_response_msg(2610,58384
extern void slurm_free_accounting_update_msg(2621,58591
extern int slurm_free_msg_data(2630,58759
extern uint32_t slurm_get_return_code(2864,64898
extern void slurm_free_job_notify_msg(2903,65928
extern bool valid_spank_job_env(2916,66228
extern char *slurm_ctime(slurm_ctime2934,66651
extern char *slurm_ctime_r(slurm_ctime_r2945,66892
slurm_free_license_info_msg(2961,67202
extern void slurm_free_license_info_request_msg(2974,67413

src/common/slurm_protocol_defs.h,26870
#define _SLURM_PROTOCOL_DEFS_H42,2309
#define MAX_SLURM_NAME 72,3053
#define FORWARD_INIT 73,3079
#define IS_JOB_PENDING(76,3133
#define IS_JOB_RUNNING(78,3214
#define IS_JOB_SUSPENDED(80,3295
#define IS_JOB_COMPLETE(82,3380
#define IS_JOB_CANCELLED(84,3463
#define IS_JOB_FAILED(86,3548
#define IS_JOB_TIMEOUT(88,3627
#define IS_JOB_NODE_FAILED(90,3708
#define IS_JOB_COMPLETING(94,3821
#define IS_JOB_CONFIGURING(96,3888
#define IS_JOB_STARTED(98,3957
#define IS_JOB_FINISHED(100,4038
#define IS_JOB_COMPLETED(102,4122
#define IS_JOB_RESIZING(104,4220
#define IS_NODE_UNKNOWN(108,4310
#define IS_NODE_DOWN(110,4401
#define IS_NODE_IDLE(112,4486
#define IS_NODE_ALLOCATED(114,4571
#define IS_NODE_ERROR(116,4666
#define IS_NODE_MIXED(118,4753
#define IS_NODE_FUTURE(120,4840
#define IS_NODE_CLOUD(124,4956
#define IS_NODE_DRAIN(126,5022
#define IS_NODE_DRAINING(128,5088
#define IS_NODE_DRAINED(131,5232
#define IS_NODE_COMPLETING(133,5309
#define IS_NODE_NO_RESPOND(135,5384
#define IS_NODE_POWER_SAVE(137,5460
#define IS_NODE_POWER_UP(139,5536
#define IS_NODE_FAIL(141,5608
#define IS_NODE_POWER_UP(143,5672
#define IS_NODE_MAINT(145,5744
#define THIS_FILE 148,5811
#  define __switch_jobinfo_t_defined154,5995
   typedef struct switch_jobinfo   switch_jobinfo_t;155,6032
#  define __switch_node_info_t_defined158,6129
   typedef struct switch_node_info switch_node_info_t;159,6168
enum task_flag_vals 165,6336
	TASK_PARALLEL_DEBUG 166,6358
	TASK_PARALLEL_DEBUG = 0x1,x1166,6358
	TASK_UNUSED1 167,6386
	TASK_UNUSED1 = 0x2,x2167,6386
	TASK_UNUSED2 168,6407
	TASK_UNUSED2 = 0x4x4168,6407
	REQUEST_NODE_REGISTRATION_STATUS 179,6695
	MESSAGE_NODE_REGISTRATION_STATUS,180,6737
	REQUEST_RECONFIGURE,181,6772
	RESPONSE_RECONFIGURE,182,6794
	REQUEST_SHUTDOWN,183,6817
	REQUEST_SHUTDOWN_IMMEDIATE,184,6836
	RESPONSE_SHUTDOWN,185,6865
	REQUEST_PING,186,6885
	REQUEST_CONTROL,187,6900
	REQUEST_SET_DEBUG_LEVEL,188,6918
	REQUEST_HEALTH_CHECK,189,6944
	REQUEST_TAKEOVER,190,6967
	REQUEST_SET_SCHEDLOG_LEVEL,191,6986
	REQUEST_SET_DEBUG_FLAGS,192,7015
	REQUEST_REBOOT_NODES,193,7041
	RESPONSE_PING_SLURMD,194,7064
	REQUEST_ACCT_GATHER_UPDATE,195,7087
	RESPONSE_ACCT_GATHER_UPDATE,196,7116
	REQUEST_ACCT_GATHER_ENERGY,197,7146
	RESPONSE_ACCT_GATHER_ENERGY,198,7175
	REQUEST_LICENSE_INFO,199,7205
	RESPONSE_LICENSE_INFO,200,7228
	REQUEST_BUILD_INFO 202,7253
	RESPONSE_BUILD_INFO,203,7281
	REQUEST_JOB_INFO,204,7303
	RESPONSE_JOB_INFO,205,7322
	REQUEST_JOB_STEP_INFO,206,7342
	RESPONSE_JOB_STEP_INFO,207,7366
	REQUEST_NODE_INFO,208,7391
	RESPONSE_NODE_INFO,209,7411
	REQUEST_PARTITION_INFO,210,7432
	RESPONSE_PARTITION_INFO,211,7457
	REQUEST_ACCTING_INFO,212,7483
	RESPONSE_ACCOUNTING_INFO,213,7506
	REQUEST_JOB_ID,214,7533
	RESPONSE_JOB_ID,215,7550
	REQUEST_BLOCK_INFO,216,7568
	RESPONSE_BLOCK_INFO,217,7589
	REQUEST_TRIGGER_SET,218,7611
	REQUEST_TRIGGER_GET,219,7633
	REQUEST_TRIGGER_CLEAR,220,7655
	RESPONSE_TRIGGER_GET,221,7679
	REQUEST_JOB_INFO_SINGLE,222,7702
	REQUEST_SHARE_INFO,223,7728
	RESPONSE_SHARE_INFO,224,7749
	REQUEST_RESERVATION_INFO,225,7771
	RESPONSE_RESERVATION_INFO,226,7798
	REQUEST_PRIORITY_FACTORS,227,7826
	RESPONSE_PRIORITY_FACTORS,228,7853
	REQUEST_TOPO_INFO,229,7881
	RESPONSE_TOPO_INFO,230,7901
	REQUEST_TRIGGER_PULL,231,7922
	REQUEST_FRONT_END_INFO,232,7945
	RESPONSE_FRONT_END_INFO,233,7970
	REQUEST_SPANK_ENVIRONMENT,234,7996
	RESPONCE_SPANK_ENVIRONMENT,235,8024
	REQUEST_STATS_INFO,236,8053
	RESPONSE_STATS_INFO,237,8074
	REQUEST_STATS_RESET,238,8096
	RESPONSE_STATS_RESET,239,8118
	REQUEST_JOB_USER_INFO,240,8141
	REQUEST_NODE_INFO_SINGLE,241,8165
	REQUEST_UPDATE_JOB 243,8193
	REQUEST_UPDATE_NODE,244,8221
	REQUEST_CREATE_PARTITION,245,8243
	REQUEST_DELETE_PARTITION,246,8270
	REQUEST_UPDATE_PARTITION,247,8297
	REQUEST_CREATE_RESERVATION,248,8324
	RESPONSE_CREATE_RESERVATION,249,8353
	REQUEST_DELETE_RESERVATION,250,8383
	REQUEST_UPDATE_RESERVATION,251,8412
	REQUEST_UPDATE_BLOCK,252,8441
	REQUEST_UPDATE_FRONT_END,253,8464
	REQUEST_RESOURCE_ALLOCATION 255,8492
	RESPONSE_RESOURCE_ALLOCATION,256,8529
	REQUEST_SUBMIT_BATCH_JOB,257,8560
	RESPONSE_SUBMIT_BATCH_JOB,258,8587
	REQUEST_BATCH_JOB_LAUNCH,259,8615
	REQUEST_CANCEL_JOB,260,8642
	RESPONSE_CANCEL_JOB,261,8663
	REQUEST_JOB_RESOURCE,262,8685
	RESPONSE_JOB_RESOURCE,263,8708
	REQUEST_JOB_ATTACH,264,8732
	RESPONSE_JOB_ATTACH,265,8753
	REQUEST_JOB_WILL_RUN,266,8775
	RESPONSE_JOB_WILL_RUN,267,8798
	REQUEST_JOB_ALLOCATION_INFO,268,8822
	RESPONSE_JOB_ALLOCATION_INFO,269,8852
	REQUEST_JOB_ALLOCATION_INFO_LITE,270,8883
	RESPONSE_JOB_ALLOCATION_INFO_LITE,271,8918
	REQUEST_UPDATE_JOB_TIME,272,8954
	REQUEST_JOB_READY,273,8980
	RESPONSE_JOB_READY,274,9000
	REQUEST_JOB_END_TIME,275,9021
	REQUEST_JOB_NOTIFY,276,9044
	REQUEST_JOB_SBCAST_CRED,277,9065
	RESPONSE_JOB_SBCAST_CRED,278,9091
	REQUEST_JOB_STEP_CREATE 280,9119
	RESPONSE_JOB_STEP_CREATE,281,9152
	REQUEST_RUN_JOB_STEP,282,9179
	RESPONSE_RUN_JOB_STEP,283,9202
	REQUEST_CANCEL_JOB_STEP,284,9226
	RESPONSE_CANCEL_JOB_STEP,285,9252
	REQUEST_UPDATE_JOB_STEP,286,9279
	DEFUNCT_RESPONSE_COMPLETE_JOB_STEP,287,9305
	REQUEST_CHECKPOINT,288,9356
	RESPONSE_CHECKPOINT,289,9377
	REQUEST_CHECKPOINT_COMP,290,9399
	REQUEST_CHECKPOINT_TASK_COMP,291,9425
	RESPONSE_CHECKPOINT_COMP,292,9456
	REQUEST_SUSPEND,293,9483
	RESPONSE_SUSPEND,294,9501
	REQUEST_STEP_COMPLETE,295,9520
	REQUEST_COMPLETE_JOB_ALLOCATION,296,9544
	REQUEST_COMPLETE_BATCH_SCRIPT,297,9578
	REQUEST_JOB_STEP_STAT,298,9610
	RESPONSE_JOB_STEP_STAT,299,9634
	REQUEST_STEP_LAYOUT,300,9659
	RESPONSE_STEP_LAYOUT,301,9681
	REQUEST_JOB_REQUEUE,302,9704
	REQUEST_DAEMON_STATUS,303,9726
	RESPONSE_SLURMD_STATUS,304,9750
	RESPONSE_SLURMCTLD_STATUS,305,9775
	REQUEST_JOB_STEP_PIDS,306,9803
	RESPONSE_JOB_STEP_PIDS,307,9827
	REQUEST_FORWARD_DATA,308,9852
	REQUEST_COMPLETE_BATCH_JOB,309,9875
	REQUEST_SUSPEND_INT,310,9904
	REQUEST_LAUNCH_TASKS 312,9927
	RESPONSE_LAUNCH_TASKS,313,9957
	MESSAGE_TASK_EXIT,314,9981
	REQUEST_SIGNAL_TASKS,315,10001
	REQUEST_CHECKPOINT_TASKS,316,10024
	REQUEST_TERMINATE_TASKS,317,10051
	REQUEST_REATTACH_TASKS,318,10077
	RESPONSE_REATTACH_TASKS,319,10102
	REQUEST_KILL_TIMELIMIT,320,10128
	REQUEST_SIGNAL_JOB,321,10153
	REQUEST_TERMINATE_JOB,322,10174
	MESSAGE_EPILOG_COMPLETE,323,10198
	REQUEST_ABORT_JOB,324,10224
	REQUEST_FILE_BCAST,326,10332
	TASK_USER_MANAGED_IO_STREAM,327,10353
	REQUEST_KILL_PREEMPTED,328,10383
	REQUEST_LAUNCH_PROLOG,330,10409
	REQUEST_COMPLETE_PROLOG,331,10433
	RESPONSE_PROLOG_EXECUTING,332,10459
	SRUN_PING 334,10488
	SRUN_TIMEOUT,335,10507
	SRUN_NODE_FAIL,336,10522
	SRUN_JOB_COMPLETE,337,10539
	SRUN_USER_MSG,338,10559
	SRUN_EXEC,339,10575
	SRUN_STEP_MISSING,340,10587
	SRUN_REQUEST_SUSPEND,341,10607
	SRUN_STEP_SIGNAL,342,10630
	PMI_KVS_PUT_REQ 345,10748
	PMI_KVS_PUT_RESP,346,10773
	PMI_KVS_GET_REQ,347,10792
	PMI_KVS_GET_RESP,348,10810
	RESPONSE_SLURM_RC 350,10830
	RESPONSE_SLURM_RC_MSG,351,10857
	RESPONSE_FORWARD_FAILED 353,10882
	ACCOUNTING_UPDATE_MSG 355,10916
	ACCOUNTING_FIRST_REG,356,10948
	ACCOUNTING_REGISTER_CTLD,357,10971
} slurm_msg_type_t;358,10998
	CREDENTIAL1361,11034
} slurm_credential_type_t;362,11047
typedef struct forward 367,11268
	uint16_t   cnt;368,11293
	uint16_t   init;369,11347
	char      *nodelist;nodelist370,11410
	uint32_t   timeout;372,11492
} forward_t;373,11547
typedef struct slurm_protocol_header 376,11603
	uint16_t version;377,11642
	uint16_t flags;378,11661
	uint16_t msg_type;379,11678
	uint32_t body_length;381,11784
	uint16_t ret_cnt;382,11807
	forward_t forward;383,11826
	slurm_addr_t orig_addr;384,11846
	List ret_list;385,11871
} header_t;386,11887
typedef struct forward_message 388,11900
	header_t header;389,11933
	char *buf;buf390,11951
	int buf_len;391,11963
	int timeout;392,11977
	List ret_list;393,11991
	pthread_mutex_t *forward_mutex;forward_mutex394,12007
	pthread_cond_t *notify;notify395,12040
} forward_msg_t;396,12065
typedef struct forward_struct 398,12083
	int timeout;399,12115
	uint16_t fwd_cnt;400,12129
	pthread_mutex_t forward_mutex;401,12148
	pthread_cond_t notify;402,12180
	forward_msg_t *forward_msg;forward_msg403,12204
	char *buf;buf404,12233
	int buf_len;405,12245
	List ret_list;406,12259
} forward_struct_t;407,12275
typedef struct slurm_protocol_config 409,12296
	slurm_addr_t primary_controller;410,12335
	slurm_addr_t secondary_controller;411,12369
} slurm_protocol_config_t;412,12405
typedef struct slurm_msg 414,12433
	slurm_addr_t address;415,12460
	void *auth_cred;auth_cred416,12483
	slurm_fd_t conn_fd;417,12501
	void *data;data418,12522
	uint32_t data_size;419,12535
	uint16_t flags;420,12556
	uint16_t msg_type;421,12573
	uint16_t protocol_version;423,12695
	forward_t forward;428,12937
	forward_struct_t *forward_struct;forward_struct429,12957
	slurm_addr_t orig_addr;430,12992
	List ret_list;431,13017
} slurm_msg_t;432,13033
typedef struct ret_data_info 434,13049
	uint16_t type;435,13080
	uint32_t err;437,13194
	char *node_name;node_name438,13209
	void *data;data439,13227
} ret_data_info_t;441,13316
typedef struct association_shares_object 447,13531
	uint32_t assoc_id;448,13574
	char *cluster;cluster450,13616
	uint64_t cpu_run_mins;451,13660
	uint64_t grp_cpu_mins;453,13757
	char *name;name455,13805
	char *parent;parent456,13841
	double shares_norm;458,13885
	uint32_t shares_raw;459,13934
	double usage_efctv;461,13990
	double usage_norm;462,14045
	uint64_t usage_raw;463,14088
	uint16_t user;465,14142
} association_shares_object_t;467,14227
typedef struct shares_request_msg 469,14259
	List acct_list;470,14295
	List user_list;471,14312
} shares_request_msg_t;472,14329
typedef struct shares_response_msg 474,14354
	List assoc_shares_list;475,14391
	uint64_t tot_shares;476,14462
} shares_response_msg_t;477,14484
typedef struct priority_factors_object 479,14510
	uint32_t job_id;480,14551
	uint32_t user_id;481,14569
	double	 priority_age;483,14589
	double	 priority_fs;484,14612
	double	 priority_js;485,14634
	double	 priority_part;486,14656
	double	 priority_qos;487,14680
	uint16_t nice;489,14704
} priority_factors_object_t;490,14720
typedef struct priority_factors_request_msg 492,14750
	List	 job_id_list;493,14796
	List	 uid_list;494,14816
} priority_factors_request_msg_t;495,14833
typedef struct priority_factors_response_msg 497,14868
	List	 priority_factors_list;498,14915
} priority_factors_response_msg_t;499,14982
typedef struct job_step_kill_msg 501,15018
	uint32_t job_id;502,15053
	uint32_t job_step_id;503,15071
	uint16_t signal;504,15094
	uint16_t flags;505,15112
} job_step_kill_msg_t;506,15129
typedef struct job_notify_msg 508,15153
	uint32_t job_id;509,15185
	uint32_t job_step_id;510,15203
	char *   message;511,15251
} job_notify_msg_t;512,15270
typedef struct job_id_msg 514,15291
	uint32_t job_id;515,15319
	uint16_t show_flags;516,15337
} job_id_msg_t;517,15359
typedef struct job_user_id_msg 519,15376
	uint32_t user_id;520,15409
	uint16_t show_flags;521,15428
} job_user_id_msg_t;522,15450
typedef struct job_step_id_msg 524,15472
	uint32_t job_id;525,15505
	uint32_t step_id;526,15523
} job_step_id_msg_t;527,15542
typedef struct job_info_request_msg 529,15564
	time_t last_update;530,15602
	uint16_t show_flags;531,15623
} job_info_request_msg_t;532,15645
typedef struct job_step_info_request_msg 534,15672
	time_t last_update;535,15715
	uint32_t job_id;536,15736
	uint32_t step_id;537,15754
	uint16_t show_flags;538,15773
} job_step_info_request_msg_t;539,15795
typedef struct node_info_request_msg 541,15827
	time_t last_update;542,15866
	uint16_t show_flags;543,15887
} node_info_request_msg_t;544,15909
typedef struct node_info_single_msg 546,15937
	char *node_name;node_name547,15975
	uint16_t show_flags;548,15993
} node_info_single_msg_t;549,16015
typedef struct front_end_info_request_msg 551,16042
	time_t last_update;552,16086
} front_end_info_request_msg_t;553,16107
typedef struct block_info_request_msg 555,16140
	time_t last_update;556,16180
	uint16_t show_flags;557,16201
} block_info_request_msg_t;558,16223
typedef struct part_info_request_msg 560,16252
	time_t last_update;561,16291
	uint16_t show_flags;562,16312
} part_info_request_msg_t;563,16334
typedef struct resv_info_request_msg 565,16362
        time_t last_update;566,16401
} resv_info_request_msg_t;567,16429
typedef struct complete_job_allocation 569,16457
	uint32_t job_id;570,16498
	uint32_t job_rc;571,16516
} complete_job_allocation_msg_t;572,16534
typedef struct complete_batch_script 574,16568
	jobacctinfo_t *jobacct;jobacct575,16607
	uint32_t job_id;576,16632
	uint32_t job_rc;577,16650
	uint32_t slurm_rc;578,16668
	char *node_name;node_name579,16688
	uint32_t user_id;580,16706
} complete_batch_script_msg_t;581,16752
typedef struct complete_prolog 583,16784
	uint32_t job_id;584,16817
	uint32_t prolog_rc;585,16835
} complete_prolog_msg_t;586,16856
typedef struct step_complete_msg 588,16882
	uint32_t job_id;589,16917
	uint32_t job_step_id;590,16935
	uint32_t range_first;591,16958
	uint32_t range_last;592,16981
 	uint32_t step_rc;593,17003
	jobacctinfo_t *jobacct;jobacct594,17054
} step_complete_msg_t;595,17079
typedef struct kill_tasks_msg 597,17103
	uint32_t job_id;598,17135
	uint32_t job_step_id;599,17153
	uint32_t signal;600,17176
} kill_tasks_msg_t;601,17194
typedef struct checkpoint_tasks_msg 603,17215
	uint32_t job_id;604,17253
	uint32_t job_step_id;605,17271
	time_t timestamp;606,17294
	char *image_dir;image_dir607,17313
} checkpoint_tasks_msg_t;608,17331
typedef struct epilog_complete_msg 610,17358
	uint32_t job_id;611,17395
	uint32_t return_code;612,17413
	char    *node_name;node_name613,17436
} epilog_complete_msg_t;614,17457
typedef struct reboot_msg 616,17483
	char *node_list;node_list617,17511
} reboot_msg_t;618,17529
typedef struct shutdown_msg 620,17546
	uint16_t options;621,17576
} shutdown_msg_t;622,17595
typedef struct last_update_msg 624,17614
	time_t last_update;625,17647
} last_update_msg_t;626,17668
typedef struct set_debug_flags_msg 628,17690
	uint32_t debug_flags_minus;629,17727
	uint32_t debug_flags_plus;630,17756
} set_debug_flags_msg_t;631,17784
typedef struct set_debug_level_msg 633,17810
	uint32_t debug_level;634,17847
} set_debug_level_msg_t;635,17870
typedef struct job_step_specs 637,17896
	uint16_t ckpt_interval;638,17928
	char *ckpt_dir;ckpt_dir639,17998
	uint32_t cpu_count;640,18059
	uint32_t cpu_freq;641,18115
	uint16_t exclusive;642,18165
	char *features;features643,18230
	char *gres;gres644,18291
	char *host;host645,18338
	uint16_t immediate;646,18390
	uint32_t job_id;648,18503
	uint32_t pn_min_memory;649,18534
	char *name;name652,18672
	char *network;network653,18725
	uint32_t min_nodes;654,18765
	uint32_t max_nodes;656,18850
	uint8_t no_kill;658,18933
	char *node_list;node_list659,18986
	uint32_t num_tasks;660,19033
	uint8_t overcommit;661,19085
	uint16_t plane_size;663,19205
	uint16_t port;665,19285
	uint16_t relative;666,19340
	uint16_t resv_port_cnt;667,19404
	uint16_t task_dist;668,19464
	uint32_t time_limit;669,19516
	uint32_t user_id;671,19607
} job_step_create_request_msg_t;672,19653
typedef struct job_step_create_response_msg 674,19687
	uint32_t job_step_id;675,19733
	char *resv_ports;resv_ports676,19784
	slurm_step_layout_t *step_layout;step_layout677,19825
	slurm_cred_t *cred;cred679,19954
	dynamic_plugin_data_t *select_jobinfo;select_jobinfo680,20008
	switch_jobinfo_t *switch_job;switch_job681,20078
} job_step_create_response_msg_t;683,20196
typedef struct launch_tasks_request_msg 685,20231
	uint32_t  job_id;686,20273
	uint32_t  job_step_id;687,20292
	uint32_t  nnodes;688,20316
	uint32_t  ntasks;689,20380
	uint32_t  uid;690,20440
	char     *user_name;user_name691,20456
	uint32_t  gid;692,20478
	uint32_t  job_mem_lim;693,20494
	uint32_t  step_mem_lim;696,20635
	uint16_t  *tasks_to_launch;tasks_to_launch697,20696
	uint32_t  envc;698,20725
	uint32_t  argc;699,20742
	uint16_t  multi_prog;700,20759
	uint16_t  node_cpus;701,20782
	uint16_t  cpus_per_task;702,20804
	char    **env;env703,20830
	char    **argv;argv704,20846
	char     *cwd;cwd705,20863
	uint16_t cpu_bind_type;706,20879
	char     *cpu_bind;cpu_bind707,20941
	uint16_t mem_bind_type;708,21007
	char     *mem_bind;mem_bind709,21069
	uint16_t  num_resp_port;710,21135
	uint16_t  *resp_port;resp_port711,21161
	uint16_t task_dist;714,21307
	uint16_t  task_flags;715,21360
	uint32_t **global_task_ids;global_task_ids716,21383
	slurm_addr_t orig_addr;717,21412
	uint16_t user_managed_io;719,21484
	uint8_t open_mode;721,21568
	uint8_t pty;722,21624
	char *acctg_freq;acctg_freq723,21660
	uint32_t cpu_freq;724,21714
	uint16_t job_core_spec;725,21764
	char     *ofname;ofname729,21936
	char     *efname;efname730,21985
	char     *ifname;ifname731,22034
	uint8_t   buffered_stdio;732,22082
	uint8_t   labelio;733,22153
	uint16_t  num_io_port;734,22221
	uint16_t  *io_port;io_port735,22245
	uint32_t profile;738,22372
	char     *task_prolog;task_prolog739,22391
	char     *task_epilog;task_epilog740,22415
	uint16_t   slurmd_debug;742,22440
	slurm_cred_t *cred;cred744,22499
	switch_jobinfo_t *switch_job;switch_job745,22552
	job_options_t options;746,22619
	char *complete_nodelist;complete_nodelist747,22672
	char *ckpt_dir;ckpt_dir748,22698
	char *restart_dir;restart_dir749,22738
	char **spank_job_env;spank_job_env750,22795
	uint32_t spank_job_env_size;751,22818
	dynamic_plugin_data_t *select_jobinfo;select_jobinfo752,22848
	char *alias_list;alias_list753,22922
	char *partition;partition754,22983
} launch_tasks_request_msg_t;755,23040
typedef struct task_user_managed_io_msg 757,23071
	uint32_t task_id;758,23113
} task_user_managed_io_msg_t;759,23132
typedef struct partition_info partition_desc_msg_t;761,23163
typedef struct return_code_msg 763,23216
	uint32_t return_code;764,23249
} return_code_msg_t;765,23272
typedef struct return_code2_msg 766,23293
	uint32_t return_code;767,23327
	char *err_msg;err_msg768,23350
} return_code2_msg_t;769,23366
#define SIG_PREEMPTED	779,23773
#define SIG_DEBUG_WAKE	780,23843
#define SIG_TIME_LIMIT	782,23937
#define SIG_ABORT	783,24012
#define SIG_NODE_FAIL	784,24074
#define SIG_FAILURE	785,24149
typedef struct kill_job_msg 786,24221
	uint32_t job_id;787,24251
	uint32_t step_id;788,24269
	uint16_t job_state;789,24288
	uint32_t job_uid;790,24309
	time_t   time;791,24328
	time_t   start_time;792,24379
	char *nodes;nodes793,24444
	dynamic_plugin_data_t *select_jobinfo;select_jobinfo794,24458
	char **spank_job_env;spank_job_env795,24521
	uint32_t spank_job_env_size;796,24544
} kill_job_msg_t;797,24574
typedef struct signal_job_msg 799,24593
	uint32_t job_id;800,24625
	uint32_t signal;801,24643
} signal_job_msg_t;802,24661
typedef struct job_time_msg 804,24682
	uint32_t job_id;805,24712
	time_t expiration_time;806,24730
} job_time_msg_t;807,24755
typedef struct reattach_tasks_request_msg 809,24774
	uint32_t     job_id;810,24818
	uint32_t     job_step_id;811,24840
	uint16_t     num_resp_port;812,24867
	uint16_t    *resp_port;resp_port813,24896
	uint16_t     num_io_port;814,24961
	uint16_t    *io_port;io_port815,24988
	slurm_cred_t *cred;cred816,25054
} reattach_tasks_request_msg_t;819,25203
typedef struct reattach_tasks_response_msg 821,25236
	char     *node_name;node_name822,25281
	uint32_t  return_code;823,25303
	uint32_t  ntasks;824,25327
	uint32_t *gtids;gtids825,25391
	uint32_t *local_pids;local_pids826,25455
	char     **executable_names;executable_names827,25519
} reattach_tasks_response_msg_t;828,25583
typedef struct prolog_launch_msg 830,25617
	uint32_t job_id;831,25652
	uint32_t uid;832,25690
	uint32_t gid;833,25705
	char *alias_list;alias_list834,25720
	char *nodes;nodes835,25782
	char *partition;partition836,25840
	char *std_err;std_err837,25897
	char *std_out;std_out838,25940
	char *work_dir;work_dir839,25983
	char **spank_job_env;spank_job_env840,26043
	uint32_t spank_job_env_size;841,26104
	dynamic_plugin_data_t *select_jobinfo;select_jobinfo842,26164
} prolog_launch_msg_t;843,26227
typedef struct batch_job_launch_msg 845,26251
	uint32_t array_job_id;846,26289
	uint32_t array_task_id;847,26343
	uint32_t job_id;848,26397
	uint32_t step_id;849,26415
	uint32_t uid;850,26434
	char    *user_name;user_name851,26449
	uint32_t gid;852,26470
	uint32_t ntasks;853,26485
	uint32_t num_cpu_groups;854,26545
	uint16_t cpu_bind_type;855,26605
	char     *cpu_bind;cpu_bind856,26672
	uint16_t *cpus_per_node;cpus_per_node857,26735
	uint32_t *cpu_count_reps;cpu_count_reps858,26780
	uint16_t cpus_per_task;859,26847
	uint16_t job_core_spec;860,26912
	char *alias_list;alias_list861,26970
	char *nodes;nodes862,27031
	char *script;script863,27088
	char *std_err;std_err864,27146
	char *std_in;std_in865,27188
	char *std_out;std_out866,27228
	char *work_dir;work_dir867,27270
	char *ckpt_dir;ckpt_dir868,27329
	char *restart_dir;restart_dir869,27388
	uint32_t argc;870,27454
	char **argv;argv871,27470
	uint32_t envc;872,27484
	char **environment;environment873,27536
	dynamic_plugin_data_t *select_jobinfo;select_jobinfo875,27641
	slurm_cred_t *cred;cred876,27704
	uint8_t open_mode;877,27725
	uint8_t overcommit;878,27781
	char    *partition;partition879,27843
	uint32_t pn_min_memory;880,27896
	char *acctg_freq;acctg_freq883,28032
	uint32_t cpu_freq;884,28086
	uint32_t job_mem;885,28136
	uint16_t restart_cnt;886,28183
	char **spank_job_env;spank_job_env887,28236
	uint32_t spank_job_env_size;888,28297
} batch_job_launch_msg_t;889,28355
typedef struct job_id_request_msg 891,28382
	uint32_t job_pid;892,28418
} job_id_request_msg_t;893,28469
typedef struct job_id_response_msg 895,28494
	uint32_t job_id;896,28531
	uint32_t return_code;897,28568
} job_id_response_msg_t;898,28615
typedef struct srun_exec_msg 900,28641
	uint32_t job_id;901,28672
	uint32_t step_id;902,28709
	uint32_t argc;903,28752
	char **  argv;904,28790
} srun_exec_msg_t;905,28831
typedef struct checkpoint_msg 907,28851
	uint16_t op;908,28883
	uint16_t data;909,28946
	uint32_t job_id;910,28993
	uint32_t step_id;911,29030
	char *image_dir;image_dir912,29069
} checkpoint_msg_t;914,29153
typedef struct checkpoint_comp_msg 916,29174
	uint32_t job_id;917,29211
	uint32_t step_id;918,29248
	time_t   begin_time;919,29287
	uint32_t error_code;920,29337
	char *   error_msg;921,29387
} checkpoint_comp_msg_t;922,29439
typedef struct checkpoint_task_comp_msg 924,29465
	uint32_t job_id;925,29507
	uint32_t step_id;926,29544
	uint32_t task_id;927,29583
	time_t   begin_time;928,29616
	uint32_t error_code;929,29666
	char *   error_msg;930,29716
} checkpoint_task_comp_msg_t;931,29768
typedef struct checkpoint_resp_msg 933,29799
	time_t   event_time;934,29836
	uint32_t error_code;935,29896
	char   * error_msg;936,29946
} checkpoint_resp_msg_t;937,29998
typedef struct kvs_get_msg 939,30024
	uint32_t task_id;940,30053
	uint32_t size;941,30097
	uint16_t port;942,30142
	char * hostname;943,30194
} kvs_get_msg_t;944,30251
typedef struct file_bcast_msg 946,30269
	char *fname;fname947,30301
	uint16_t block_no;948,30351
	uint16_t last_block;949,30403
	uint16_t force;950,30458
	uint16_t modes;951,30511
	uint32_t uid;952,30570
	char *user_name;user_name953,30619
	uint32_t gid;954,30637
	time_t atime;955,30686
	time_t mtime;956,30746
	sbcast_cred_t *cred;cred957,30805
	uint32_t block_len;958,30856
	char *block;block959,30909
} file_bcast_msg_t;960,30950
typedef struct multi_core_data 962,30971
	uint16_t boards_per_node;963,31004
	uint16_t sockets_per_board;964,31071
	uint16_t sockets_per_node;965,31140
	uint16_t cores_per_socket;966,31207
	uint16_t threads_per_core;967,31271
	uint16_t ntasks_per_board;969,31339
	uint16_t ntasks_per_socket;970,31413
	uint16_t ntasks_per_core;971,31489
	uint16_t plane_size;972,31563
} multi_core_data_t;973,31643
typedef struct pty_winsz 975,31665
	uint16_t cols;976,31692
	uint16_t rows;977,31708
} pty_winsz_t;978,31724
typedef struct will_run_response_msg 980,31740
	uint32_t job_id;981,31779
	char *node_list;node_list982,31822
	List preemptee_job_id;983,31873
	uint32_t proc_cnt;984,31936
	time_t start_time;985,31993
} will_run_response_msg_t;986,32044
typedef struct forward_data_msg 988,32072
	char *address;address989,32106
	uint32_t len;990,32122
	char *data;data991,32137
} forward_data_msg_t;992,32150
typedef struct suspend_int_msg 995,32242
	uint16_t op;996,32275
	uint16_t job_core_spec;997,32347
	uint32_t job_id;998,32405
	uint8_t  indf_susp;999,32449
	void *   switch_info;1000,32521
} suspend_int_msg_t;1001,32580
typedef struct ping_slurmd_resp_msg 1003,32602
	uint32_t cpu_load;1004,32640
} ping_slurmd_resp_msg_t;1005,32681
typedef struct license_info_request_msg 1007,32708
	time_t last_update;1008,32750
	uint16_t show_flags;1009,32771
} license_info_request_msg_t;1010,32793
typedef struct slurm_node_registration_status_msg 1015,33011
	char *arch;arch1016,33063
	uint16_t cores;1017,33076
	uint16_t cpus;1018,33093
	uint32_t cpu_load;1019,33109
	acct_gather_energy_t *energy;energy1020,33150
	Buf gres_info;1021,33181
	uint32_t hash_val;1022,33226
	uint32_t job_count;1024,33311
	uint32_t *job_id;job_id1025,33367
	char *node_name;node_name1026,33420
	uint16_t boards;1027,33438
	char *os;os1028,33456
	uint32_t real_memory;1029,33467
	time_t slurmd_start_time;1030,33490
	uint32_t status;1031,33517
	uint16_t startup;1032,33580
	uint32_t *step_id;step_id1033,33627
	uint16_t sockets;1034,33687
	switch_node_info_t *switch_nodeinfo;switch_nodeinfo1035,33706
	uint16_t threads;1036,33775
	time_t timestamp;1037,33794
	uint32_t tmp_disk;1038,33813
	uint32_t up_time;1039,33833
	char *version;version1040,33879
} slurm_node_registration_status_msg_t;1041,33895
typedef struct requeue_msg 1043,33936
	uint32_t job_id;1044,33965
	uint32_t state;1045,34008
} requeue_msg_t;1046,34060
	List update_list;1053,34281
	uint16_t rpc_version;1054,34342
} accounting_update_msg_t;1055,34365
	uint32_t job_id;1058,34410
} spank_env_request_msg_t;1059,34455
	uint32_t spank_job_env_size;1062,34500
	char **spank_job_env;spank_job_env1063,34530
} spank_env_responce_msg_t;1064,34577
typedef struct slurm_ctl_conf slurm_ctl_conf_info_msg_t;1066,34606
#define	slurm_free_timelimit_msg(1124,37611
#define safe_read(1298,46153
#define safe_write(1327,47075

src/common/slurm_protocol_interface.h,161
#define _SLURM_PROTOCOL_INTERFACE_H40,2212
typedef enum slurm_socket_type 84,3007
	SLURM_MESSAGE 85,3040
	SLURM_STREAM86,3057
} slurm_socket_type_t;87,3071

src/common/slurm_protocol_pack.c,9704
#define _pack_job_info_msg(73,3250
#define _pack_job_step_info_msg(74,3313
#define _pack_block_info_resp_msg(75,3380
#define _pack_front_end_info_msg(76,3449
#define _pack_node_info_msg(77,3517
#define _pack_partition_info_msg(78,3581
#define _pack_stats_response_msg(79,3649
#define _pack_reserve_info_msg(80,3717
pack_header(687,28651
unpack_header(714,29538
pack_msg(761,30837
unpack_msg(1337,47679
static void _pack_assoc_shares_object(1964,66339
static int _unpack_assoc_shares_object(2015,67459
static void _pack_shares_request_msg(2057,68728
static int _unpack_shares_request_msg(2092,69521
static void _pack_shares_response_msg(2133,70521
static int _unpack_shares_response_msg(2156,71139
static void _pack_priority_factors_object(2192,72018
static int _unpack_priority_factors_object(2224,72727
_pack_priority_factors_request_msg(2251,73472
_unpack_priority_factors_request_msg(2287,74254
_pack_priority_factors_response_msg(2329,75328
static void _priority_factors_resp_list_del(2350,75932
_unpack_priority_factors_response_msg(2356,76012
_pack_update_front_end_msg(2392,76901
_unpack_update_front_end_msg(2408,77346
_pack_update_node_msg(2439,78198
_unpack_update_node_msg(2460,78805
_pack_acct_gather_node_resp_msg(2498,79963
_unpack_acct_gather_node_resp_msg(2507,80210
_pack_acct_gather_energy_req(2532,80893
_unpack_acct_gather_energy_req(2540,81072
_pack_node_registration_status_msg(2562,81511
_unpack_node_registration_status_msg(2652,84256
_pack_resource_allocation_response_msg(2792,89298
_unpack_resource_allocation_response_msg(2840,90772
_pack_job_alloc_info_response_msg(2926,93501
_unpack_job_alloc_info_response_msg(2958,94406
_pack_job_sbcast_cred_msg(3017,96104
_unpack_job_sbcast_cred_msg(3033,96503
_pack_submit_response_msg(3072,97473
_unpack_submit_response_msg(3083,97737
_unpack_node_info_msg(3106,98300
_unpack_node_info_members(3144,99296
_pack_update_partition_msg(3276,104209
_unpack_update_partition_msg(3355,106863
_pack_update_resv_msg(3458,110840
_unpack_update_resv_msg(3566,114108
_pack_delete_partition_msg(3701,118634
_unpack_delete_partition_msg(3715,118973
_pack_resv_name_msg(3743,119636
_unpack_resv_name_msg(3757,119966
pack_job_step_create_request_msg(3785,120628
unpack_job_step_create_request_msg(3828,121835
_pack_kill_job_msg(3888,123923
_unpack_kill_job_msg(3911,124607
_pack_signal_job_msg(3949,125740
_unpack_signal_job_msg(3965,126177
_pack_epilog_comp_msg(3994,126885
_unpack_epilog_comp_msg(4017,127550
_pack_update_job_time_msg(4057,128675
_unpack_update_job_time_msg(4072,129062
pack_job_step_create_response_msg(4099,129726
unpack_job_step_create_response_msg(4121,130425
_unpack_partition_info_msg(4169,131846
_unpack_partition_info_members(4209,132869
_unpack_reserve_info_msg(4341,137924
_unpack_reserve_info_members(4379,138918
_unpack_job_step_info_members(4449,141531
_unpack_job_step_info_response_msg(4573,146259
_pack_buffer_msg(4608,147188
_unpack_job_info_msg(4615,147326
_unpack_job_info_members(4657,148475
_pack_slurm_ctl_conf_msg(5040,163151
_unpack_slurm_ctl_conf_msg(5729,188890
_pack_job_desc_msg(6703,227031
_unpack_job_desc_msg(7168,244017
_pack_job_alloc_info_msg(7608,261906
_unpack_job_alloc_info_msg(7616,262104
_pack_last_update_msg(7638,262658
_unpack_last_update_msg(7646,262829
_pack_return_code_msg(7665,263257
_unpack_return_code_msg(7673,263425
_pack_return_code2_msg(7692,263850
_unpack_return_code2_msg(7702,264127
_pack_reattach_tasks_request_msg(7728,264719
_unpack_reattach_tasks_request_msg(7748,265292
_pack_reattach_tasks_response_msg(7786,266303
_unpack_reattach_tasks_response_msg(7804,266792
_pack_task_exit_msg(7838,267735
_unpack_task_exit_msg(7851,268056
_pack_launch_tasks_response_msg(7878,268692
_unpack_launch_tasks_response_msg(7890,269085
_pack_launch_tasks_request_msg(7920,269896
_unpack_launch_tasks_request_msg(8162,278167
_pack_task_user_managed_io_stream_msg(8488,290507
_unpack_task_user_managed_io_stream_msg(8497,290708
_pack_cancel_tasks_msg(8518,291151
_unpack_cancel_tasks_msg(8532,291558
_pack_checkpoint_tasks_msg(8558,292180
_unpack_checkpoint_tasks_msg(8573,292609
_pack_reboot_msg(8601,293359
_unpack_reboot_msg(8611,293543
_pack_shutdown_msg(8630,293916
_unpack_shutdown_msg(8637,294058
_pack_job_step_kill_msg(8661,294618
_unpack_job_step_kill_msg(8677,295125
_pack_update_job_step_msg(8698,295604
_unpack_update_job_step_msg(8725,296333
_pack_complete_job_allocation_msg(8763,297428
_unpack_complete_job_allocation_msg(8772,297637
_pack_complete_prolog_msg(8792,298084
_unpack_complete_prolog_msg(8801,298280
_pack_prolog_launch_msg(8821,298690
_unpack_prolog_launch_msg(8841,299173
_pack_complete_batch_script_msg(8876,300267
_unpack_complete_batch_script_msg(8895,300817
_pack_job_step_stat(8929,301770
_unpack_job_step_stat(8941,302111
_pack_job_step_id_msg(8967,302731
_unpack_job_step_id_msg(8976,302923
_pack_job_step_pids(8996,303312
_unpack_job_step_pids(9009,303563
_pack_step_complete_msg(9030,304010
_unpack_step_complete_msg(9043,304418
_pack_job_info_request_msg(9070,305090
_unpack_job_info_request_msg(9078,305290
_pack_block_info_req_msg(9098,305748
_unpack_block_info_req_msg(9111,306107
static int _unpack_block_job_info(9136,306776
static void _pack_block_info_msg(9170,307740
extern void slurm_pack_block_job_info(9259,309959
extern int slurm_unpack_block_info_members(9283,310557
extern int slurm_unpack_block_info_msg(9365,313139
static int _unpack_block_info(9398,314035
_pack_job_step_info_req_msg(9414,314405
_unpack_job_step_info_req_msg(9424,314693
_pack_node_info_request_msg(9445,315289
_unpack_node_info_request_msg(9453,315482
_pack_node_info_single_msg(9472,315941
_unpack_node_info_single_msg(9480,316127
_pack_front_end_info_request_msg(9500,316619
_unpack_front_end_info_request_msg(9507,316786
_unpack_front_end_info_msg(9525,317244
_unpack_front_end_info_members(9563,318279
_pack_part_info_request_msg(9630,320804
_unpack_part_info_request_msg(9638,321007
_pack_resv_info_request_msg(9657,321466
_unpack_resv_info_request_msg(9664,321625
_pack_slurm_addr_array(9682,322036
_unpack_slurm_addr_array(9690,322244
_pack_ret_list(9699,322458
_unpack_ret_list(9723,323079
_pack_batch_job_launch_msg(9764,324116
_unpack_batch_job_launch_msg(9939,329103
_pack_job_id_request_msg(10202,338480
_unpack_job_id_request_msg(10211,338657
_pack_job_id_response_msg(10232,339118
_unpack_job_id_response_msg(10242,339342
_pack_srun_exec_msg(10264,339855
_unpack_srun_exec_msg(10275,340102
_pack_srun_ping_msg(10296,340583
_unpack_srun_ping_msg(10306,340804
_pack_srun_node_fail_msg(10326,341230
_unpack_srun_node_fail_msg(10337,341472
_pack_srun_step_missing_msg(10360,342009
_unpack_srun_step_missing_msg(10371,342260
_pack_job_ready_msg(10394,342815
_unpack_job_ready_msg(10404,343011
_pack_job_requeue_msg(10424,343425
_unpack_job_requeue_msg(10442,343811
_pack_job_user_msg(10469,344447
_unpack_job_user_msg(10479,344647
_pack_srun_timeout_msg(10499,345080
_unpack_srun_timeout_msg(10510,345345
_pack_srun_user_msg(10531,345824
_unpack_srun_user_msg(10541,346024
static void _pack_suspend_msg(10561,346498
static int  _unpack_suspend_msg(10570,346687
static void _pack_suspend_int_msg(10589,347092
static int  _unpack_suspend_int_msg(10609,347698
static void _pack_forward_data_msg(10642,348639
static int _unpack_forward_data_msg(10651,348872
static void _pack_ping_slurmd_resp(10672,349383
static int _unpack_ping_slurmd_resp(10680,349555
_pack_checkpoint_msg(10699,349966
_unpack_checkpoint_msg(10712,350275
_pack_checkpoint_comp(10736,350865
_unpack_checkpoint_comp(10749,351226
_pack_checkpoint_task_comp(10773,351873
_unpack_checkpoint_task_comp(10787,352287
_pack_checkpoint_resp_msg(10812,353009
_unpack_checkpoint_resp_msg(10823,353282
static void _pack_file_bcast(10844,353835
static int _unpack_file_bcast(10887,354991
static void _pack_trigger_msg(10951,356850
static int  _unpack_trigger_msg(10974,357636
static void _pack_kvs_host_rec(11011,358873
static int _unpack_kvs_host_rec(11019,359089
static void _pack_kvs_rec(11033,359427
static int  _unpack_kvs_rec(11051,359925
static void _pack_kvs_data(11081,360805
static int  _unpack_kvs_data(11098,361265
static void _pack_kvs_get(11145,362550
static int  _unpack_kvs_get(11154,362815
pack_multi_core_data 11175,363316
unpack_multi_core_data 11203,364180
static void _pack_slurmd_status(11241,365307
static int _unpack_slurmd_status(11271,366149
static void _pack_job_notify(11319,367464
static int  _unpack_job_notify(11329,367689
_pack_set_debug_flags_msg(11353,368199
_unpack_set_debug_flags_msg(11361,368396
_pack_set_debug_level_msg(11380,368829
_unpack_set_debug_level_msg(11387,368979
_pack_will_run_response_msg(11405,369357
static void _pre_list_del(11426,369945
_unpack_will_run_response_msg(11432,370007
static void _pack_accounting_update_msg(11464,370894
static int _unpack_accounting_update_msg(11512,372135
static void _pack_topo_info_msg(11566,373683
static int _unpack_topo_info_msg(11581,374132
static void _pack_spank_env_request_msg(11613,375067
static int _unpack_spank_env_request_msg(11621,375241
static void _pack_spank_env_responce_msg(11639,375649
static int _unpack_spank_env_responce_msg(11647,375865
static void _pack_stats_request_msg(11666,376327
static int  _unpack_stats_request_msg(11679,376677
static int  _unpack_stats_response_msg(11703,377340
_pack_license_info_request_msg(11766,379533
_unpack_license_info_request_msg(11777,379838
_pack_license_info_msg(11797,380324
_unpack_license_info_msg(11810,380594

src/common/slurm_protocol_pack.h,39
#define _SLURM_PROTOCOL_PACK_H41,2263

src/common/slurm_protocol_socket_common.h,313
#define _SLURM_PROTOCOL_SOCKET_COMMON_H41,2239
#define AF_SLURM 58,2575
#define SLURM_INADDR_ANY 59,2600
typedef int32_t slurm_fd_t 64,2767
#  define  __slurm_addr_t_defined69,2934
   typedef struct sockaddr_in slurm_addr_t 70,2968
typedef fd_set slurm_fd_set 74,3082
typedef fd_set _slurm_fd_set 75,3112

src/common/slurm_protocol_socket_implementation.c,2067
#define _USE_IRS 45,2324
#define PORT_RETRIES 81,3133
#define MIN_USER_PORT 82,3159
#define MAX_USER_PORT 83,3205
#define RANDOM_USER_PORT 84,3236
#define MAX_MSG_SIZE 91,3449
static int _tot_wait 100,3705
slurm_fd_t _slurm_init_msg_engine 111,3993
slurm_fd_t _slurm_open_msg_conn 116,4114
slurm_fd_t _slurm_accept_msg_conn 121,4238
static void _sock_bind_wild(132,4578
int _slurm_close_accepted_conn 160,5163
ssize_t _slurm_msg_recvfrom(165,5242
ssize_t _slurm_msg_recvfrom_timeout(172,5438
ssize_t _slurm_msg_sendto(205,6094
ssize_t _slurm_msg_sendto_timeout(212,6287
int _slurm_send_timeout(243,6978
int _slurm_recv_timeout(350,9677
int _slurm_shutdown_msg_engine 448,12005
slurm_fd_t _slurm_listen_stream(453,12099
slurm_fd_t _slurm_accept_stream(492,12957
slurm_fd_t _slurm_open_stream(498,13126
int _slurm_get_stream_addr(552,14481
int _slurm_close_stream 558,14645
int _slurm_set_stream_non_blocking(564,14733
int _slurm_set_stream_blocking(570,14836
extern int _slurm_socket 576,14932
extern slurm_fd_t _slurm_create_socket 581,15055
extern int _slurm_socketpair 602,15680
extern int _slurm_bind 609,15906
extern int _slurm_getsockname 616,16109
extern int _slurm_connect 626,16521
extern int _slurm_getpeername 705,18675
extern ssize_t _slurm_send 712,18907
extern ssize_t _slurm_recv 720,19141
extern ssize_t _slurm_sendto 727,19413
extern ssize_t _slurm_recvfrom 737,19891
extern ssize_t _slurm_sendmsg 747,20236
extern ssize_t _slurm_recvmsg 755,20478
extern int _slurm_getsockopt 763,20820
extern int _slurm_setsockopt 773,21180
extern int _slurm_listen 783,21544
extern int _slurm_accept 793,21931
extern int _slurm_shutdown 805,22352
extern int _slurm_close 810,22441
extern int _slurm_fcntl(815,22507
extern int _slurm_vfcntl(826,22678
void _slurm_set_addr_uint 846,23024
void _reset_slurm_addr 854,23293
void _slurm_set_addr_char 859,23416
void _slurm_get_addr 886,24023
void _slurm_print_slurm_addr 909,24602
void _slurm_pack_slurm_addr(917,24881
int _slurm_unpack_slurm_addr_no_alloc(923,25041

src/common/slurm_protocol_util.c,170
uint16_t _get_slurm_version(52,2537
int check_header_version(68,3021
void init_header(119,4645
void update_header(157,5955
void slurm_print_launch_task_msg(164,6122

src/common/slurm_protocol_util.h,39
#define _SLURM_PROTOCOL_UTIL_H40,2193

src/common/slurm_resource_info.c,370
#define DEBUG 58,2531
static void _clear_then_set(65,2702
static int _isvalue(75,2902
static bool _have_task_affinity(90,3224
void slurm_sprint_cpu_bind_type(108,3567
void slurm_sprint_mem_bind_type(159,4866
void slurm_print_cpu_bind_help(187,5493
int slurm_verify_cpu_bind(234,7409
void slurm_print_mem_bind_help(453,14402
int slurm_verify_mem_bind(482,15485

src/common/slurm_resource_info.h,28
#define _RES_INFO_H40,2192

src/common/slurm_rlimits_info.c,285
static slurm_rlimits_info_t rlimits_info[rlimits_info56,2491
static bool rlimits_were_parsed 94,3363
get_slurm_rlimits_info(100,3490
#define RLIMIT_ 108,3591
#define LEN_RLIMIT_ 109,3625
#define RLIMIT_DELIMS 110,3673
parse_rlimits(119,3887
extern void print_rlimits(190,5691

src/common/slurm_rlimits_info.h,307
#define __SLURM_RLIMITS_INFO_H__40,2115
#define PROPAGATE_RLIMITS 46,2199
#define NO_PROPAGATE_RLIMITS 47,2273
struct slurm_rlimits_info 49,2305
        int  resource;50,2333
        char *name;name51,2414
	int  propagate_flag;52,2495
typedef struct slurm_rlimits_info slurm_rlimits_info_t;55,2573

src/common/slurm_selecttype_info.c,110
int parse_select_type_param(50,2405
extern char *select_type_param_string(select_type_param_string120,4473

src/common/slurm_selecttype_info.h,44
#define __SLURM_SELECTTYPE_INFO_H__41,2140

src/common/slurm_step_layout.c,796
slurm_step_layout_t *slurm_step_layout_create(slurm_step_layout_create94,3744
slurm_step_layout_t *fake_slurm_step_layout_create(fake_slurm_step_layout_create165,6217
extern slurm_step_layout_t *slurm_step_layout_copy(slurm_step_layout_copy234,8067
extern void pack_slurm_step_layout(262,8915
extern int unpack_slurm_step_layout(291,9638
extern int slurm_step_layout_destroy(339,11024
int slurm_step_layout_host_id 357,11387
char *slurm_step_layout_host_name slurm_step_layout_host_name370,11683
static int _init_task_layout(381,11937
static int _task_layout_hostfile(464,14628
static int _task_layout_block(545,17078
static int _task_layout_cyclic(592,18485
static int _task_layout_plane(638,19770
extern char *slurm_step_layout_type_name(slurm_step_layout_type_name716,21930

src/common/slurm_step_layout.h,37
#define _SLURM_STEP_LAYOUT_H34,1635

src/common/slurm_strcasestr.c,26
slurm_strcasestr(45,2266

src/common/slurm_strcasestr.h,36
#define _SLURM_STRCASESTR_H40,2175

src/common/slurm_topology.c,670
struct switch_record *switch_record_table switch_record_table51,2460
int switch_record_cnt 52,2510
typedef struct slurm_topo_ops 57,2775
	int		(*build_config)build_config58,2807
	bool		(*node_ranking)node_ranking59,2840
	int		(*get_node_addr)get_node_addr60,2874
} slurm_topo_ops_t;63,2963
static const char *syms[syms68,3044
static slurm_topo_ops_t ops;74,3154
static plugin_context_t	*g_context g_context75,3183
static pthread_mutex_t g_context_lock 76,3226
static bool init_run 77,3293
slurm_topo_init(88,3959
slurm_topo_fini(124,4772
slurm_topo_build_config(142,5190
slurm_topo_generate_node_ranking(163,5810
slurm_topo_get_node_addr(175,6187

src/common/slurm_topology.h,326
#define __SLURM_CONTROLLER_TOPO_PLUGIN_API_H__40,2189
struct switch_record 49,2547
	uint32_t consumed_energy;50,2570
	int level;51,2630
	uint32_t link_speed;52,2677
	char *name;name53,2734
	bitstr_t *node_bitmap;node_bitmap54,2767
	char *nodes;nodes56,2853
	char *switches;switches57,2907
	uint32_t temp;58,2967

src/common/slurm_xlator.h,8536
#define __SLURM_XLATOR_H__67,3528
#define	arg_count	76,3648
#define	arg_idx_by_name	77,3683
#define	arg_name_by_inx	78,3730
#define	bit_alloc	81,3808
#define	bit_test	82,3843
#define	bit_set	83,3876
#define	bit_clear	84,3908
#define	bit_nclear	85,3943
#define	bit_nset	86,3980
#define	bit_ffc	87,4013
#define	bit_ffs	88,4045
#define	bit_free	89,4077
#define	bit_realloc	90,4110
#define	bit_size	91,4149
#define	bit_and	92,4182
#define	bit_not	93,4214
#define	bit_or	94,4246
#define	bit_set_count	95,4276
#define	bit_set_count_range	96,4319
#define	bit_clear_count	97,4373
#define	bit_nset_max_count	98,4420
#define	bit_and_set_count	99,4472
#define	bit_rotate_copy	100,4522
#define	bit_rotate	101,4569
#define	bit_fmt	102,4606
#define bit_unfmt	103,4638
#define	bitfmt2int	104,4673
#define	bit_fmt_hexmask	105,4710
#define bit_unfmt_hexmask	106,4757
#define	bit_fmt_binmask	107,4807
#define bit_unfmt_binmask	108,4854
#define	bit_fls	109,4904
#define	bit_fill_gaps	110,4936
#define	bit_super_set	111,4979
#define	bit_copy	112,5022
#define	bit_pick_cnt	113,5055
#define bit_nffc	114,5096
#define bit_noc	115,5129
#define bit_nffs	116,5161
#define bit_copybits	117,5194
#define fd_read_n	120,5260
#define fd_write_n	121,5295
#define fd_set_blocking	122,5332
#define fd_set_nonblocking	123,5379
#define	hostlist_create	126,5462
#define	hostlist_copy	127,5509
#define	hostlist_count	128,5552
#define	hostlist_delete	129,5597
#define	hostlist_delete_host	130,5644
#define	hostlist_delete_nth	131,5700
#define	hostlist_deranged_string 132,5754
#define	hostlist_deranged_string_malloc 133,5818
#define	hostlist_deranged_string_xmalloc 135,5902
#define	hostlist_destroy	137,5988
#define	hostlist_find	138,6036
#define	hostlist_iterator_create 139,6079
#define	hostlist_iterator_destroy 140,6144
#define	hostlist_iterator_reset	141,6210
#define	hostlist_next	142,6272
#define	hostlist_next_range	143,6315
#define	hostlist_nth	144,6369
#define	hostlist_pop 145,6410
#define	hostlist_pop_range 146,6461
#define	hostlist_push	147,6518
#define	hostlist_push_host	148,6561
#define	hostlist_push_list	149,6613
#define	hostlist_ranged_string	150,6665
#define	hostlist_ranged_string_malloc 151,6725
#define	hostlist_ranged_string_xmalloc 153,6805
#define	hostlist_remove	155,6887
#define	hostlist_shift	156,6934
#define	hostlist_shift_range	157,6979
#define	hostlist_sort	158,7035
#define	hostlist_uniq	159,7078
#define	hostset_copy	160,7121
#define	hostset_count	161,7162
#define	hostset_create	162,7205
#define	hostset_delete	163,7250
#define	hostset_destroy	164,7295
#define	hostset_insert	165,7342
#define	hostset_shift	166,7387
#define	hostset_shift_range	167,7430
#define	hostset_within	168,7484
#define	list_create	171,7556
#define	list_destroy	172,7595
#define	list_is_empty	173,7636
#define	list_count	174,7679
#define	list_append	175,7716
#define	list_prepend	176,7755
#define	list_find_first	177,7796
#define	list_delete_all	178,7843
#define	list_for_each	179,7890
#define	list_sort	180,7933
#define	list_push	181,7968
#define	list_pop	182,8003
#define	list_peek	183,8036
#define	list_enqueue	184,8071
#define	list_dequeue	185,8112
#define	list_iterator_create	186,8153
#define	list_iterator_reset	187,8209
#define	list_iterator_destroy	188,8263
#define	list_next	189,8321
#define	list_insert	190,8356
#define	list_find	191,8395
#define	list_remove	192,8430
#define	list_delete_item	193,8469
#define	list_install_fork_handlers 194,8517
#define	log_init	197,8611
#define	log_reinit	198,8644
#define	log_fini	199,8681
#define	log_alter	200,8714
#define	log_alter_with_fp	201,8749
#define	log_set_fpfx	202,8799
#define	log_fp	203,8840
#define	log_has_data	204,8870
#define	log_flush	205,8911
#define	dump_cleanup_list	206,8946
#define	fatal_add_cleanup	207,8996
#define	fatal_add_cleanup_job	208,9046
#define	fatal_remove_cleanup	209,9104
#define	fatal_remove_cleanup_job 210,9160
#define	fatal_cleanup	211,9224
#define	fatal	212,9267
#define	error	213,9295
#define	info	214,9323
#define	verbose	215,9349
#define	debug	216,9381
#define	debug2	217,9409
#define	debug3	218,9439
#define	debug4	219,9469
#define	debug5	220,9499
#define net_stream_listen	227,9654
#define net_accept_stream	228,9704
#define net_set_low_water	229,9754
#define	create_buf	232,9831
#define	free_buf	233,9868
#define grow_buf	234,9901
#define	init_buf	235,9934
#define	xfer_buf_data	236,9967
#define	pack_time	237,10010
#define	unpack_time	238,10045
#define	packdouble	239,10084
#define	unpackdouble	240,10121
#define	pack64	241,10162
#define	unpack64	242,10192
#define	pack32	243,10225
#define	unpack32	244,10255
#define	pack16	245,10288
#define	unpack16	246,10318
#define	pack8	247,10351
#define	unpack8	248,10379
#define	pack32_array	249,10411
#define	unpack32_array	250,10452
#define	packmem	251,10497
#define	unpackmem	252,10529
#define	unpackmem_ptr	253,10564
#define	unpackmem_xmalloc	254,10607
#define	unpackmem_malloc	255,10657
#define	packstr_array	256,10705
#define	unpackstr_array	257,10748
#define	packmem_array	258,10795
#define	unpackmem_array	259,10838
#define	setenvf 262,10911
#define	unsetenvp	263,10944
#define	getenvp	264,10979
#define env_array_create	265,11011
#define env_array_merge	266,11059
#define env_array_copy	267,11106
#define env_array_free	268,11151
#define env_array_append	269,11196
#define env_array_append_fmt	270,11244
#define env_array_overwrite	271,11300
#define env_array_overwrite_fmt 272,11354
#define destroy_config_key_pair	275,11450
#define get_extra_conf_path	276,11512
#define sort_key_pairs	277,11566
#define run_in_daemon 278,11611
#define	strlcpy	285,11799
#define	__xassert_failed	292,11963
#define	xsignal	295,12039
#define	xsignal_save_mask	296,12071
#define	xsignal_set_mask	297,12121
#define	xsignal_block	298,12169
#define	xsignal_unblock	299,12212
#define	xsignal_sigset_create	300,12259
#define	_xstrcat	303,12347
#define	_xstrncat	304,12379
#define	_xstrcatchar	305,12413
#define	_xslurm_strerrorcat	306,12453
#define	_xstrftimecat	307,12506
#define	_xiso8601timecat	308,12548
#define	_xrfc5424timecat	309,12595
#define	_xstrfmtcat	310,12642
#define	_xmemcat	311,12680
#define	xstrdup	312,12712
#define	xstrdup_printf	313,12744
#define	xbasename	314,12789
#define	_xstrsubstitute	315,12824
#define	xstrstrip	316,12870
#define	xshort_hostname	317,12905
#define xstring_is_whitespace 318,12952
#define	xstrtolower	319,13012
#define xstrchr	320,13051
#define xstrcmp	321,13083
#define xstrcasecmp	322,13115
#define preempt_mode_string	326,13197
#define preempt_mode_num	327,13251
#define job_reason_string	328,13299
#define job_state_string	329,13349
#define job_state_string_compact 330,13397
#define job_state_num	331,13461
#define node_state_string	332,13504
#define node_state_string_compact 333,13554
#define private_data_string	334,13620
#define accounting_enforce_string 335,13674
#define conn_type_string	336,13740
#define node_use_string	337,13788
#define bg_block_state_string	338,13835
#define reservation_flags_string 339,13893
#define slurmdbd_free_list_msg	342,13993
#define slurmdbd_free_rc_msg 343,14055
#define slurmdbd_free_usage_msg 344,14116
#define slurmdbd_free_id_rc_msg 345,14180
#define plugin_get_syms 348,14273
#define plugin_load_and_link 349,14327
#define plugin_strerror 350,14386
#define plugin_unload 351,14440
#define plugrack_create 354,14523
#define plugrack_destroy 355,14577
#define plugrack_read_dir 356,14632
#define plugrack_set_major_type 357,14688
#define plugrack_set_paranoia 358,14750
#define plugrack_use_by_type 359,14810
#define jobacctinfo_pack	361,14870
#define jobacctinfo_unpack	362,14918
#define jobacctinfo_create 363,14970
#define jobacctinfo_destroy 364,15027
#define destroy_select_ba_request	367,15119
#define s_p_hashtbl_create	370,15220
#define s_p_hashtbl_destroy	371,15272
#define s_p_parse_file	372,15326
#define s_p_parse_pair	373,15371
#define s_p_parse_line	374,15416
#define s_p_hashtbl_merge 375,15461
#define s_p_get_string	376,15512
#define s_p_get_long	377,15557
#define s_p_get_uint16	378,15598
#define s_p_get_uint32	379,15643
#define s_p_get_pointer	380,15688
#define s_p_get_array	381,15735
#define s_p_get_boolean	382,15778
#define s_p_dump_values	383,15825
#define transfer_s_p_options	384,15872
#define pack_slurm_step_layout 387,15968
#define unpack_slurm_step_layout 388,16037

src/common/stepd_api.c,887
#  define _GNU_SOURCE43,2309
_slurm_authorized_user(74,3053
_handle_stray_socket(95,3578
static void _handle_stray_script(132,4411
_step_connect(144,4799
_guess_nodename(182,5623
stepd_connect(211,6441
stepd_state(286,8110
stepd_get_info(303,8448
stepd_notify_job(336,9336
stepd_checkpoint(362,9795
stepd_signal_task_local(389,10323
stepd_signal_container(410,10717
stepd_attach(437,11244
_free_step_loc_t(481,12327
_sockname_regex_init(492,12505
_sockname_regex(511,12851
stepd_available(548,13925
stepd_cleanup_sockets(616,15489
stepd_pid_in_container(684,17041
stepd_daemon_pid(705,17412
_step_suspend_write(719,17604
_step_suspend_read(730,17742
stepd_suspend(754,18259
stepd_resume(790,19036
stepd_reconfig(816,19519
stepd_terminate(841,19941
stepd_completion(865,20335
stepd_stat_jobacct(915,21777
stepd_task_info(956,22839
stepd_list_pids(999,23856

src/common/stepd_api.h,1475
#define _STEPD_API_H42,2254
	REQUEST_CONNECT 52,2444
	REQUEST_SIGNAL_PROCESS_GROUP,53,2466
	REQUEST_SIGNAL_TASK_LOCAL,54,2541
	REQUEST_SIGNAL_TASK_GLOBAL,55,2569
	REQUEST_SIGNAL_CONTAINER,56,2598
	REQUEST_STATE,57,2625
	REQUEST_INFO,58,2641
	REQUEST_ATTACH,59,2656
	REQUEST_PID_IN_CONTAINER,60,2673
	REQUEST_DAEMON_PID,61,2700
	REQUEST_STEP_SUSPEND,62,2721
	REQUEST_STEP_RESUME,63,2744
	REQUEST_STEP_TERMINATE,64,2766
	REQUEST_STEP_COMPLETION,65,2791
	REQUEST_STEP_TASK_INFO,66,2864
	REQUEST_STEP_LIST_PIDS,67,2889
	REQUEST_STEP_RECONFIGURE,68,2914
	REQUEST_STEP_STAT,69,2941
	REQUEST_STEP_COMPLETION_V2,70,2961
} step_msg_t;71,2990
	SLURMSTEPD_NOT_RUNNING 74,3020
	SLURMSTEPD_STEP_STARTING,75,3049
	SLURMSTEPD_STEP_RUNNING,76,3076
	SLURMSTEPD_STEP_ENDING77,3102
} slurmstepd_state_t;78,3126
	uid_t uid;81,3166
	uint32_t jobid;82,3178
	uint32_t stepid;83,3195
	uint32_t nodeid;84,3213
	uint16_t protocol_version;85,3231
	uint32_t job_mem_limit;86,3259
	uint32_t step_mem_limit;87,3314
} slurmstepd_info_t;88,3370
	int             id;91,3409
	uint32_t        gtid;92,3454
	pid_t           pid;93,3502
	bool            exited;94,3543
	int             estatus;95,3602
} slurmstepd_task_info_t;96,3666
typedef struct step_location 98,3693
	uint32_t jobid;99,3724
	uint32_t stepid;100,3741
	char *nodename;nodename101,3759
	char *directory;directory102,3776
	slurmstepd_info_t *stepd_info;stepd_info103,3794
} step_loc_t;104,3826

src/common/strlcpy.c,51
static char *rcsid rcsid35,1657
strlcpy(56,2224

src/common/strlcpy.h,24
#define _STRLCPY_H2,19

src/common/strnatcmp.c,192
nat_isdigit(44,1573
nat_isspace(51,1657
nat_toupper(58,1746
compare_right(66,1824
compare_left(96,2463
static int strnatcmp0(117,2856
int strnatcmp(170,3800
int strnatcasecmp(176,3948

src/common/strnatcmp.h,31
typedef char nat_char;28,1153

src/common/switch.c,4563
typedef struct slurm_switch_ops 59,2793
	int          (*state_save)state_save60,2827
	int          (*state_restore)state_restore61,2882
	int          (*alloc_jobinfo)alloc_jobinfo63,2952
	int          (*build_jobinfo)build_jobinfo65,3063
	void         (*free_jobinfo)free_jobinfo68,3195
	int          (*pack_jobinfo)pack_jobinfo69,3261
	int          (*unpack_jobinfo)unpack_jobinfo72,3384
	int          (*get_jobinfo)get_jobinfo75,3507
	void         (*print_jobinfo)print_jobinfo77,3605
	char *       (*string_jobinfo)string_jobinfo79,3690
	int          (*node_init)node_init81,3788
	int          (*node_fini)node_fini82,3833
	int          (*job_preinit)job_preinit83,3878
	int          (*job_init)job_init84,3944
	int          (*job_suspend_test)job_suspend_test85,4006
	void         (*job_suspend_info_get)job_suspend_info_get86,4072
	void         (*job_suspend_info_pack)job_suspend_info_pack88,4171
	int          (*job_suspend_info_unpack)job_suspend_info_unpack91,4296
	void         (*job_suspend_info_free)job_suspend_info_free94,4414
	int          (*job_suspend)job_suspend95,4476
	int          (*job_resume)job_resume97,4558
	int          (*job_fini)job_fini99,4640
	int          (*job_postfini)job_postfini100,4706
	int          (*job_attach)job_attach101,4767
	char *	     (*switch_strerror)switch_strerror105,4955
	int          (*switch_errno)switch_errno106,5005
	int          (*clear_node)clear_node107,5050
	int          (*alloc_nodeinfo)alloc_nodeinfo108,5095
	int          (*build_nodeinfo)build_nodeinfo109,5165
	int          (*pack_nodeinfo)pack_nodeinfo110,5234
	int          (*unpack_nodeinfo)unpack_nodeinfo113,5360
	int          (*free_nodeinfo)free_nodeinfo116,5486
	char *       (*sprintf_nodeinfo)sprintf_nodeinfo117,5556
	int          (*step_complete)step_complete119,5658
	int          (*step_part_comp)step_part_comp121,5749
	bool         (*part_comp)part_comp123,5840
	int          (*step_allocated)step_allocated124,5885
	int          (*state_clear)state_clear126,5976
	int          (*slurmctld_init)slurmctld_init127,6021
	int          (*slurmd_init)slurmd_init128,6066
	int          (*slurmd_step_init)slurmd_step_init129,6111
	int          (*reconfig)reconfig130,6156
} slurm_switch_ops_t;131,6201
static const char *syms[syms137,6329
static slurm_switch_ops_t ops;182,7519
static plugin_context_t *g_context g_context183,7550
static pthread_mutex_t      context_lock 184,7593
static bool init_run 185,7663
extern int switch_init(187,7694
extern int switch_fini(218,8270
extern int  switch_g_reconfig(230,8428
extern int  switch_g_save(238,8548
extern int  switch_g_restore(246,8685
extern int  switch_g_clear(254,8851
extern int  switch_g_alloc_jobinfo(262,8971
extern int  switch_g_build_jobinfo(271,9190
extern void switch_g_free_jobinfo(281,9430
extern int switch_g_pack_jobinfo(289,9568
extern int switch_g_unpack_jobinfo(298,9794
extern int  switch_g_get_jobinfo(307,10026
extern void switch_g_print_jobinfo(316,10229
extern char *switch_g_sprint_jobinfo(switch_g_sprint_jobinfo324,10382
extern int switch_g_node_init(333,10580
extern int switch_g_node_fini(341,10701
extern int switch_g_job_preinit(349,10822
extern int switch_g_job_init(357,10975
extern int switch_g_job_suspend_test(365,11114
extern void switch_g_job_suspend_info_get(373,11277
extern void switch_g_job_suspend_info_pack(382,11472
extern int switch_g_job_suspend_info_unpack(391,11698
extern void switch_g_job_suspend_info_free(401,11955
extern int switch_g_job_suspend(409,12108
extern int switch_g_job_resume(417,12283
extern int switch_g_job_fini(425,12456
extern int switch_g_job_postfini(433,12603
extern int switch_g_job_attach(441,12750
extern int switch_g_get_errno(452,13066
extern char *switch_g_strerror(switch_g_strerror460,13190
extern int switch_g_clear_node_state(473,13412
extern int switch_g_alloc_node_info(481,13540
extern int switch_g_build_node_info(489,13712
extern int switch_g_pack_node_info(497,13883
extern int switch_g_unpack_node_info(506,14122
extern int switch_g_free_node_info(515,14367
extern char*switch_g_sprintf_node_info(switch_g_sprintf_node_info523,14537
extern int switch_g_job_step_complete(532,14752
extern int switch_g_job_step_part_comp(541,14950
extern bool switch_g_part_comp(550,15151
extern int switch_g_job_step_allocated(559,15268
extern int switch_g_slurmctld_init(568,15469
extern int switch_g_slurmd_init(576,15600
extern int switch_g_slurmd_step_init(584,15725

src/common/switch.h,311
#define _SWITCH_H 41,2244
#  define __switch_jobinfo_t_defined57,2566
   typedef struct switch_jobinfo   switch_jobinfo_t;58,2603
#  define __switch_node_info_t_defined61,2700
   typedef struct switch_node_info switch_node_info_t;62,2739
typedef struct slurm_switch_context slurm_switch_context_t;64,2801

src/common/timers.c,61
extern void slurm_diff_tv_str(53,2523
block_daemon(86,3500

src/common/timers.h,226
#define _HAVE_TIMERS_H40,2177
#define DEF_TIMERS	44,2224
#define START_TIMER	45,2304
#define END_TIMER	46,2349
#define END_TIMER2(48,2457
#define END_TIMER3(50,2572
#define DELTA_TIMER	52,2698
#define TIME_STR 53,2726

src/common/uid.c,257
static int _getpwnam_r 52,2437
extern int slurm_getpwuid_r 67,2721
uid_from_string 83,3010
uid_to_string 124,3801
gid_from_uid 143,4204
static int _getgrnam_r 159,4467
static int _getgrgid_r 174,4750
gid_from_string 190,5027
gid_to_string 232,5831

src/common/uid.h,69
#define __SLURM_UID_UTILITY_H__41,2192
#define PW_BUF_SIZE 53,2548

src/common/unsetenv.c,29
extern int unsetenv 45,2237

src/common/unsetenv.h,28
#define _UNSETENV_H40,2168

src/common/util-net.c,442
#  define INET_ADDRSTRLEN 61,2583
static pthread_mutex_t hostentLock 65,2644
struct hostent * get_host_by_name(75,2910
struct hostent * get_host_by_addr(102,3516
const char * host_strerror(129,4152
int host_name_to_addr4(143,4522
char * host_addr4_to_name(162,4900
char * host_name_to_cname(182,5315
static int copy_hostent(212,6151
static int validate_hostent_copy(289,8150
int inet_pton(322,8983
const char * inet_ntop(347,9465

src/common/util-net.h,58
#define _UTIL_NET_H40,2076
#define HOSTENT_SIZE 52,2234

src/common/working_cluster.c,503
extern uint16_t slurmdb_setup_cluster_dims(58,2878
extern int *slurmdb_setup_cluster_dim_size(slurmdb_setup_cluster_dim_size64,3017
extern bool is_cray_system(72,3170
extern bool is_alps_cray_system(82,3382
extern uint16_t slurmdb_setup_cluster_name_dims(92,3568
extern uint32_t slurmdb_setup_cluster_flags(100,3741
static uint32_t _str_2_cluster_flags(146,4693
extern uint32_t slurmdb_str_2_cluster_flags(186,5615
extern char *slurmdb_cluster_flags_2_str(slurmdb_cluster_flags_2_str203,5993

src/common/working_cluster.h,34
#define _WORKINGCLUSTER_H39,2181

src/common/write_labelled_message.c,139
int write_labelled_message(55,2545
static int _write_label(103,3439
static int _write_newline(131,3966
static int _write_line(154,4380

src/common/write_labelled_message.h,45
#define _HAVE_WRITE_LABELLED_MESSAGE40,2193

src/common/xassert.c,31
void __xassert_failed(58,2560

src/common/xassert.h,120
#define _XASSERT_H	43,2308
#  define xassert(53,2414
#  define xassert(57,2473
extern void __xassert_failed(66,2815

src/common/xcgroup.c,1180
#define PATH_MAX 69,2596
int xcgroup_ns_create(97,3603
int xcgroup_ns_destroy(137,4610
int xcgroup_ns_mount(156,4931
int xcgroup_ns_umount(256,7231
int xcgroup_ns_is_available(270,7517
int xcgroup_ns_find_by_pid(300,8042
int xcgroup_create(369,9747
int xcgroup_destroy(394,10331
int xcgroup_lock(404,10478
int xcgroup_unlock(428,10926
int xcgroup_instanciate(443,11183
int xcgroup_load(498,12377
int xcgroup_delete(532,13226
static int cgroup_procs_readable 540,13343
static int cgroup_procs_writable 553,13598
int xcgroup_add_pids(567,13913
int xcgroup_get_pids(587,14477
int xcgroup_set_params(608,14979
int xcgroup_set_param(658,16063
int xcgroup_get_param(681,16709
int xcgroup_set_uint32_param(700,17248
int xcgroup_get_uint32_param(723,17883
int xcgroup_set_uint64_param(753,18621
int xcgroup_get_uint64_param(776,19270
static int cgroup_move_process_by_task 806,20008
int xcgroup_move_process 831,20568
size_t _file_getsize(848,21128
int _file_write_uint64s(879,21590
int _file_read_uint64s(928,22519
int _file_write_uint32s(1000,23753
int _file_read_uint32s(1049,24665
int _file_write_content(1120,25847
int _file_read_content(1154,26487

src/common/xcgroup.h,583
#define _XCGROUP_H_42,2075
#define XCGROUP_ERROR 48,2173
#define XCGROUP_SUCCESS 49,2200
#define	MS_NOSUID	53,2314
#define	MS_NOEXEC	54,2343
#define	MS_NODEV	55,2372
#define	umount(57,2392
typedef struct xcgroup_ns 60,2432
	char* mnt_point;62,2461
	char* mnt_args;63,2531
	char* subsystems;65,2587
	char* notify_prog;67,2659
} xcgroup_ns_t;69,2727
typedef struct xcgroup 71,2744
	xcgroup_ns_t* ns;73,2770
	char*    name;74,2829
	char*    path;75,2893
	uid_t    uid;76,2957
	gid_t    gid;77,2999
	int      fd;78,3041
	uint32_t notify;79,3083
} xcgroup_t;81,3151

src/common/xcgroup_read_config.c,345
#  define _ISOC99_SOURCE 38,2044
#define DEFAULT_CGROUP_BASEDIR 61,2559
slurm_cgroup_conf_t *slurm_cgroup_conf slurm_cgroup_conf63,2601
extern void free_slurm_cgroup_conf(72,2855
static void _clear_slurm_cgroup_conf(77,2981
static int str_to_float 105,4079
static void conf_get_float 120,4260
extern int read_slurm_cgroup_conf(134,4648

src/common/xcgroup_read_config.h,835
#define _CGROUP_READ_CONFIG_H38,2066
#define XCGROUP_DEFAULT_MIN_RAM 57,2574
typedef struct slurm_cgroup_conf 60,2662
	bool      cgroup_automount;62,2698
	char *    cgroup_mountpoint;63,2727
	char *    cgroup_subsystems;64,2757
	char *    cgroup_release_agent;65,2787
	char *    cgroup_prepend;67,2821
	bool      constrain_cores;69,2849
	bool      task_affinity;70,2877
	bool      constrain_ram_space;72,2904
	float     allowed_ram_space;73,2936
	float     max_ram_percent;74,2966
	uint32_t  min_ram_space;76,3040
	bool      constrain_swap_space;78,3114
	float     allowed_swap_space;79,3147
	float     max_swap_percent;80,3178
	bool      memlimit_enforcement;82,3252
	float     memlimit_threshold;83,3285
	bool      constrain_devices;85,3317
	char *    allowed_devices_file;86,3347
} slurm_cgroup_conf_t;88,3381

src/common/xcpuinfo.c,1547
static char* _cpuinfo_path 71,2650
bool     initialized 84,3194
uint16_t procs,85,3224
uint16_t procs, boards,85,3224
uint16_t procs, boards, sockets,85,3224
uint16_t procs, boards, sockets, cores,85,3224
uint16_t procs, boards, sockets, cores, threads=85,3224
uint16_t block_map_size;86,3275
uint16_t *block_map,block_map87,3300
uint16_t *block_map, *block_map_inv;block_map_inv87,3300
get_procs(96,3569
static void hwloc_children(156,5215
get_cpuinfo(171,5583
	enum { SOCKET=176,5791
	enum { SOCKET=0, CORE=176,5791
	enum { SOCKET=0, CORE=1, PU=176,5791
	enum { SOCKET=0, CORE=1, PU=2, LAST_OBJ=176,5791
typedef struct cpuinfo 339,10821
	uint16_t seen;340,10846
	uint32_t cpuid;341,10862
	uint32_t physid;342,10879
	uint16_t physcnt;343,10897
	uint32_t coreid;344,10916
	uint16_t corecnt;345,10934
	uint16_t siblings;346,10953
	uint16_t cores;347,10973
} cpuinfo_t;348,10990
static cpuinfo_t *cpuinfo cpuinfo349,11003
get_cpuinfo(352,11148
static int _chk_cpuinfo_str(669,20005
static int _chk_cpuinfo_uint32(690,20608
static int _icmp16(742,22397
static int _icmp32(752,22534
static int _compare_cpus(763,22668
static int _compute_block_map(784,23212
xcpuinfo_init(873,25443
xcpuinfo_fini(888,25703
xcpuinfo_abs_to_mac(903,25935
xcpuinfo_mac_to_abs(909,26031
xcpuinfo_abs_to_map(915,26127
xcpuinfo_map_to_mac(924,26407
xcpuinfo_mac_to_map(930,26525
xcpuinfo_absmap_to_macmap(939,26796
xcpuinfo_macmap_to_absmap(955,27128
_range_to_map(982,27891
_map_to_range(1060,29116
_ranges_conv(1128,30181

src/common/xcpuinfo.h,95
#define _XCPUINFO_H_42,2079
#define XCPUINFO_ERROR 44,2101
#define XCPUINFO_SUCCESS 45,2129

src/common/xhash.c,1123
#undef uthash_malloc44,2184
#undef uthash_free45,2205
#define uthash_malloc(48,2265
#define uthash_free(49,2303
typedef struct xhash_item_st 61,2685
	void*		item;62,2716
	const char*	key;63,2779
	uint32_t	keysize;65,2926
	UT_hash_handle	hh;66,2991
} xhash_item_t;67,3062
struct xhash_st 69,3079
	xhash_item_t*	ht;70,3097
	uint32_t	count;71,3164
	xhash_idfunc_t	identify;72,3226
static xhash_item_t* xhash_find(75,3298
void* xhash_get(87,3565
xhash_t* xhash_init(95,3712
void* xhash_add(109,4023
void xhash_delete(124,4454
uint32_t xhash_count(134,4644
void xhash_walk(141,4733
void xhash_free(154,5014
static pthread_mutex_t hash_mutex 173,5411
static int primes[primes182,5771
hash_make(211,6184
hash_install(229,6443
hash_lookup(243,6662
hash_remove(261,6942
hash_free(301,7617
_rehash(335,8146
_find_closest_prime(374,8891
_is_prime(395,9137
_pjw_hash(417,9582
_hash_install(435,9861
_hash_lookup(468,10486
list_make_(518,11470
list_insert_(547,11982
list_enque_(579,12369
list_deque_(593,12545
list_push_(620,12813
list_pop_(636,12993
list_rm_(648,13110
list_free_(666,13306

src/common/xhash.h,672
#define __XHASH_EJ2ORE_INC__38,2040
typedef struct xhash_st xhash_t;45,2172
typedef const char* (*xhash_idfunc_t)xhash_idfunc_t57,2564
typedef unsigned (*xhash_hashfunc_t)xhash_hashfunc_t69,3036
struct hash_entry 121,4984
	struct hash_entry *forw;forw122,5004
	struct hash_entry *back;back123,5030
	char *key;key124,5056
	void *data;data125,5068
struct hash_tab 128,5085
	uint32_t size;129,5103
	uint32_t num_ents;130,5119
	struct list_ **lists;lists131,5139
struct list_ 134,5166
    struct list_ *forw;forw135,5181
    struct list_ *back;back136,5205
    uint32_t num_ents;137,5229
    char *name;name138,5252
#define LIST_NUM_ENTS(141,5272

src/common/xmalloc.c,499
   static pthread_mutex_t malloc_lock 59,2629
#  define MALLOC_LOCK(60,2696
#  define MALLOC_UNLOCK(61,2754
#  define MALLOC_LOCK(63,2821
#  define MALLOC_UNLOCK(64,2845
#  define xmalloc_assert(69,2891
#  define xmalloc_assert(73,3064
void *slurm_xmalloc(slurm_xmalloc86,3550
void *slurm_try_xmalloc(slurm_try_xmalloc112,4089
void * slurm_xrealloc(139,4754
int slurm_try_xrealloc(194,5871
int slurm_xsize(246,6900
void slurm_xfree(259,7270
static void malloc_assert_failed(274,7611

src/common/xmalloc.h,216
#define _XMALLOC_H78,3835
#define xmalloc(86,3930
#define try_xmalloc(89,4015
#define xfree(92,4107
#define xrealloc(95,4197
#define try_xrealloc(99,4337
#define xsize(103,4483
#define XMALLOC_MAGIC 113,4966

src/common/xsignal.c,171
xsignal(65,2819
_sigmask(83,3147
xsignal_sigset_create(99,3468
xsignal_save_mask(115,3742
xsignal_set_mask(122,3845
xsignal_block(128,3928
xsignal_unblock(141,4124

src/common/xsignal.h,57
#define _XSIGNAL_H41,2181
typedef void SigFunc(45,2222

src/common/xstring.c,844
#define XFGETS_CHUNKSIZE 71,2759
static void makespace(104,4027
void _xstrcat(132,4737
void _xstrncat(147,5085
static void strcatchar(159,5290
void _xstrcatchar(172,5554
void _xslurm_strerrorcat(183,5728
void _xstrftimecat(195,5901
void _xiso8601timecat(226,6506
void _xrfc5424timecat(251,7066
int _xstrfmtcat(287,7988
void _xmemcat(311,8334
char * xbasename(336,8739
char * xstrdup(349,8933
char *xstrdup_printf(xstrdup_printf373,9334
char * xstrndup(391,9629
long int xstrntol(413,9962
void _xstrsubstitute(433,10502
char *xstrstrip(xstrstrip467,11432
char *xshort_hostname(xshort_hostname509,12187
bool xstring_is_whitespace(530,12624
char *xstrtolower(xstrtolower547,12891
char *xstrchr(xstrchr560,13048
int xstrcmp(566,13143
int xstrcasecmp(577,13324
static char *_xstrdup_vprintf(_xstrdup_vprintf595,13756

src/common/xstring.h,397
#define _XSTRING_H	41,2216
#define xstrcat(45,2270
#define xstrncat(46,2319
#define xstrcatchar(47,2380
#define xslurm_strerrorcat(48,2437
#define xstrftimecat(49,2498
#define xiso8601timecat(50,2560
#define xrfc5424timecat(51,2641
#define xstrfmtcat(52,2722
#define xmemcat(53,2798
#define xstrsubstitute(54,2865
int _xstrfmtcat(107,4188
char *xstrdup_printf(xstrdup_printf124,4553

src/common/xtree.c,1151
static void xtree_free_childs(41,2081
void xtree_free(76,3026
void xtree_init(89,3239
void xtree_set_freefunc(98,3434
xtree_node_t* xtree_get_parent(103,3539
uint32_t xtree_get_count(110,3683
xtree_node_t* xtree_add_child(117,3782
xtree_node_t* xtree_add_sibling(176,5057
uint32_t xtree_depth_const(236,6402
static uint8_t xtree_depth_helper(244,6572
uint32_t xtree_depth_const_node(258,6784
uint32_t xtree_depth(273,7054
void xtree_refresh_depth(279,7144
uint32_t xtree_node_depth(287,7342
xtree_node_t* xtree_walk(301,7651
struct xtree_find_st 374,9204
	xtree_find_compare_t compare;375,9227
	const void* arg;376,9258
static uint8_t xtree_find_helper(379,9280
xtree_node_t* xtree_find(388,9493
xtree_node_t* xtree_delete(401,9764
#define XTREE_GET_PARENTS_FIRST_SIZE 436,10547
xtree_node_t** xtree_get_parents(438,10588
xtree_node_t* xtree_common(479,11693
#define XTREE_GET_LEAVES_FIRST_SIZE 513,12558
struct xtree_get_leaves_st 514,12597
	xtree_node_t** list;515,12626
	uint32_t list_count;516,12648
	uint32_t size;517,12670
static uint8_t xtree_get_leaves_helper(520,12690
xtree_node_t** xtree_get_leaves(538,13155

src/common/xtree.h,1189
#define __XTREE_O7S7VY_INC__37,1988
typedef void (*xtree_free_data_function_t)xtree_free_data_function_t42,2104
typedef struct xtree_node_st 48,2322
        void*                 data;49,2353
        struct xtree_node_st* parent;50,2425
        struct xtree_node_st* start;51,2497
        struct xtree_node_st* end;52,2569
        struct xtree_node_st* next;53,2641
        struct xtree_node_st* previous;54,2713
} xtree_node_t;55,2785
typedef struct xtree_st 57,2802
        xtree_node_t*              root;58,2828
        xtree_free_data_function_t free;59,2901
        uint32_t                   count;60,2974
        uint32_t                   depth;61,3047
        uint32_t                   state;62,3120
} xtree_t;63,3193
#define XTREE_STATE_DEPTHCACHED 95,4175
#define XTREE_PREPEND 97,4210
#define XTREE_APPEND 98,4270
#define XTREE_REFRESH_DEPTH 99,4330
#define XTREE_PREORDER 178,7424
#define XTREE_INORDER 179,7449
#define XTREE_ENDORDER 180,7474
#define XTREE_LEAF 181,7499
#define XTREE_LEVEL_MAX 183,7525
typedef uint8_t (*xtree_walk_function_t)xtree_walk_function_t199,8337
typedef uint8_t (*xtree_find_compare_t)xtree_find_compare_t231,9574

src/common/uthash/uthash.h,4108
#define UTHASH_H 25,1157
#define DECLTYPE(37,1700
#define NO_DECLTYPE39,1802
#define DECLTYPE(40,1822
#define DECLTYPE(43,1908
#define DECLTYPE_ASSIGN(47,1969
#define DECLTYPE_ASSIGN(53,2319
typedef unsigned int uint32_t;61,2681
typedef unsigned char uint8_t;62,2712
#define UTHASH_VERSION 67,2796
#define uthash_fatal(70,2847
#define uthash_malloc(73,2956
#define uthash_free(76,3063
#define uthash_noexpand_fyi(80,3179
#define uthash_expand_fyi(83,3292
#define HASH_INITIAL_NUM_BUCKETS 87,3412
#define HASH_INITIAL_NUM_BUCKETS_LOG2 88,3492
#define HASH_BKT_CAPACITY_THRESH 89,3572
#define ELMT_FROM_HH(92,3714
#define HASH_FIND(94,3786
#define HASH_BLOOM_BITLEN 108,4730
#define HASH_BLOOM_BYTELEN 109,4777
#define HASH_BLOOM_MAKE(110,4858
#define HASH_BLOOM_FREE(119,5453
#define HASH_BLOOM_BITSET(124,5716
#define HASH_BLOOM_BITTEST(125,5785
#define HASH_BLOOM_ADD(127,5855
#define HASH_BLOOM_TEST(130,6032
#define HASH_BLOOM_MAKE(134,6216
#define HASH_BLOOM_FREE(135,6246
#define HASH_BLOOM_ADD(136,6276
#define HASH_BLOOM_TEST(137,6311
#define HASH_MAKE_TABLE(140,6358
#define HASH_ADD(159,7781
#define HASH_ADD_KEYPTR(162,7933
#define HASH_TO_BKT(187,9864
#define HASH_DELETE(204,10801
#define HASH_FIND_STR(241,13609
#define HASH_ADD_STR(243,13743
#define HASH_FIND_INT(245,13883
#define HASH_ADD_INT(247,14013
#define HASH_FIND_PTR(249,14143
#define HASH_ADD_PTR(251,14276
#define HASH_DEL(253,14409
#define HASH_OOPS(260,14714
#define HASH_FSCK(261,14793
#define HASH_FSCK(313,18961
#define HASH_EMIT_KEY(320,19248
#define HASH_EMIT_KEY(327,19682
#define HASH_FCN 332,19857
#define HASH_FCN 334,19894
#define HASH_BER(338,19990
#define HASH_SAX(350,20732
#define HASH_FNV(360,21409
#define HASH_OAT(370,22087
#define HASH_JEN_MIX(386,23261
#define HASH_JEN(399,24187
#undef get16bits441,27481
#define get16bits(444,27654
#define get16bits(448,27736
#define HASH_SFH(451,27890
#define MUR_GETBLOCK(506,31914
#define MUR_PLUS0_ALIGNED(508,31967
#define MUR_PLUS1_ALIGNED(509,32028
#define MUR_PLUS2_ALIGNED(510,32089
#define MUR_PLUS3_ALIGNED(511,32150
#define WP(512,32211
#define MUR_THREE_ONE(514,32356
#define MUR_TWO_TWO(515,32448
#define MUR_ONE_THREE(516,32540
#define MUR_THREE_ONE(518,32675
#define MUR_TWO_TWO(519,32767
#define MUR_ONE_THREE(520,32859
#define MUR_GETBLOCK(522,32958
#define MUR_ROTL32(527,33258
#define MUR_FMIX(528,33319
#define HASH_MUR(537,33492
#define HASH_KEYCMP(575,36094
#define HASH_FIND_IN_BKT(578,36205
#define HASH_ADD_TO_BKT(592,37169
#define HASH_DEL_IN_BKT(606,38135
#define HASH_EXPAND_BUCKETS(647,40485
#define HASH_SORT(699,44519
#define HASH_SRT(700,44575
#define HASH_SELECT(784,51291
#define HASH_CLEAR(822,54292
#define HASH_ITER(834,55070
#define HASH_ITER(838,55316
#define HASH_COUNT(844,55596
#define HASH_CNT(845,55640
typedef struct UT_hash_bucket 847,55706
   struct UT_hash_handle *hh_head;hh_head848,55738
   unsigned count;849,55773
   unsigned expand_mult;863,56634
} UT_hash_bucket;865,56660
#define HASH_SIGNATURE 868,56753
#define HASH_BLOOM_SIGNATURE 869,56787
typedef struct UT_hash_table 871,56828
   UT_hash_bucket *buckets;buckets872,56859
   unsigned num_buckets,873,56887
   unsigned num_buckets, log2_num_buckets;873,56887
   unsigned num_items;874,56930
   struct UT_hash_handle *tail;tail875,56953
   ptrdiff_t hho;876,57032
   unsigned ideal_chain_maxlen;880,57268
   unsigned nonideal_items;885,57540
   unsigned ineff_expands,893,58018
   unsigned ineff_expands, noexpand;893,58018
   uint32_t signature;895,58056
   uint32_t bloom_sig;897,58154
   uint8_t *bloom_bv;bloom_bv898,58235
   char bloom_nbits;899,58257
} UT_hash_table;902,58286
typedef struct UT_hash_handle 904,58304
   struct UT_hash_table *tbl;tbl905,58336
   void *prev;prev906,58366
   void *next;next907,58440
   struct UT_hash_handle *hh_prev;hh_prev908,58514
   struct UT_hash_handle *hh_next;hh_next909,58588
   void *key;key910,58662
   unsigned keylen;911,58736
   unsigned hashv;912,58810
} UT_hash_handle;913,58884

src/sinfo/opts.c,492
#  define _GNU_SOURCE46,2390
#define OPT_LONG_HELP 65,2729
#define OPT_LONG_USAGE 66,2759
#define OPT_LONG_HIDE	67,2789
extern void parse_command_line(86,3434
_next_tok 311,9657
_build_state_list 342,10343
_build_all_states_list(373,11012
_node_state_list 398,11539
_node_state_equal 430,12361
_node_state_id 447,12785
_parse_format(483,13878
_get_prefix(767,21901
_parse_token(795,22633
void _print_options(818,23085
static void _usage(888,26291
static void _help(895,26459

src/sinfo/print.c,1866
#define MIN_NODE_FIELD_SIZE 57,2647
#define MIN_PART_FIELD_SIZE 58,2677
void print_date(79,3684
int print_sinfo_list(87,3772
int print_sinfo_entry(107,4199
void print_sinfo_reservation(124,4621
static int _resv_name_width(147,5413
static void _print_reservation(154,5538
static int _print_str(176,6247
static int _print_secs(207,6877
_build_min_max_16_string(235,7522
_build_min_max_32_string(257,8135
_build_cpu_load_min_max_32(290,8903
format_add_function(319,9510
static void _set_node_field_size(336,9933
static void _set_part_field_size(353,10406
static char *_str_tolower(_str_tolower376,11113
int _print_avail(391,11506
int _print_cpus(415,12348
int _print_cpus_aiot(434,12836
int _print_sct(472,13991
int _print_sockets(505,14940
int _print_cores(523,15390
int _print_threads(541,15832
int _print_disk(559,16282
int _print_features(577,16736
int _print_gres(590,17038
int _print_groups(603,17328
int _print_alloc_nodes(622,17843
int _print_memory(641,18385
int _print_node_address(659,18837
int _print_node_list(678,19262
int _print_node_hostnames(703,19817
int _print_nodes_t(725,20310
int _print_nodes_ai(747,20895
int _print_nodes_aiot(776,21688
int _print_partition(815,22850
int _print_partition_name(843,23567
int _print_prefix(863,24060
int _print_preempt_mode(871,24210
int _print_priority(888,24692
int _print_reason(906,25155
int _print_root(922,25570
int _print_share(940,26060
int _print_size(965,26735
int _print_state_compact(990,27454
int _print_state_long(1012,28061
int _print_time(1040,28820
int _print_timestamp(1059,29354
int _print_user(1077,29858
int _print_user_long(1100,30492
int _print_default_time(1124,31164
int _print_weight(1144,31779
int _print_com_invalid(1162,32226
int _print_cpu_load(1170,32395
int _print_max_cpus_per_node(1190,32852
int _print_version(1209,33355

src/sinfo/print.h,1746
#define _SINFO_PRINT_H_42,2302
#define FORMAT_STRING_SIZE 49,2412
typedef struct sinfo_format 54,2623
	int (*function)function55,2653
	uint32_t width;56,2706
	bool right_justify;57,2723
	char *suffix;suffix58,2744
} sinfo_format_t;59,2759
#define format_add_avail(73,3278
#define format_add_cpus(75,3385
#define format_add_cpus_aiot(77,3490
#define format_add_sct(79,3605
#define format_add_sockets(81,3708
#define format_add_cores(83,3819
#define format_add_threads(85,3926
#define format_add_disk(87,4037
#define format_add_features(89,4142
#define format_add_groups(91,4255
#define format_add_gres(93,4364
#define format_add_memory(95,4469
#define format_add_node_address(97,4578
#define format_add_node_hostnames(99,4699
#define format_add_node_list(101,4824
#define format_add_nodes(103,4939
#define format_add_nodes_aiot(105,5048
#define format_add_nodes_ai(107,5165
#define format_add_partition(109,5278
#define format_add_partition_name(111,5393
#define format_add_prefix(113,5518
#define format_add_preempt_mode(115,5627
#define format_add_priority(117,5748
#define format_add_reason(119,5861
#define format_add_root(121,5970
#define format_add_share(123,6075
#define format_add_size(125,6182
#define format_add_state_compact(127,6287
#define format_add_state_long(129,6410
#define format_add_time(131,6527
#define format_add_timestamp(133,6632
#define format_add_user(135,6748
#define format_add_user_long(137,6853
#define format_add_default_time(139,6968
#define format_add_weight(141,7089
#define format_add_alloc_nodes(143,7198
#define format_add_invalid(145,7317
#define format_add_cpu_load(147,7432
#define format_add_max_cpus_per_node(149,7545
#define format_add_version(151,7676

src/sinfo/sinfo.c,1092
typedef struct build_part_info 54,2587
	node_info_msg_t *node_msg;node_msg55,2620
	uint16_t part_num;56,2648
	partition_info_t *part_ptr;part_ptr57,2668
	List sinfo_list;58,2697
} build_part_info_t;59,2715
struct sinfo_parameters params;61,2737
static int g_node_scaling 63,2770
static int sinfo_cnt;65,2802
static pthread_mutex_t sinfo_cnt_mutex 66,2843
static pthread_cond_t  sinfo_cnt_cond 67,2911
int main(105,4493
static int _multi_cluster(138,5174
static int _get_info(161,5665
static int _bg_report(191,6435
static int _reservation_report(225,7408
_query_server(249,8099
void *_build_part_info(_build_part_info392,12028
static int _build_sinfo_data(459,13774
static bool _filter_out(579,17136
static void _sort_hostlist(677,19518
static bool _match_node_data(688,19748
static bool _match_part_data(771,22234
static void _update_sinfo(833,24048
static int _insert_node_ptr(1000,29956
static int _handle_subgrps(1040,31023
static sinfo_data_t *_create_sinfo(_create_sinfo1117,33389
static void _sinfo_list_delete(1137,33926
static int _strcmp(1148,34194

src/sinfo/sinfo.h,2958
#define _SINFO_H42,2334
	uint16_t node_state;75,3026
	uint32_t nodes_alloc;77,3049
	uint32_t nodes_idle;78,3072
	uint32_t nodes_other;79,3094
	uint32_t nodes_total;80,3117
	uint32_t cpus_alloc;82,3141
	uint32_t cpus_idle;83,3163
	uint32_t cpus_other;84,3184
	uint32_t cpus_total;85,3206
	uint32_t min_cpus;87,3229
	uint32_t max_cpus;88,3249
	uint32_t min_sockets;89,3269
	uint32_t max_sockets;90,3292
	uint32_t min_cores;91,3315
	uint32_t max_cores;92,3336
	uint32_t min_threads;93,3357
	uint32_t max_threads;94,3380
	uint32_t min_disk;95,3403
	uint32_t max_disk;96,3423
	uint32_t min_mem;97,3443
	uint32_t max_mem;98,3462
	uint32_t min_weight;99,3481
	uint32_t max_weight;100,3503
	uint32_t min_cpu_load;101,3525
	uint32_t max_cpu_load;102,3549
	uint32_t max_cpus_per_node;104,3574
	char *version;version106,3604
	char *features;features107,3620
	char *gres;gres108,3637
	char *reason;reason109,3650
	time_t reason_time;110,3665
	uint32_t reason_uid;111,3686
	hostlist_t hostnames;113,3709
	hostlist_t node_addr;114,3732
	hostlist_t nodes;115,3755
	hostlist_t ionodes;116,3774
	partition_info_t* part_info;120,3894
	uint16_t part_inx;121,3924
} sinfo_data_t;122,3944
struct sinfo_match_flags 126,4098
	bool avail_flag;127,4125
	bool cpus_flag;128,4143
	bool sockets_flag;129,4160
	bool cores_flag;130,4180
	bool threads_flag;131,4198
	bool sct_flag;132,4218
	bool disk_flag;133,4234
	bool features_flag;134,4251
	bool groups_flag;135,4272
	bool gres_flag;136,4291
	bool hostnames_flag;137,4308
	bool job_size_flag;138,4330
	bool default_time_flag;139,4351
	bool max_time_flag;140,4376
	bool memory_flag;141,4397
	bool node_addr_flag;142,4416
	bool partition_flag;143,4438
	bool preempt_mode_flag;144,4460
	bool priority_flag;145,4485
	bool reason_flag;146,4506
	bool root_flag;147,4525
	bool share_flag;148,4542
	bool state_flag;149,4560
	bool weight_flag;150,4578
	bool reason_timestamp_flag;151,4597
	bool reason_user_flag;152,4626
	bool cpu_load_flag;153,4650
	bool max_cpus_per_node_flag;154,4671
	bool version_flag;155,4701
struct sinfo_parameters 159,4748
	bool all_flag;160,4774
	List clusters;161,4790
	uint32_t cluster_flags;162,4806
	bool bg_flag;163,4831
	bool dead_nodes;164,4846
	bool exact_match;165,4864
	bool filtering;166,4883
	bool long_output;167,4900
	bool no_header;168,4919
	bool node_field_flag;169,4936
	bool node_flag;170,4959
	bool node_name_single;171,4976
	bool part_field_flag;172,5000
	bool reservation_flag;173,5023
	bool responding_nodes;174,5047
	bool list_reasons;175,5071
	bool summarize;176,5091
	struct sinfo_match_flags match_flags;177,5108
	char* format;179,5148
	char* nodes;180,5163
	char* partition;181,5177
	char* sort;182,5195
	char* states;183,5208
	int iterate;185,5224
	int node_field_size;186,5238
	int part_field_size;187,5260
	int verbose;188,5282
	List  format_list;190,5297
	List  state_list;191,5317

src/sinfo/sort.c,1202
#define PURE_ALPHA_SORT 48,2518
static bool reverse_order;50,2545
static bool part_order;51,2572
void sort_sinfo_list(85,4389
_get_sinfo_from_void(174,7387
static int _sort_by_avail(180,7531
static int _sort_by_cpu_load(200,7923
static int _sort_by_cpus(215,8201
static int _sort_by_sct(230,8467
static int _sort_by_sockets(255,8966
static int _sort_by_cores(270,9241
static int _sort_by_threads(285,9510
static int _sort_by_disk(300,9785
static int _sort_by_features(315,10051
static int _sort_by_groups(335,10434
static int _sort_by_node_addr(355,10917
static int _sort_by_hostnames(412,11984
static int _sort_by_job_size(469,13051
static int _sort_by_max_time(495,13593
static int _sort_by_memory(515,13993
static int _sort_by_node_list(530,14259
static int _sort_by_nodes_ai(587,15302
static int _sort_by_nodes(602,15578
static int _sort_by_partition(617,15851
static int _sort_by_reason(641,16398
static int _sort_by_reason_time(666,17070
static int _sort_by_root(696,17616
static int _sort_by_share(716,18045
static int _sort_by_preempt_mode(736,18439
static int _sort_by_priority(756,18846
static int _sort_by_state(776,19241
static int _sort_by_weight(792,19523

src/strigger/opts.c,577
#  define _GNU_SOURCE45,2293
#define OPT_LONG_HELP 68,2696
#define OPT_LONG_USAGE 69,2729
#define OPT_LONG_SET 70,2762
#define OPT_LONG_GET 71,2795
#define OPT_LONG_CLEAR 72,2828
#define OPT_LONG_USER 73,2861
#define OPT_LONG_BLOCK_ERR 74,2894
#define OPT_LONG_FRONT_END 75,2927
#define OPT_LONG_FLAGS 76,2960
struct strigger_parameters params;87,3252
extern void parse_command_line(92,3358
static void _init_options(298,9200
static void _print_options(337,10275
static void _validate_options(390,12895
static void _usage(464,15194
static void _help(470,15335

src/strigger/strigger.c,250
int main(71,2904
static int _clear_trigger(98,3443
static int _set_trigger(128,4108
static int _get_trigger(226,6749
static char *_trig_flags(_trig_flags424,12439
static int _trig_offset(431,12546
static char *_trig_user(_trig_user439,12650

src/strigger/strigger.h,1056
#define _STRIGGER_H41,2233
struct strigger_parameters 52,2440
	bool     block_err;53,2469
	List     clusters;54,2490
	uint16_t flags;55,2510
	bool     front_end;56,2527
	bool     job_fini;57,2548
	uint32_t job_id;58,2568
	bool     mode_set;59,2586
	bool     mode_get;60,2606
	bool     mode_clear;61,2626
	bool	 pri_ctld_fail;62,2648
	bool	 pri_ctld_res_op;63,2670
	bool	 pri_ctld_res_ctrl;64,2694
	bool	 pri_ctld_acct_buffer_full;65,2720
	bool	 bu_ctld_fail;66,2754
	bool	 bu_ctld_res_op;67,2775
	bool	 bu_ctld_as_ctrl;68,2798
	bool	 pri_dbd_fail;69,2822
	bool	 pri_dbd_res_op;70,2843
	bool	 pri_db_fail;71,2866
	bool	 pri_db_res_op;72,2886
	bool     node_down;73,2908
	bool     node_drained;74,2929
	char *   node_id;75,2953
	bool     node_fail;76,2972
	bool     node_idle;77,2993
	bool     node_up;78,3014
	int      offset;79,3033
	char *   program;80,3051
	bool     quiet;81,3070
	bool     reconfig;82,3087
	bool     time_limit;83,3107
	uint32_t trigger_id;84,3129
	uint32_t user_id;85,3151
	int      verbose;86,3170

src/srun/srun.c,692
#  undef HAVE_UNSETENV50,2388
#define OPEN_MPI_PORT_ERROR 111,3965
#define MAX_RETRIES 114,4005
#define MAX_ENTRIES 115,4028
#define	TYPE_NOT_TEXT	117,4052
#define	TYPE_TEXT	118,4076
#define	TYPE_SCRIPT	119,4096
static struct termios termdefaults;121,4119
static uint32_t global_rc 122,4155
static srun_job_t *job job123,4186
bool srun_max_timer 125,4218
bool srun_shutdown 126,4247
int sig_array[sig_array127,4276
void cfmakeraw(149,4797
int srun(160,5084
static int _slurm_debug_env_val 276,8217
static char *_uint16_array_to_str(_uint16_array_to_str303,8994
static void _set_exit_code(334,9572
static void _set_node_alias(356,9940
static void _pty_restore(379,10459

src/srun/srun_pty.c,321
#define MAX_RETRIES 70,2771
static int pty_sigarray[pty_sigarray73,2824
static int winch;74,2869
int set_winsize(84,3072
void block_sigwinch(100,3401
void pty_thread_create(105,3462
static void  _handle_sigwinch(130,4152
static void _notify_winsize_change(136,4246
static void *_pty_thread(_pty_thread156,4696

src/srun/srun_pty.h,73
#define _SIGNALS_H41,2226
typedef struct srun_job signal_job_t;45,2269

src/srun/srun.wrapper.c,17
int main(15,454

src/srun/libsrun/allocate.c,1074
#define MAX_ALLOC_WAIT	79,3199
#define MIN_ALLOC_WAIT	80,3239
#define MAX_RETRIES	81,3278
#define POLL_SLEEP	82,3301
pthread_mutex_t msg_lock 84,3356
pthread_cond_t msg_cond 85,3410
allocation_msg_thread_t *msg_thr msg_thr86,3462
struct pollfd global_fds[global_fds87,3503
static uint32_t pending_job_id 91,3557
static sig_atomic_t destroy_job 107,3942
static void _set_pending_job_id(109,3980
static void _signal_while_allocating(115,4106
static void _job_complete_handler(130,4448
static void _timeout_handler(152,5224
static void _user_msg_handler(163,5468
static void _ping_handler(168,5548
static void _node_fail_handler(174,5675
static bool _retry(181,5785
static int _wait_bluegene_block_ready(230,7236
static int _blocks_dealloc(288,8730
static int _wait_nodes_ready(323,9649
allocate_test(388,11391
allocate_nodes(401,11615
ignore_signal(521,14727
cleanup_allocation(527,14779
existing_allocation(534,14913
slurmctld_msg_init(562,15817
job_desc_msg_create_from_opts 597,16770
job_desc_msg_destroy(809,22614
create_job_step(818,22718

src/srun/libsrun/allocate.h,194
#define _HAVE_ALLOCATE_H41,2190
typedef struct slurmctld_communication_addr 47,2265
	uint16_t port;48,2311
} slurmctld_comm_addr_t;49,2327
slurmctld_comm_addr_t slurmctld_comm_addr;51,2353

src/srun/libsrun/debugger.c,341
MPIR_PROCDESC *MPIR_proctable;MPIR_proctable64,2719
int MPIR_proctable_size;65,2750
VOLATILE int MPIR_debug_state;66,2775
int MPIR_being_debugged;67,2806
int MPIR_i_am_starter;68,2831
int MPIR_acquired_pre_main;69,2854
char *totalview_jobid;totalview_jobid70,2882
  int MPIR_partial_attach_ok;72,2936
void MPIR_Breakpoint(75,2974

src/srun/libsrun/debugger.h,267
#define _DEBUGGER_INCLUDE30,1039
#define VOLATILE 34,1129
#define VOLATILE36,1161
  char * host_name;62,2077
  char * executable_name;63,2148
  int    pid;64,2206
} MPIR_PROCDESC;65,2256
#define MPIR_DEBUG_SPAWNED 89,2983
#define MPIR_DEBUG_ABORTING 90,3014

src/srun/libsrun/fname.c,103
#define MAX_WIDTH 59,2493
fname_create(67,2659
fname_destroy(196,5609
fname_remote_string 204,5690

src/srun/libsrun/fname.h,25
#define _FNAME_H40,2184

src/srun/libsrun/launch.c,1262
	int (*setup_srun_opt)setup_srun_opt52,2168
	int (*handle_multi_prog)handle_multi_prog53,2211
	int (*create_job_step)create_job_step54,2258
	int (*step_launch)step_launch57,2397
	int (*step_wait)step_wait62,2575
	int (*step_terminate)step_terminate63,2638
	void (*print_status)print_status64,2674
	void (*fwd_signal)fwd_signal65,2710
} plugin_ops_t;66,2752
static const char *syms[syms71,2825
static plugin_ops_t ops;82,3080
static plugin_context_t *plugin_context plugin_context83,3105
static pthread_mutex_t plugin_context_lock 84,3153
static bool init_run 85,3225
_is_local_file 88,3267
extern int launch_init(102,3489
extern int location_fini(134,4090
extern slurm_step_layout_t *launch_common_get_slurm_step_layout(launch_common_get_slurm_step_layout148,4285
extern int launch_common_create_job_step(161,4580
extern void launch_common_set_stdio_fds(366,11046
extern int launch_g_setup_srun_opt(453,13318
extern int launch_g_handle_multi_prog_verify(461,13457
extern int launch_g_create_job_step(469,13610
extern int launch_g_step_launch(480,13893
extern int launch_g_step_wait(490,14166
extern int launch_g_step_terminate(498,14325
extern void launch_g_print_status(506,14453
extern void launch_g_fwd_signal(514,14559

src/srun/libsrun/launch.h,26
#define _LAUNCH_H38,2010

src/srun/libsrun/multi_prog.c,290
_build_path(70,2986
_set_range(115,4121
_set_exec_names(137,4692
mpir_set_multi_name(182,5749
mpir_init(239,7137
mpir_cleanup(255,7565
mpir_set_executable_names(272,7948
mpir_dump_proctable(292,8474
_update_task_mask(312,8931
_validate_ranks(350,9782
verify_multi_name(411,11438

src/srun/libsrun/multi_prog.h,35
#define _SRUN_MULTI_PROG_H42,2269

src/srun/libsrun/opt.c,4715
#  define _GNU_SOURCE52,2425
#define OPT_NONE 99,3575
#define OPT_INT 100,3604
#define OPT_STRING 101,3633
#define OPT_IMMEDIATE 102,3662
#define OPT_DISTRIB 103,3691
#define OPT_NODES 104,3720
#define OPT_OVERCOMMIT 105,3749
#define OPT_CONN_TYPE	106,3778
#define OPT_RESV_PORTS	107,3805
#define OPT_NO_ROTATE	108,3833
#define OPT_GEOMETRY	109,3860
#define OPT_MPI 110,3886
#define OPT_CPU_BIND 111,3915
#define OPT_MEM_BIND 112,3944
#define OPT_MULTI 113,3973
#define OPT_NSOCKETS 114,4002
#define OPT_NCORES 115,4031
#define OPT_NTHREADS 116,4060
#define OPT_EXCLUSIVE 117,4089
#define OPT_OPEN_MODE 118,4118
#define OPT_ACCTG_FREQ 119,4147
#define OPT_WCKEY 120,4176
#define OPT_SIGNAL 121,4205
#define OPT_TIME_VAL 122,4234
#define OPT_CPU_FREQ 123,4263
#define OPT_CORE_SPEC 124,4292
#define OPT_PROFILE 125,4321
#define OPT_EXPORT	126,4350
#define LONG_OPT_HELP 129,4444
#define LONG_OPT_USAGE 130,4479
#define LONG_OPT_XTO 131,4514
#define LONG_OPT_LAUNCH 132,4549
#define LONG_OPT_TIMEO 133,4584
#define LONG_OPT_JOBID 134,4619
#define LONG_OPT_TMP 135,4654
#define LONG_OPT_MEM 136,4689
#define LONG_OPT_MINCPUS 137,4724
#define LONG_OPT_CONT 138,4759
#define LONG_OPT_UID 139,4794
#define LONG_OPT_GID 140,4829
#define LONG_OPT_MPI 141,4864
#define LONG_OPT_RESV_PORTS 142,4899
#define LONG_OPT_DEBUG_TS 143,4934
#define LONG_OPT_CONNTYPE 144,4969
#define LONG_OPT_TEST_ONLY 145,5004
#define LONG_OPT_NETWORK 146,5039
#define LONG_OPT_EXCLUSIVE 147,5074
#define LONG_OPT_PROPAGATE 148,5109
#define LONG_OPT_PROLOG 149,5144
#define LONG_OPT_EPILOG 150,5179
#define LONG_OPT_BEGIN 151,5214
#define LONG_OPT_MAIL_TYPE 152,5249
#define LONG_OPT_MAIL_USER 153,5284
#define LONG_OPT_TASK_PROLOG 154,5319
#define LONG_OPT_TASK_EPILOG 155,5354
#define LONG_OPT_NICE 156,5389
#define LONG_OPT_CPU_BIND 157,5424
#define LONG_OPT_MEM_BIND 158,5459
#define LONG_OPT_MULTI 159,5494
#define LONG_OPT_COMMENT 160,5529
#define LONG_OPT_QOS 161,5564
#define LONG_OPT_SOCKETSPERNODE 162,5603
#define LONG_OPT_CORESPERSOCKET	163,5642
#define LONG_OPT_THREADSPERCORE 164,5681
#define LONG_OPT_MINSOCKETS	165,5720
#define LONG_OPT_MINCORES	166,5755
#define LONG_OPT_MINTHREADS	167,5788
#define LONG_OPT_NTASKSPERNODE	168,5823
#define LONG_OPT_NTASKSPERSOCKET 169,5861
#define LONG_OPT_NTASKSPERCORE	170,5900
#define LONG_OPT_MEM_PER_CPU 171,5938
#define LONG_OPT_HINT	172,5977
#define LONG_OPT_BLRTS_IMAGE 173,6014
#define LONG_OPT_LINUX_IMAGE 174,6053
#define LONG_OPT_MLOADER_IMAGE 175,6092
#define LONG_OPT_RAMDISK_IMAGE 176,6131
#define LONG_OPT_REBOOT 177,6170
#define LONG_OPT_GET_USER_ENV 178,6209
#define LONG_OPT_PTY 179,6248
#define LONG_OPT_CHECKPOINT 180,6287
#define LONG_OPT_CHECKPOINT_DIR 181,6326
#define LONG_OPT_OPEN_MODE 182,6365
#define LONG_OPT_ACCTG_FREQ 183,6404
#define LONG_OPT_WCKEY 184,6443
#define LONG_OPT_RESERVATION 185,6482
#define LONG_OPT_RESTART_DIR 186,6521
#define LONG_OPT_SIGNAL 187,6560
#define LONG_OPT_DEBUG_SLURMD 188,6599
#define LONG_OPT_TIME_MIN 189,6638
#define LONG_OPT_GRES 190,6677
#define LONG_OPT_ALPS 191,6716
#define LONG_OPT_REQ_SWITCH 192,6755
#define LONG_OPT_LAUNCHER_OPTS 193,6794
#define LONG_OPT_CPU_FREQ 194,6833
#define LONG_OPT_LAUNCH_CMD 195,6872
#define LONG_OPT_PROFILE 196,6911
#define LONG_OPT_EXPORT 197,6950
int _verbose;202,7063
opt_t opt;203,7077
int error_exit 204,7088
int immediate_exit 205,7108
char *mpi_type mpi_type206,7132
resource_allocation_response_msg_t *global_resp global_resp207,7155
static bool mpi_initialized 210,7268
typedef struct env_vars env_vars_t;211,7305
int initialize_and_process_args(242,8098
static int _get_task_count(278,8836
static bool _valid_node_list(321,10017
#undef USE_ARGERROR344,10648
static void argerror(346,10685
static void argerror(348,10771
#  define argerror 361,11002
static void _opt_default(367,11135
struct env_vars 543,15510
	const char *var;var544,15528
	int type;545,15546
	void *arg;arg546,15557
	void *set_flag;set_flag547,15569
env_vars_t env_vars[env_vars550,15590
static void _opt_env(630,21421
_process_env_var(644,21612
_get_int(800,24971
static void _set_options(818,25459
static void _opt_args(1618,49356
static bool _opt_verify(1768,53703
extern void init_spank_env(2143,64007
extern char *spank_get_job_env(spank_get_job_env2170,64536
extern int   spank_set_job_env(2195,65014
extern int   spank_unset_job_env(2230,65785
static char *print_constraints(print_constraints2264,66566
#define tf_(2295,67322
static void _opt_list(2297,67369
static bool _under_parallel_debugger 2437,72457
static void _usage(2449,72742
static void _help(2493,74784

src/srun/libsrun/opt.h,4510
#define _HAVE_OPT_H42,2256
#  define SYSTEM_DIMENSIONS 49,2351
#define DEFAULT_IMMEDIATE	61,2552
#define MAX_THREADS	62,2580
#define INT_UNASSIGNED 64,2605
#define format_task_dist_states(71,2734
typedef struct srun_options 82,3174
	char *progname;progname84,3205
	bool multi_prog;86,3296
	char *user;user87,3349
	uid_t uid;88,3385
	gid_t gid;89,3416
	uid_t euid;90,3447
	gid_t egid;91,3493
	char *cwd;cwd92,3541
	bool cwd_set;93,3586
	int  ntasks;95,3639
	bool ntasks_set;96,3682
	int  cpus_per_task;97,3736
	bool cpus_set;98,3787
	int32_t max_threads;99,3847
	int32_t min_nodes;100,3907
	int32_t max_nodes;101,3955
	int32_t sockets_per_node;102,4007
	int32_t cores_per_socket;103,4066
	int32_t threads_per_core;104,4125
	int32_t ntasks_per_node;105,4184
	int32_t ntasks_per_socket;106,4238
	int ntasks_per_core;107,4294
	cpu_bind_type_t cpu_bind_type;108,4343
	char *cpu_bind;cpu_bind109,4403
	mem_bind_type_t mem_bind_type;110,4456
	char *mem_bind;mem_bind111,4507
	bool nodes_set;112,4560
	bool nodes_set_env;113,4613
	bool nodes_set_opt;114,4675
	bool extra_set;116,4765
	int  time_limit;117,4828
	char *time_limit_str;time_limit_str118,4879
	int  time_min;119,4930
	char *time_min_str;time_min_str120,4980
	int  ckpt_interval;121,5028
	char *ckpt_interval_str;ckpt_interval_str122,5082
	char *ckpt_dir;ckpt_dir123,5135
	bool exclusive;124,5188
	int  resv_port_cnt;125,5226
	char *partition;partition126,5268
	        distribution;128,5340
        uint32_t plane_size;129,5394
	char *cmd_name;cmd_name132,5518
	char *job_name;job_name133,5569
	bool job_name_set_cmd;134,5618
	bool job_name_set_env;135,5688
	unsigned int jobid;136,5750
	bool jobid_set;137,5810
	char *mpi_type;mpi_type138,5863
	char *dependency;dependency139,5900
	int nice;140,5953
	char *account;account141,5980
	char *comment;comment142,6027
	char *qos;qos143,6062
	char *ofname;ofname144,6089
	char *ifname;ifname145,6140
	char *efname;efname146,6191
	int  slurmd_debug;148,6243
	bool join;149,6298
	int immediate;155,6466
	uint16_t warn_flags;156,6516
	uint16_t warn_signal;157,6572
	uint16_t warn_time;158,6629
	bool hold;160,6685
	char *hostfile;hostfile161,6717
	bool labelio;162,6785
	bool unbuffered;163,6827
	bool allocate;164,6887
	bool noshell;165,6930
	bool overcommit;166,6981
	bool no_kill;167,7025
	int32_t kill_bad_exit;168,7062
	uint16_t shared;169,7115
	int  max_wait;170,7154
	bool quit_on_intr;171,7192
	bool disable_status;172,7252
	int  quiet;173,7312
	bool parallel_debug;174,7325
	bool debugger_test;175,7381
	bool test_only;176,7425
	uint32_t profile;177,7463
	char *propagate;propagate178,7517
	char *task_epilog;task_epilog179,7570
	char *task_prolog;task_prolog180,7612
	char *licenses;licenses181,7654
	bool preserve_env;182,7694
	char *export_env;export_env183,7736
	int32_t pn_min_cpus;186,7799
	int32_t pn_min_memory;187,7841
	int32_t mem_per_cpu;188,7881
	long pn_min_tmp_disk;189,7926
	char *constraints;constraints190,7965
	char *gres;gres191,8020
	bool contiguous;192,8050
	char *nodelist;nodelist193,8089
	char *alloc_nodelist;alloc_nodelist194,8140
	char *exc_nodes;exc_nodes195,8200
	int  relative;196,8253
	bool relative_set;197,8305
	bool no_alloc;198,8325
	int  max_launch_time;199,8367
	int  max_exit_timeout;200,8427
	int  msg_timeout;201,8487
	bool launch_cmd;202,8547
	char *launcher_opts;launcher_opts203,8607
	char *network;network206,8731
	uint16_t geometry[geometry209,8793
	bool reboot;210,8854
	bool no_rotate;211,8886
	uint16_t conn_type[conn_type212,8927
	char *blrtsimage;blrtsimage213,8987
	char *linuximage;linuximage214,9052
	char *mloaderimage;mloaderimage215,9117
	char *ramdiskimage;ramdiskimage216,9186
	char *prolog;prolog219,9281
	char *epilog;epilog220,9341
	time_t begin;221,9401
	uint16_t mail_type;222,9433
	char *mail_user;mail_user223,9474
	uint8_t open_mode;224,9512
	char *acctg_freq;acctg_freq225,9566
	uint32_t cpu_freq;227,9651
	bool pty;228,9704
	char *restart_dir;restart_dir229,9730
	int argc;230,9785
	char **argv;argv231,9825
	char *wckey;wckey232,9872
	char *reservation;reservation233,9941
	char **spank_job_env;spank_job_env234,9987
	int spank_job_env_size;236,10079
	int req_switch;237,10132
	int wait4switch;238,10183
	bool user_managed_io;239,10249
	int core_spec;240,10322
	bool core_spec_set;241,10370
} opt_t;242,10430
#define constraints_given(257,10930

src/srun/libsrun/srun_job.c,2002
typedef struct allocation_info 89,3399
	char                   *alias_list;alias_list90,3432
	uint16_t               *cpus_per_node;cpus_per_node91,3469
	uint32_t               *cpu_count_reps;cpu_count_reps92,3509
	uint32_t                jobid;93,3550
	uint32_t                nnodes;94,3582
	char                   *nodelist;nodelist95,3615
	uint32_t                num_cpu_groups;96,3650
	char                   *partition;partition97,3691
	dynamic_plugin_data_t  *select_jobinfo;select_jobinfo98,3727
	uint32_t                stepid;99,3768
} allocation_info_t;100,3801
static int shepard_fd 102,3823
static pthread_t signal_thread 103,3851
job_create_noalloc(140,5347
job_step_create_allocation(184,6320
job_create_allocation(388,11972
extern void init_srun(412,12635
extern void create_srun_job(473,14259
extern void pre_launch_srun_job(614,18389
extern void fini_srun(641,19037
update_job_state(678,19837
job_state(691,20102
job_force_termination(702,20279
_estimate_nports(726,20810
_compute_task_count(734,20960
_set_ntasks(753,21470
_job_create_structure(766,21737
job_update_io_fnames(876,24704
_normalize_hostlist(884,24926
static int _become_user 899,25172
static int _call_spank_local_user 928,25700
static void _default_sigaction(943,26043
static long _diff_tv_str(960,26461
static void _handle_intr(970,26679
static void _handle_pipe(1011,27828
static void _print_job_information(1022,27957
static void _run_srun_epilog 1044,28418
static void _run_srun_prolog 1054,28619
static int _run_srun_script 1064,28820
static void _set_env_vars(1112,29702
static void  _set_prio_process_env(1146,30540
static int _set_rlimit_env(1169,31130
static void _set_submit_dir_env(1230,32745
static int _set_umask_env(1246,33274
static void _shepard_notify(1275,34027
static int _shepard_spawn(1291,34278
static void *_srun_signal_mgr(_srun_signal_mgr1336,35153
static void _step_opt_exclusive(1389,36359
static int _validate_relative(1405,36710

src/srun/libsrun/srun_job.h,1316
#define _HAVE_JOB_H40,2182
	SRUN_JOB_INIT 60,2521
	SRUN_JOB_LAUNCHING,61,2593
	SRUN_JOB_STARTING,62,2665
	SRUN_JOB_RUNNING,63,2737
	SRUN_JOB_CANCELLED,64,2809
	SRUN_JOB_FORCETERM 65,2881
} srun_job_state_t;66,2953
enum io_t 68,2974
	IO_ALL 69,2986
	IO_ONE 70,3059
	IO_PER_TASK 71,3132
	IO_NONE 72,3205
#define format_io_t(75,3282
typedef struct fname 78,3420
	char      *name;name79,3443
	enum io_t  type;80,3461
	int        taskid;81,3479
} fname_t;82,3530
typedef struct srun_job 84,3542
	int fir_nodeid;85,3568
	uint32_t jobid;86,3585
	uint32_t stepid;87,3644
	uint32_t cpu_count;89,3705
	uint32_t nhosts;90,3747
	uint32_t ntasks;91,3782
	srun_job_state_t state;92,3817
	pthread_mutex_t state_mutex;93,3880
	pthread_cond_t  state_cond;94,3910
	int  rc;96,3940
	char *alias_list;alias_list98,4011
	char *nodelist;nodelist99,4071
	char *partition;partition100,4119
	fname_t *ifname;ifname102,4174
	fname_t *ofname;ofname103,4192
	fname_t *efname;efname104,4210
	dynamic_plugin_data_t *select_jobinfo;select_jobinfo107,4268
	pthread_t pty_id;110,4341
	int pty_fd;111,4409
	uint16_t pty_port;112,4469
	uint8_t ws_col;113,4535
	uint8_t ws_row;114,4580
	slurm_step_ctx_t *step_ctx;step_ctx115,4627
	slurm_step_ctx_params_t ctx_params;116,4656
} srun_job_t;117,4693

src/slurmctld/acct_policy.c,838
#define _DEBUG 53,2450
	ACCT_POLICY_ADD_SUBMIT,56,2475
	ACCT_POLICY_REM_SUBMIT,57,2500
	ACCT_POLICY_JOB_BEGIN,58,2525
	ACCT_POLICY_JOB_FINI59,2549
static slurmdb_used_limits_t *_get_used_limits_for_user(_get_used_limits_for_user62,2575
static bool _valid_job_assoc(81,2975
static void _adjust_limit_usage(113,3995
extern void acct_policy_add_job_submit(348,11339
extern void acct_policy_remove_job_submit(358,11637
extern void acct_policy_job_begin(367,11864
extern void acct_policy_job_fini(376,12083
extern bool acct_policy_validate(381,12202
extern bool acct_policy_job_runnable_state(1011,32537
extern bool acct_policy_job_runnable_pre_select(1032,33309
extern bool acct_policy_job_runnable_post_select(1300,40871
extern int acct_policy_update_pending_job(2019,61750
extern bool acct_policy_job_time_out(2148,66104

src/slurmctld/acct_policy.h,298
#define _HAVE_ACCT_POLICY_H40,2182
#define ADMIN_SET_LIMIT 42,2211
	uint16_t max_cpus;45,2260
	uint16_t max_nodes;46,2280
	uint16_t min_cpus;47,2301
	uint16_t min_nodes;48,2321
	uint16_t pn_min_memory;49,2342
	uint16_t qos;50,2367
	uint16_t time;51,2382
} acct_policy_limit_set_t;52,2398

src/slurmctld/agent.c,3508
#define MAX_RETRIES	100,4615
	DSH_NEW,103,4656
	DSH_ACTIVE,104,4703
	DSH_DONE,105,4746
	DSH_NO_RESP,106,4796
	DSH_FAILED 107,4837
} state_t;108,4886
typedef struct thd_complete 110,4898
	bool work_done;111,4928
	int fail_cnt;112,4980
	int no_resp_cnt;113,5029
	int retry_cnt;114,5080
	int max_delay;115,5130
	time_t now;116,5146
} thd_complete_t;117,5159
typedef struct thd 119,5178
	pthread_t thread;120,5199
	pthread_attr_t attr;121,5235
	state_t state;122,5282
	time_t start_time;123,5319
	time_t end_time;124,5357
	slurm_addr_t *addr;addr126,5430
	char *nodelist;nodelist128,5519
	List ret_list;129,5569
} thd_t;130,5585
typedef struct agent_info 132,5595
	pthread_mutex_t thread_mutex;133,5623
	pthread_cond_t thread_cond;134,5681
	uint32_t thread_count;135,5741
	uint32_t threads_active;136,5798
	uint16_t retry;137,5855
	thd_t *thread_struct;thread_struct138,5900
	bool get_reply;139,5948
	slurm_msg_type_t msg_type;140,5996
	void **msg_args_pptr;msg_args_pptr141,6047
	uint16_t protocol_version;142,6097
} agent_info_t;143,6156
typedef struct task_info 145,6173
	pthread_mutex_t *thread_mutex_ptr;thread_mutex_ptr146,6200
	pthread_cond_t *thread_cond_ptr;thread_cond_ptr148,6285
	uint32_t *threads_active_ptr;threads_active_ptr150,6368
	thd_t *thread_struct_ptr;thread_struct_ptr151,6433
	bool get_reply;152,6488
	slurm_msg_type_t msg_type;153,6536
	void *msg_args_ptr;msg_args_ptr154,6587
	uint16_t protocol_version;155,6642
} task_info_t;156,6701
typedef struct queued_request 158,6717
	agent_arg_t* agent_arg_ptr;159,6749
	time_t       first_attempt;160,6803
	time_t       last_attempt;162,6894
} queued_request_t;163,6954
typedef struct mail_info 165,6975
	char *user_name;user_name166,7002
	char *message;message167,7020
} mail_info_t;168,7036
static pthread_mutex_t retry_mutex 193,8182
static pthread_mutex_t mail_mutex 194,8246
static List retry_list 195,8310
static List mail_list 196,8375
static pthread_mutex_t agent_cnt_mutex 198,8437
static pthread_cond_t  agent_cnt_cond 199,8505
static int agent_cnt 200,8572
static bool run_scheduler 202,8599
static bool wiki2_sched 203,8637
static bool wiki2_sched_test 204,8675
void *agent(agent214,9051
static int _valid_agent_arg(359,13228
static agent_info_t *_make_agent_info(_make_agent_info377,13768
static task_info_t *_make_task_data(_make_task_data470,16994
static void _update_wdog_state(487,17713
static void *_wdog(_wdog526,18742
static void _notify_slurmctld_jobs(606,21050
static void _notify_slurmctld_nodes(649,22503
static inline int _comm_err(750,25302
static int _wif_status(761,25573
static void *_thread_per_group_rpc(_thread_per_group_rpc786,26075
static void _sig_handler(1047,34150
static int _setup_requeue(1051,34191
static void _queue_agent_retry(1083,35079
static void _list_delete_retry(1148,36934
extern int agent_retry 1169,37590
void agent_queue_request(1289,40786
static void _spawn_retry_agent(1331,42003
extern void slurmctld_free_batch_job_launch_msg(1361,42938
void agent_purge(1373,43210
extern int get_agent_count(1388,43514
static void _purge_agent_args(1393,43571
static mail_info_t *_mail_alloc(_mail_alloc1435,45221
static void _mail_free(1440,45302
static void _mail_proc(1452,45506
static char *_mail_type_str(_mail_type_str1481,46166
static void _set_job_time(1494,46449
extern void mail_job_info 1525,47489
static int _batch_launch_defer(1558,48442
extern int retry_list_size(1663,51554

src/slurmctld/agent.h,418
#define _AGENT_H43,2344
#define AGENT_THREAD_COUNT	47,2400
#define COMMAND_TIMEOUT 48,2469
#define MAX_AGENT_CNT	49,2537
typedef struct agent_arg 55,2760
	uint32_t	node_count;56,2787
	uint16_t	retry;58,2859
	slurm_addr_t    *addr;addr59,2903
	hostlist_t	hostlist;61,2993
	uint16_t        protocol_version;63,3077
	slurm_msg_type_t msg_type;64,3142
	void		*msg_args;msg_args65,3193
} agent_arg_t;66,3244

src/slurmctld/backup.c,721
#define VOLATILE 75,3036
#define VOLATILE77,3068
#define SHUTDOWN_WAIT 81,3100
static bool          dump_core 93,3639
static VOLATILE bool takeover 94,3679
static time_t last_controller_response;95,3718
static int backup_sigarray[backup_sigarray101,3846
void run_backup(109,4141
static void *_background_signal_hand(_background_signal_hand249,8169
static void _update_cred_key(302,9766
static void _sig_handler(308,9907
static void *_background_rpc_mgr(_background_rpc_mgr314,10052
static int _background_process_msg(394,12461
static int _ping_controller(435,13754
static void _backup_reconfig(475,14824
static int _shutdown_primary_controller(491,15310
static void _trigger_slurmctld_event(535,16604

src/slurmctld/controller.c,3102
#define CRED_LIFE 112,4284
#define DEFAULT_DAEMONIZE 113,4354
#define DEFAULT_RECOVER 114,4420
#define MIN_CHECKIN_TIME 119,4670
#define SHUTDOWN_WAIT 121,4777
#define SLURM_NODE_ACCT_REGISTER 126,5028
log_options_t log_opts 160,6621
log_options_t sched_log_opts 162,6696
slurmctld_config_t slurmctld_config;165,6778
int bg_recover 166,6815
char *slurmctld_cluster_name slurmctld_cluster_name167,6849
void *acct_db_conn acct_db_conn168,6908
int accounting_enforce 169,6935
int association_based_accounting 170,6963
bool ping_nodes_now 171,7001
uint32_t      cluster_cpus 172,7030
int   with_slurmdbd 173,7062
bool want_nodes_reboot 174,7087
diag_stats_t slurmctld_diag_stats;177,7157
static int	daemonize 180,7215
static int	debug_level 181,7257
static char	*debug_logfile debug_logfile182,7285
static bool     dump_core 183,7320
static uint32_t max_server_threads 184,7355
static int	new_nice 185,7412
static char	node_name[node_name186,7437
static int	recover 187,7476
static pthread_cond_t server_thread_cond 188,7516
static pid_t	slurmctld_pid;189,7585
static char    *slurm_conf_filename;slurm_conf_filename190,7613
static int      primary 191,7650
static int controller_sigarray[controller_sigarray196,7767
typedef struct connection_arg 231,9368
	int newsockfd;232,9400
} connection_arg_t;233,9416
time_t last_proc_req_start 235,9437
time_t next_stats_reset 236,9469
int main(239,9576
		cnt 726,24792
static void  _init_config(757,25389
static int _reconfigure_slurm(808,27117
static void *_slurmctld_signal_hand(_slurmctld_signal_hand841,28045
static void _default_sigaction(884,29196
static void _sig_handler(899,29485
static void *_slurmctld_rpc_mgr(_slurmctld_rpc_mgr904,29601
static void *_service_connection(_service_connection1050,33937
static bool _wait_for_server_thread(1091,35119
static void _free_server_thread(1131,36183
static int _accounting_cluster_ready(1142,36540
static int _accounting_mark_all_nodes_down(1179,37507
static void _remove_assoc(1218,38460
static void _remove_qos(1231,38754
static void _update_assoc(1243,38972
static void _update_qos(1267,39633
static void _queue_reboot_msg(1291,40282
static void *_slurmctld_background(_slurmctld_background1352,42161
extern void save_all_state(1693,52718
extern void send_all_to_accounting(1713,53171
extern void set_cluster_cpus(1727,53623
static int _report_locks_set(1758,54323
int slurmctld_shutdown(1808,55715
static void _parse_commandline(1830,56322
static void _usage(1896,57516
static int _shutdown_backup_controller(1944,59087
static void _update_cred_key(1996,60685
void update_logging(2005,60991
static void _update_nice(2069,62838
static void _kill_old_slurmctld(2087,63271
static void _init_pidfile(2105,63757
extern void set_slurmctld_state_loc(2121,64275
static void *_assoc_cache_mgr(_assoc_cache_mgr2146,65091
static void _become_slurm_user(2226,67550
static bool  _valid_controller(2269,68882
static void _test_thread_limit(2296,69447
static int _ping_backup_controller(2316,69958
static void  _set_work_dir(2353,70884

src/slurmctld/front_end.c,1113
#define FRONT_END_STATE_VERSION 60,2761
#define FRONT_END_2_6_STATE_VERSION 61,2819
#define FRONT_END_2_5_STATE_VERSION 62,2891
front_end_record_t *front_end_nodes front_end_nodes64,2964
uint16_t front_end_node_cnt 65,3008
time_t last_front_end_update 66,3041
static void _dump_front_end_state(74,3341
static int _open_front_end_state_file(91,3899
static void _pack_front_end(129,5245
static bool _front_end_access(180,7277
extern front_end_record_t *assign_front_end(assign_front_end226,8431
extern bool avail_front_end(272,10003
extern int update_front_end(299,10609
extern front_end_record_t *find_front_end_record(find_front_end_record369,12761
extern void log_front_end_state(388,13202
extern void purge_front_end_state(415,14078
gid_t *_xlate_groups(_xlate_groups443,14886
uid_t *_xlate_users(_xlate_users470,15594
extern void restore_front_end_state(505,16665
extern void pack_all_front_end(627,20686
extern int dump_all_front_end_state(681,22088
extern int load_all_front_end_state(778,25049
extern void set_front_end_down 944,29863
extern void sync_front_end_state(969,30670

src/slurmctld/front_end.h,38
#define __SLURM_FRONT_END_H__40,2166

src/slurmctld/gang.c,3132
static bool thread_running 65,2718
static bool thread_shutdown 66,2754
static pthread_mutex_t term_lock 67,2791
static pthread_cond_t  term_cond 68,2853
static pthread_mutex_t thread_flag_mutex 69,2914
static pthread_t timeslicer_thread_id 70,2984
static List preempt_job_list 71,3039
enum entity_type 74,3122
	GS_NODE,75,3141
	GS_SOCKET,76,3151
	GS_CORE,77,3163
	GS_CPU,78,3173
	GS_CPU2	79,3211
enum gs_flags 82,3250
	GS_SUSPEND,83,3266
	GS_RESUME,84,3279
	GS_NO_PART,85,3291
	GS_SUCCESS,86,3304
	GS_ACTIVE,87,3317
	GS_NO_ACTIVE,88,3329
	GS_FILLER89,3344
struct gs_job 92,3359
	uint32_t job_id;93,3375
	struct job_record *job_ptr;job_ptr94,3393
	uint16_t sig_state;95,3422
	uint16_t row_state;96,3443
struct gs_part 99,3468
	char *part_name;part_name100,3485
	uint16_t priority;101,3503
	uint32_t num_jobs;102,3523
	struct gs_job **job_list;job_list103,3543
	uint32_t job_list_size;104,3570
	uint32_t num_shadows;105,3595
	struct gs_job **shadow;shadow106,3618
	uint32_t shadow_size;107,3678
	uint32_t jobs_active;108,3701
	bitstr_t *active_resmap;active_resmap109,3724
	uint16_t *active_cpus;active_cpus110,3750
	uint16_t array_size;111,3774
	struct gs_part *next;next112,3796
static uint32_t timeslicer_seconds 152,5145
static uint16_t gr_type 153,5185
static uint16_t gs_fast_schedule 154,5220
static List gs_part_list 155,5258
static uint32_t default_job_list_size 156,5291
static pthread_mutex_t data_mutex 157,5335
static uint16_t *gs_bits_per_node gs_bits_per_node159,5399
static uint32_t num_sorted_part 160,5441
static char *_print_flag(_print_flag165,5552
static void _print_jobs(189,5963
static uint16_t _get_gr_type(217,6871
static void _load_phys_res_cnt(238,7468
static uint16_t _get_phys_bit_cnt(279,8393
static uint16_t _get_socket_cnt(295,8794
static void _destroy_parts(305,9013
static void _build_parts(322,9480
static int _find_gs_part(355,10376
static int _find_job_index(365,10647
static int _can_cpus_fit(376,10915
static int _job_fits_in_active_row(404,11488
static void _fill_sockets(442,12654
static void _add_job_to_active(483,13709
static int _suspend_job(557,15973
static void _resume_job(577,16511
void _preempt_job_list_del(595,16962
static void _preempt_job_queue(600,17014
static void _preempt_job_dequeue(607,17173
static int _sort_partitions(687,19628
static void _cast_shadow(705,20023
static void _clear_shadow(745,21119
static void _update_active_row(780,22014
static void _update_all_active_rows(873,24823
static void _remove_job_from_part(894,25507
static uint16_t _add_job_to_part(943,26825
static void _scan_slurm_job_list(1040,29795
static void _spawn_timeslicer_thread(1131,32530
extern int gs_init(1154,33149
extern int gs_fini(1184,34001
extern int gs_job_start(1215,34844
extern int gs_job_scan(1251,35923
extern void gs_wake_jobs(1268,36417
extern int gs_job_fini(1287,36925
extern int gs_reconfig(1336,38665
static void _build_active_row(1444,41880
static void _cycle_job_list(1485,43317
static void _slice_sleep(1553,45472
static void *_timeslicer_thread(_timeslicer_thread1565,45759

src/slurmctld/gang.h,31
#define __SCHED_GANG_H39,2061

src/slurmctld/groups.c,578
#  define _GNU_SOURCE45,2328
#  define   __USE_GNU48,2377
#define _DEBUG 66,2708
static List group_cache_list 73,2969
static pthread_mutex_t group_cache_mutex 74,3006
struct group_cache_rec 75,3076
	char *group_name;group_name76,3101
	int uid_cnt;77,3120
	uid_t *group_uids;group_uids78,3134
extern uid_t *get_group_members(get_group_members88,3437
extern void clear_group_cache(239,7036
static uid_t *_get_group_cache(_get_group_cache251,7324
static void _cache_del_func(279,8091
static void _put_group_cache(290,8336
static void _log_group_members(311,8971

src/slurmctld/groups.h,31
#define _HAVE_GROUPS_H41,2250

src/slurmctld/job_mgr.c,6642
#define DETAILS_FLAG 100,4009
#define SLURM_CREATE_JOB_FLAG_NO_ALLOCATE_0 101,4037
#define STEP_FLAG 102,4083
#define TOP_PRIORITY 103,4108
#define JOB_HASH_INX(105,4184
#define JOB_ARRAY_HASH_INX(106,4242
#define JOB_STATE_VERSION 110,4406
#define JOB_14_03_STATE_VERSION 111,4457
#define JOB_2_6_STATE_VERSION 112,4524
#define JOB_2_5_STATE_VERSION 113,4589
#define JOB_CKPT_VERSION 115,4655
#define JOB_2_2_CKPT_VERSION 116,4704
#define JOB_2_1_CKPT_VERSION 117,4773
List   job_list 120,4866
time_t last_job_update;121,4913
static uint32_t highest_prio 124,5002
static uint32_t lowest_prio 125,5036
static int      hash_table_size 126,5081
static int      job_count 127,5118
static uint32_t job_id_sequence 128,5176
static struct   job_record **job_hash job_hash129,5250
static struct   job_record **job_array_hash_j job_array_hash_j130,5296
static struct   job_record **job_array_hash_t job_array_hash_t131,5350
static int	select_serial 132,5404
static bool     wiki_sched 133,5435
static bool     wiki2_sched 134,5471
static bool     wiki_sched_test 135,5508
struct job_record *create_job_record(create_job_record232,10464
void delete_job_details(273,11712
static void _delete_job_desc_files(316,13226
static uint32_t _max_switch_wait(341,13800
static slurmdb_qos_rec_t *_determine_and_validate_qos(_determine_and_validate_qos369,14505
int dump_all_job_state(440,16634
static int _open_job_state_file(568,20418
extern int load_all_job_state(599,21403
extern int load_last_job_id(698,24167
static void _dump_job_state(788,26645
static int _load_job_state(913,31313
void _dump_job_details(1700,58781
static int _load_job_details(1756,60780
void _add_job_hash(2088,72641
void _add_job_array_hash(2102,72999
extern struct job_record *find_job_array_rec(find_job_array_rec2127,73787
struct job_record *find_job_record(find_job_record2168,74914
static void _rebuild_part_name_list(2184,75254
extern int kill_job_by_part_name(2222,76510
extern int kill_job_by_front_end_name(2323,79533
extern bool partition_in_use(2489,84391
extern bool allocated_session_in_use(2518,85255
extern int kill_running_job_by_node_name(2552,86220
extern void excise_node_from_job(2720,91338
void dump_job_desc(2756,92424
int init_job_conf(2953,99998
extern void rehash_jobs(2968,100298
struct job_record *_job_rec_copy(_job_rec_copy2990,101204
static void _create_job_array(3151,107606
static int _select_nodes_parts(3193,108830
extern int job_allocate(3244,110805
extern int job_fail(3416,116299
extern int job_signal(3478,118179
_signal_batch_job(3618,122625
extern int prolog_complete(3668,124220
extern int job_complete(3706,125383
static int _alt_part_test(3845,129908
static int _part_access_check(3884,131102
static int _valid_job_part(3972,134094
_valid_job_part_acct(4172,140129
_valid_job_part_qos(4217,141382
extern int job_limits_check(4255,142610
static int _job_create(4373,146888
static int _test_strlen(4822,161158
static bool _parse_array_tok(4838,161562
static bool _valid_array_inx(4874,162320
extern int validate_job_create_req(4914,163364
_copy_job_desc_to_file(4971,165911
_copy_job_desc_files(5013,167034
_write_data_array_to_file(5067,168611
static int _write_data_to_file(5114,169639
char **get_job_env(get_job_env5152,170537
char *get_job_script(get_job_script5171,171078
_read_data_array_from_file(5199,171766
void _read_data_from_file(5323,174751
_set_multi_core_data(5364,175561
_copy_job_desc_to_job_record(5401,176962
static char *_copy_nodelist_no_dup(_copy_nodelist_no_dup5651,185673
static bool _valid_pn_min_mem(5665,185920
void job_time_limit(5734,188129
extern int job_update_cpu_cnt(5843,191329
static void _job_timed_out(5885,192428
static int _validate_job_desc(5910,193290
_validate_min_mem_partition(6006,196603
static void _list_delete_job(6035,197378
static int _list_find_job_id(6141,200586
static int _list_find_job_old(6157,200953
static bool _hide_job(6208,202537
extern void pack_all_jobs(6230,203464
extern int pack_one_job(6302,205739
void pack_job(6376,207836
static int _find_node_max_cpu_cnt(6772,220838
static void _pack_default_job_details(6795,221425
static void _pack_pending_job_details(6964,226080
void purge_old_job(7067,229049
static int _purge_job_record(7106,230113
void reset_job_bitmaps(7119,230504
static int _reset_detail_bitmaps(7250,234472
static void _reset_step_bitmaps(7279,235418
void reset_first_job_id(7312,236558
extern uint32_t get_next_job_id(7321,236751
static int _set_job_id(7336,237130
extern void set_job_prio(7368,237969
extern void sync_job_priorities(7386,238561
static bool _top_priority(7413,239368
static void _merge_job_licenses(7510,242402
int update_job(7546,243589
static void _send_job_kill(9175,295771
extern void job_pre_resize_acctg(9256,298254
extern void job_post_resize_acctg(9279,299046
validate_jobs_on_node(9299,299746
static void _purge_missing_jobs(9438,304022
static void _notify_srun_missing_step(9490,305870
abort_job_on_node(9543,308011
kill_job_on_node(9593,309663
job_alloc_info(9644,311308
int sync_job_files(9676,312319
static void _get_batch_job_dir_ids(9692,312735
static void _validate_job_files(9727,313733
static int _find_batch_dir(9757,314645
static void _del_batch_list_rec(9764,314825
static void _remove_defunct_batch_dirs(9771,314978
_xmit_new_end_time(9793,315611
extern bool job_epilog_complete(9845,317215
void batch_requeue_fini(9963,321109
void job_fini 10017,322948
extern void job_completion_logger(10029,323155
extern bool job_independent(10107,325738
extern int job_node_ready(10171,327614
static void _signal_job(10209,328655
static void *_switch_suspend_info(_switch_suspend_info10297,331199
static void _suspend_job(10321,332001
static int _suspend_job_nodes(10383,333854
static int _resume_job_nodes(10440,335514
static int _job_suspend_switch_test(10482,336656
extern int job_suspend(10513,337679
extern int job_requeue(10640,340978
extern int job_end_time(10770,344320
extern void update_job_nodes_completing(10788,344811
extern int job_hold_by_assoc_id(10819,345653
extern int job_hold_by_qos_id(10878,347192
extern int update_job_account(10930,348532
extern int update_job_wckey(11003,350963
extern int send_jobs_to_accounting(11060,352854
extern int job_checkpoint(11115,354464
static int _checkpoint_job_record 11244,358144
static void _pack_job_for_ckpt 11326,360316
_copy_job_record_to_job_desc(11357,361133
extern int job_restart(11516,368198
_read_job_ckpt_file(11661,372007
extern void build_cg_bitmap(11704,372937
job_hold_requeue(11728,373694

src/slurmctld/job_scheduler.c,1973
#define _DEBUG 85,3485
#define MAX_FAILED_RESV 86,3502
#define MAX_RETRIES 87,3529
typedef struct epilog_arg 89,3553
	char *epilog_slurmctld;epilog_slurmctld90,3581
	uint32_t job_id;91,3606
	char **my_env;my_env92,3624
} epilog_arg_t;93,3640
static int	save_last_part_update 111,4405
static List _build_user_job_list(123,4745
static void _job_queue_append(145,5320
static void _job_queue_rec_del(158,5728
static bool _job_runnable_test1(164,5857
static bool _job_runnable_test2(233,7808
extern List build_job_queue(256,8539
extern bool job_is_completing(333,10855
extern void set_job_elig_time(362,11597
static bool _failed_partition(419,13449
static void _do_diag_stats(432,13707
extern bool replace_batch_job(451,14429
static bool _all_partition_priorities_same(684,21497
extern int schedule(720,22677
extern void sort_job_queue(1266,39747
extern int sort_job_queue2(1273,39946
extern batch_job_launch_msg_t *build_launch_job_msg(build_launch_job_msg1324,41304
extern void launch_job(1420,45322
extern int make_batch_job_cred(1462,46682
static void _depend_list_del(1508,48300
extern List depended_list_copy(1518,48505
extern void print_job_dependency(1539,49151
static void _rm_dependency(1580,50386
extern int test_job_dependency(1629,51770
extern int update_job_dependency(1788,56786
static bool _scan_depend(2008,63477
static void _pre_list_del(2068,65150
static void _delayed_job_start_time(2077,65504
extern int job_start_data(2129,67421
extern int epilog_slurmctld(2283,72538
static char **_build_env(_build_env2325,73683
static void *_run_epilog(_run_epilog2416,76424
extern int prolog_slurmctld(2486,78102
static void *_run_prolog(_run_prolog2523,79011
extern List feature_list_copy(2649,82380
extern int build_feature_list(2676,83182
static void _feature_list_delete(2786,86550
static int _valid_feature_list(2793,86699
static int _valid_node_feature(2843,88078
extern void rebuild_job_part_list(2866,88730

src/slurmctld/job_scheduler.h,245
#define _JOB_SCHEDULER_H43,2375
typedef struct job_queue_rec 47,2439
	uint32_t job_id;48,2470
	struct job_record *job_ptr;job_ptr49,2488
	struct part_record *part_ptr;part_ptr50,2517
	uint32_t priority;51,2548
} job_queue_rec_t;52,2568

src/slurmctld/job_submit.c,669
typedef struct slurm_submit_ops 77,3031
	int		(*submit)submit78,3065
	int		(*modify)modify81,3169
} slurm_submit_ops_t;84,3285
static const char *syms[syms89,3370
static int g_context_cnt 94,3433
static slurm_submit_ops_t *ops ops95,3464
static plugin_context_t **g_context g_context96,3503
static char *submit_plugin_list submit_plugin_list97,3547
static pthread_mutex_t g_context_lock 98,3587
static bool init_run 99,3654
extern int job_submit_plugin_init(106,3758
extern int job_submit_plugin_fini(165,5139
extern int job_submit_plugin_reconfig(199,5890
extern int job_submit_plugin_submit(235,6879
extern int job_submit_plugin_modify(258,7524

src/slurmctld/job_submit.h,30
#define _JOB_SUBMIT_H40,2155

src/slurmctld/licenses.c,1089
List license_list 58,2652
time_t last_license_update 59,2685
static pthread_mutex_t license_mutex 60,2717
static inline void _licenses_print(64,2907
extern void license_free_rec(90,3657
static int _license_find_rec(101,3902
static int _license_find_remote_rec(114,4236
static List _build_license_list(124,4486
static char * _build_license_string(182,5938
static void _add_res_rec_2_lic_list(208,6516
extern char *get_licenses_used(get_licenses_used222,7004
extern int license_init(247,7638
extern int license_update(268,8169
extern void license_add_remote(323,9934
extern void license_update_remote(357,10713
extern void license_remove_remote(401,11799
extern void license_sync_remote(440,12743
extern void license_free(505,14488
extern List license_validate(519,14924
extern void license_job_merge(568,16326
extern int license_job_test(584,16838
extern List license_job_copy(633,18209
extern int license_job_get(659,19008
extern int license_job_return(695,20014
extern bool license_list_overlap(737,21153
get_all_license_info(764,21673
_pack_license(826,23039

src/slurmctld/licenses.h,188
#define _LICENSES_H40,2194
typedef struct licenses 45,2282
	char *		name;46,2308
	uint32_t	total;47,2361
	uint32_t	used;48,2409
	uint8_t         remote;49,2446
} licenses_t;50,2520

src/slurmctld/locks.c,646
static pthread_mutex_t locks_mutex 55,2481
static pthread_cond_t locks_cond 56,2545
static pthread_mutex_t state_mutex 57,2606
static slurmctld_lock_flags_t slurmctld_locks;59,2671
static int kill_thread 60,2718
void init_locks(69,3068
extern void lock_slurmctld(76,3272
extern int try_lock_slurmctld 101,4100
extern void unlock_slurmctld(165,5914
static bool _wr_rdlock(196,6953
static void _wr_rdunlock(228,7899
static bool _wr_wrlock(237,8174
static void _wr_wrunlock(266,9044
void get_lock_values(276,9368
extern void kill_locked_threads(284,9610
extern void lock_state_files(291,9768
extern void unlock_state_files(295,9840

src/slurmctld/locks.h,591
#define _SLURMCTLD_LOCKS_H88,4962
	NO_LOCK,92,5062
	READ_LOCK,93,5072
	WRITE_LOCK94,5084
}	lock_level_t;95,5096
	lock_level_t	config;99,5188
	lock_level_t	job;100,5210
	lock_level_t	node;101,5229
	lock_level_t	partition;102,5249
}	slurmctld_lock_t;103,5274
	CONFIG_LOCK,115,5785
	JOB_LOCK,116,5799
	NODE_LOCK,117,5810
	PART_LOCK,118,5822
	ENTITY_COUNT119,5834
}	lock_datatype_t;120,5848
#define read_lock(122,5868
#define write_lock(123,5918
#define write_wait_lock(124,5969
#define write_cnt_lock(125,6024
	int entity[entity128,6096
}	slurmctld_lock_flags_t;129,6127

src/slurmctld/node_mgr.c,2149
#define _DEBUG	84,3556
#define MAX_RETRIES	85,3574
#define NODE_STATE_VERSION 88,3672
#define NODE_2_6_STATE_VERSION 89,3725
#define NODE_2_5_STATE_VERSION 90,3792
bitstr_t *avail_node_bitmap avail_node_bitmap93,3883
bitstr_t *cg_node_bitmap cg_node_bitmap94,3951
bitstr_t *idle_node_bitmap idle_node_bitmap95,4020
bitstr_t *power_node_bitmap power_node_bitmap96,4083
bitstr_t *share_node_bitmap share_node_bitmap97,4154
bitstr_t *up_node_bitmap up_node_bitmap98,4223
int dump_all_node_state 120,5264
_dump_node_state 210,7979
static int _open_node_state_file(238,9075
extern int load_all_node_state 272,10248
int list_compare_config 616,21168
static bool _node_is_hidden(632,21490
extern void pack_all_node 662,22448
extern void pack_one_node 752,25307
static void _pack_node 828,27533
void set_slurmd_addr 1004,34158
int update_node 1045,35324
static int _strcmp(1370,45322
extern void restore_node_features(1388,45781
struct config_record * _dup_config(1434,47134
static int _update_node_weight(1461,48120
static int _update_node_features(1530,50319
static int _update_node_gres(1603,52683
static void _update_config_ptr(1681,55163
extern int drain_nodes 1701,55667
static bool _valid_node_state_change(1764,57400
extern int update_node_record_acct_gather_data(1815,58488
extern int validate_node_specs(1838,59202
static front_end_record_t * _front_end_reg(2165,69771
extern int validate_nodes_via_front_end(2226,71931
static void _sync_bitmaps(2506,80491
static void _node_did_resp(2526,81073
static void _node_did_resp(2563,82150
void node_did_resp 2636,84537
void node_not_resp 2658,85049
extern void node_no_resp_msg(2711,86662
void set_node_down 2744,87523
void set_node_down_ptr 2764,87962
bool is_node_down 2787,88597
bool is_node_resp 2807,89032
find_first_node_record 2833,89528
void msg_to_slurmd 2851,89911
extern void make_node_alloc(2916,91814
extern void make_node_comp(2943,92646
static void _make_node_down(3008,94456
void make_node_idle(3035,95357
extern int send_nodes_to_accounting(3150,98725
extern void node_fini 3227,100887
extern void reset_node_load(3239,101193

src/slurmctld/node_scheduler.c,1628
#define MAX_FEATURES 91,3604
#define MAX_RETRIES 92,3672
struct node_set 94,3698
	uint16_t cpus_per_node;95,3760
	uint32_t real_memory;100,3983
	uint32_t nodes;101,4006
	uint32_t weight;102,4023
	char     *features;features103,4041
	bitstr_t *feature_bits;feature_bits104,4062
	bitstr_t *my_bitmap;my_bitmap105,4119
static uint16_t _get_ntasks_per_core(140,5500
static int _get_gres_alloc(154,5948
static int _get_gres_config(207,7671
static int _build_gres_alloc_string(353,11983
extern void allocate_nodes(380,12738
extern void set_job_alias_list(414,13485
extern void deallocate_nodes(453,14788
static int _match_feature(625,20100
_resolve_shared_status(688,21889
_get_req_features(728,23041
			for (i=0; i<tmp_node_set_size;tmp_node_set_size863,28010
	} else 919,29789
	char *tmp_str tmp_str927,29972
	char *tmp_str tmp_str948,30602
	job_ptr->details->req_node_bitmap req_node_bitmap959,30932
	job_ptr->details->min_cpus min_cpus960,30992
	job_ptr->details->min_nodes min_nodes961,31038
_pick_best_nodes(1014,33469
			} else 1320,42705
static void _preempt_jobs(1428,45851
extern int select_nodes(1532,49183
static void _launch_prolog(1835,59190
static int _fill_in_gres_fields(1894,61274
extern int list_find_feature(1980,63787
static bool _valid_feature_counts(2000,64339
extern int job_req_node_filter(2087,66969
static int _build_node_list(2174,69965
static void _filter_nodes_in_set(2406,77866
static int _nodes_in_sets(2484,80761
extern void build_node_details(2514,81526
static bitstr_t *_valid_features(_valid_features2586,84123
extern void re_kill_job(2632,85589

src/slurmctld/node_scheduler.h,39
#define _HAVE_NODE_SCHEDULER_H41,2264

src/slurmctld/partition_mgr.c,1561
#define PART_STATE_VERSION 75,3184
#define PART_2_6_STATE_VERSION 76,3237
#define PART_2_5_STATE_VERSION 77,3304
struct part_record default_part;80,3395
List part_list 81,3463
char *default_part_name default_part_name82,3509
struct part_record *default_part_loc default_part_loc83,3574
time_t last_part_update;84,3652
uint16_t part_max_priority 85,3724
static int _build_part_bitmap(109,4818
static void _unlink_free_nodes(177,6736
struct part_record *create_part_record(create_part_record214,7613
static int _delete_part_record(298,10447
int dump_all_part_state(318,10922
static void _dump_part_state(412,13636
static int _open_part_state_file(450,14946
int load_all_part_state(483,15963
struct part_record *find_part_record(find_part_record775,25489
extern List part_list_copy(785,25757
extern List get_part_list(810,26406
int init_part_conf(846,27346
static void _list_delete_part(903,29260
int list_find_part(950,30595
extern void part_filter_set(966,30978
extern void part_filter_clear(985,31577
extern void pack_all_part(1011,32547
void pack_part(1066,34281
extern int update_part 1183,38493
extern int validate_group(1592,51812
extern int validate_alloc_node(1618,52531
void load_part_uid_allow_list(1645,53199
uid_t *_get_groups_members(_get_groups_members1680,54225
time_t _get_group_tlm(1715,55163
static int _uid_list_size(1727,55428
void part_fini 1743,55672
extern int delete_partition(1759,56030
extern bool misc_policy_job_runnable_state(1789,56992
extern bool part_policy_job_runnable_state(1805,57453

src/slurmctld/ping_nodes.c,333
#define MAX_RETRIES 60,2704
#define MAX_REG_FREQUENCY 63,2803
static pthread_mutex_t lock_mutex 65,2833
static int ping_count 66,2896
bool is_ping_done 75,3145
void ping_begin 93,3582
void ping_end 106,3953
void ping_nodes 120,4225
extern void run_health_check(363,12268
extern void update_nodes_acct_gather_data(445,14646

src/slurmctld/ping_nodes.h,35
#define _HAVE_PING_NODES_H40,2174

src/slurmctld/port_mgr.c,452
#define  _DEBUG 54,2446
bitstr_t **port_resv_table port_resv_table56,2465
int        port_resv_cnt 57,2514
int        port_resv_min 58,2546
int        port_resv_max 59,2578
static void _dump_resv_port_info(66,2808
static void _rebuild_port_array(84,3193
static void _make_step_resv(118,4187
static void _make_all_resv(141,4861
extern int reserve_port_config(163,5504
extern int resv_port_alloc(221,7050
extern void resv_port_free(290,9115

src/slurmctld/port_mgr.h,33
#define _HAVE_PORT_MGR_H41,2209

src/slurmctld/power_save.c,1342
#  define _GNU_SOURCE50,2676
#define _DEBUG	74,3227
#define PID_CNT	75,3246
#define MAX_SHUTDOWN_DELAY	76,3267
pid_t  child_pid[child_pid81,3485
time_t child_time[child_time82,3534
pthread_mutex_t power_mutex 84,3591
bool power_save_enabled 85,3648
int idle_time,87,3682
int idle_time, suspend_rate,87,3682
int idle_time, suspend_rate, resume_timeout,87,3682
int idle_time, suspend_rate, resume_timeout, resume_rate,87,3682
int idle_time, suspend_rate, resume_timeout, resume_rate, suspend_timeout;87,3682
char *suspend_prog suspend_prog88,3757
char *exc_nodes exc_nodes89,3805
time_t last_config 90,3848
uint16_t slurmd_timeout;91,3908
bitstr_t *exc_node_bitmap exc_node_bitmap93,3934
int   suspend_cnt,94,3997
int   suspend_cnt,   resume_cnt;94,3997
float suspend_cnt_f,95,4030
float suspend_cnt_f, resume_cnt_f;95,4030
static void _do_power_work(111,4568
static void _re_wake(237,8298
static void _do_resume(270,9088
static void _do_suspend(280,9274
static pid_t _run_prog(294,9592
static int  _reap_procs(346,10743
static int  _kill_procs(386,11717
static void _shutdown_power(415,12300
static void _clear_power_config(443,13024
static int _init_power_config(455,13330
static bool _valid_prog(550,15864
extern void start_power_mgr(581,16613
static void *_init_power_save(_init_power_save607,17265

src/slurmctld/preempt.c,840
typedef struct slurm_preempt_ops 54,2716
	List		(*find_jobs)find_jobs55,2751
	uint16_t	(*job_preempt_mode)job_preempt_mode56,2807
	bool		(*preemption_enabled)preemption_enabled57,2869
	bool		(*job_preempt_check)job_preempt_check58,2906
} slurm_preempt_ops_t;60,3005
static const char *syms[syms65,3092
static slurm_preempt_ops_t ops;72,3218
static plugin_context_t *g_context g_context73,3250
static pthread_mutex_t	    g_context_lock 74,3293
static bool init_run 75,3364
static void _preempt_signal(80,3629
extern int slurm_job_check_grace(90,4108
extern int slurm_preempt_init(137,5493
extern int slurm_preempt_fini(174,6471
extern List slurm_find_preemptable_jobs(191,6888
extern uint16_t slurm_job_preempt_mode(202,7114
extern bool slurm_preemption_enabled(213,7368
extern bool slurm_job_preempt_check(224,7585

src/slurmctld/preempt.h,47
#define __SLURM_CONTROLLER_PREEMPT_H__41,2251

src/slurmctld/proc_req.c,4212
static pthread_mutex_t throttle_mutex 95,3776
static pthread_cond_t throttle_cond 96,3843
void slurmctld_req 189,9158
static void _throttle_start(486,17731
static void _throttle_fini(499,18008
void _fill_ctld_conf(512,18387
extern bool validate_slurm_user(749,29605
extern bool validate_super_user(763,29940
extern bool validate_operator(779,30357
static void _kill_job_on_msg_fail(792,30727
static int _make_step_cred(806,31163
static void _slurm_rpc_allocate_resources(855,32845
static void _slurm_rpc_dump_conf(1013,38170
static void _slurm_rpc_dump_jobs(1054,39519
static void _slurm_rpc_dump_jobs_user(1102,41042
static void _slurm_rpc_dump_job_single(1143,42379
static void  _slurm_rpc_get_shares(1185,43655
static void  _slurm_rpc_get_priority_factors(1213,44587
static void _slurm_rpc_end_time(1241,45610
static void _slurm_rpc_dump_front_end(1277,46746
static void _slurm_rpc_dump_nodes(1322,48208
static void _slurm_rpc_dump_node_single(1380,50013
static void _slurm_rpc_dump_partitions(1435,51790
static void  _slurm_rpc_epilog_complete(1488,53598
static void _slurm_rpc_job_step_kill(1552,55628
static void _slurm_rpc_complete_job_allocation(1644,58489
static void _slurm_rpc_complete_prolog(1691,59985
static void _slurm_rpc_complete_batch_script(1731,61071
static void _slurm_rpc_job_step_create(1939,68092
static void _slurm_rpc_job_step_get_info(2038,71383
static bool _is_valid_will_run_user(2099,73301
static void _slurm_rpc_job_will_run(2122,73937
static void _slurm_rpc_node_registration(2208,76733
static void _slurm_rpc_job_alloc_info(2284,79380
static void _slurm_rpc_job_alloc_info_lite(2364,82404
static void _slurm_rpc_job_sbcast_cred(2475,86355
static void _slurm_rpc_ping(2542,88736
static void _slurm_rpc_reconfigure_controller(2557,89144
static void _slurm_rpc_takeover(2612,90850
static void _slurm_rpc_shutdown_controller(2633,91472
static void _slurm_rpc_shutdown_controller_immediate(2705,93755
static void _slurm_rpc_step_complete(2726,94460
static void _slurm_rpc_step_layout(2810,97122
static void _slurm_rpc_step_update(2873,99100
static void _slurm_rpc_submit_batch_job(2896,99736
static void _slurm_rpc_update_job(3087,106143
extern int slurm_drain_nodes(3133,107590
extern int slurm_fail_job(3159,108343
static void _slurm_rpc_update_front_end(3180,108853
static void _slurm_rpc_update_node(3224,110164
static void _slurm_rpc_update_partition(3271,111570
static void _slurm_rpc_delete_partition(3324,113241
static void _slurm_rpc_resv_create(3369,114590
static void _slurm_rpc_resv_update(3430,116434
static void _slurm_rpc_resv_delete(3476,117776
static void _slurm_rpc_resv_show(3524,119144
static void _slurm_rpc_update_block(3570,120702
static void _slurm_rpc_job_ready(3621,122215
static int _is_prolog_finished(3661,123406
static void  _slurm_rpc_block_info(3677,123819
static void _update_cred_key(3730,125510
inline static void _slurm_rpc_suspend(3736,125654
inline static void _slurm_rpc_requeue(3780,126784
inline static void  _slurm_rpc_checkpoint(3860,129068
inline static void  _slurm_rpc_checkpoint_comp(3944,131274
inline static void  _slurm_rpc_checkpoint_task_comp(3974,132213
xduparray(4008,133315
_xduparray2(4026,133700
static int _launch_batch_step(4055,134402
inline static void  _slurm_rpc_trigger_clear(4240,141293
inline static void  _slurm_rpc_trigger_get(4256,141703
inline static void  _slurm_rpc_trigger_set(4280,142466
inline static void  _slurm_rpc_trigger_pull(4297,142931
inline static void  _slurm_rpc_get_topo(4321,143621
inline static void  _slurm_rpc_job_notify(4362,145023
inline static void  _slurm_rpc_set_debug_flags(4395,146042
inline static void  _slurm_rpc_set_debug_level(4436,147297
inline static void  _slurm_rpc_set_schedlog_level(4492,149123
inline static void  _slurm_rpc_accounting_update_msg(4543,150899
inline static void _slurm_rpc_reboot_nodes(4569,151661
inline static void  _slurm_rpc_accounting_first_reg(4630,153427
inline static void  _slurm_rpc_accounting_register_ctld(4650,153900
inline static void _slurm_rpc_dump_spank(4670,154401
inline static void _slurm_rpc_dump_stats(4727,156226
_slurm_rpc_dump_licenses(4774,157553

src/slurmctld/proc_req.h,33
#define _HAVE_PROC_REQ_H40,2199

src/slurmctld/read_config.c,1573
bool slurmctld_init_db 94,3740
static void _stat_slurm_dirs(133,5449
static void _reorder_nodes_by_name(167,6484
static void _reorder_nodes_by_rank(208,7567
static void _build_bitmaps_pre_select(252,8684
static int _build_bitmaps(306,10433
static int _init_all_slurm_conf(408,13866
static int _handle_downnodes_line(428,14223
static void _handle_all_downnodes(477,15386
static int _build_all_nodeline_info(503,15970
extern void accounts_list_build(541,16942
extern void accounts_list_free(567,17711
extern void qos_list_build(579,17980
static int _build_single_partitionline_info(620,19182
static int _build_all_partitionline_info(785,24286
static void _sync_part_prio(802,24678
int read_slurm_conf(840,26029
static void _gres_reconfig(1090,34589
static int _restore_node_state(1116,35322
static void _purge_old_node_state(1269,40022
static int  _strcmp(1283,40377
static int  _restore_part_state(1295,40655
static void _purge_old_part_state(1558,50150
static int  _preserve_select_type_param(1573,50527
static int _update_preempt(1590,51005
static int  _preserve_plugins(1619,51746
static int _sync_nodes_to_jobs(1697,54045
static int _sync_nodes_to_comp_job(1725,54816
static int _sync_nodes_to_active_job(1759,55912
static void _sync_nodes_to_suspended_job(1829,58411
static void _validate_node_proc_count(1846,58835
static int _restore_job_dependencies(1887,60055
static void _acct_restore_active_jobs(1935,61489
_compare_hostnames(1967,62450
extern int dump_config_state_lite(2018,63657
extern int load_config_state_lite(2085,65414

src/slurmctld/read_config.h,36
#define _HAVE_READ_CONFIG_H41,2265

src/slurmctld/reservation.c,3526
#define _DEBUG	84,3216
#define ONE_YEAR	85,3234
#define RESV_MAGIC	86,3272
#define MAX_RESV_DELAY	90,3440
#define RESV_STATE_VERSION 95,3684
#define RESV_2_6_STATE_VERSION 96,3739
#define RESV_2_5_STATE_VERSION 97,3808
typedef struct resv_thread_args 99,3878
	char *script;script100,3912
	char *resv_name;resv_name101,3927
} resv_thread_args_t;102,3945
time_t    last_resv_update 104,3968
List      resv_list 105,4009
uint32_t  resv_over_run;106,4044
uint32_t  top_suffix 107,4069
uint32_t  cnodes_per_bp 109,4110
static void _advance_time(173,7207
static List _list_dup(189,7608
static slurmctld_resv_t *_copy_resv(_copy_resv210,8158
static void _restore_resv(269,10853
static void _del_resv_rec(355,13326
static int _find_resv_id(383,14061
static int _find_resv_name(396,14325
static void _dump_resv_req(408,14559
static void _generate_resv_id(458,15944
static void _generate_resv_name(470,16162
static bool _is_account_valid(498,16742
static int _append_assoc_list(516,17210
static int _set_assoc_list(543,17906
static int _post_resv_create(683,21950
static int _post_resv_delete(712,22701
static int _post_resv_update(732,23350
static int _build_account_list(816,25878
static int  _update_account_list(875,27380
static int _build_uid_list(1044,31857
static int _update_uid_list(1100,33244
static void _pack_resv(1282,37896
slurmctld_resv_t *_load_reservation_state(_load_reservation_state1378,40867
static bool _job_overlap(1492,45054
static bool _resv_overlap(1521,45765
static void _set_cpu_cnt(1579,47305
static List _license_validate2(1603,47871
extern int create_resv(1635,48953
extern void resv_fini(1986,60038
extern int update_resv(1995,60191
static bool _is_resv_used(2318,71286
static void _clear_job_resv(2338,71793
extern int delete_resv(2360,72420
extern slurmctld_resv_t *find_resv_name(find_resv_name2405,73533
extern void show_resv(2414,73782
extern int dump_all_resv_state(2471,75161
static bool _validate_one_reservation(2557,77558
static void _validate_all_reservations(2651,80483
static void _validate_node_choice(2706,81909
static int _open_resv_state_file(2758,83810
extern int load_all_resv_state(2795,85075
extern int validate_job_resv(2905,88144
static int  _resize_resv(2939,88975
static void _create_cluster_core_bitmap(3015,91572
static int  _select_nodes(3021,91785
static bitstr_t *_pick_idle_nodes(_pick_idle_nodes3165,95845
static void _check_job_compatibility(3246,98277
	full_node_bitmap 3273,98953
	i_node 3278,99078
static bitstr_t *_pick_idle_node_cnt(_pick_idle_node_cnt3334,100531
static int _valid_job_access_resv(3444,104020
extern int job_test_resv_now(3557,107312
extern void job_time_adj_resv(3593,108334
static int _license_cnt(3626,109565
static uint32_t _get_job_duration(3645,109960
extern int job_test_lic_resv(3681,111072
extern int job_test_resv(3729,112864
extern time_t find_resv_end(3915,118894
extern void begin_job_resv_check(3937,119451
extern int job_resv_check(3967,120148
static void _advance_resv_time(3994,120805
static void _free_script_arg(4021,121517
static void *_fork_script(_fork_script4030,121657
static void _run_script(4071,122420
extern void fini_job_resv_check(4112,123465
extern int send_resvs_to_accounting(4154,124601
extern int set_node_maint_mode(4177,125180
extern bool is_node_in_maint_reservation(4237,126811
extern void update_assocs_in_resvs(4260,127312
extern void update_part_nodes_in_resv(4275,127648
static void _set_nodes_flags(4302,128520

src/slurmctld/reservation.h,31
#define _RESERVATION_H40,2168

src/slurmctld/sched_plugin.c,1190
typedef struct slurm_sched_ops 56,2748
	int		(*schedule)schedule57,2781
	int		(*newalloc)newalloc58,2810
	int		(*freealloc)freealloc59,2854
	uint32_t	(*initial_priority)initial_priority60,2899
	void            (*job_is_pending)job_is_pending62,2972
	int		(*reconfig)reconfig63,3022
	void            (*partition_change)partition_change64,3051
	int		(*get_errno)get_errno65,3102
	char *		(*strerror)strerror66,3132
	void		(*job_requeue)job_requeue67,3163
	char *		(*get_conf)get_conf69,3233
} slurm_sched_ops_t;70,3265
static const char *syms[syms75,3348
static slurm_sched_ops_t ops;89,3701
static plugin_context_t	*g_context g_context90,3731
static pthread_mutex_t g_context_lock 91,3774
static bool init_run 92,3841
slurm_sched_init(103,4507
slurm_sched_fini(138,5324
slurm_sched_g_reconfig(161,5878
slurm_sched_g_schedule(177,6380
slurm_sched_g_newalloc(196,6958
slurm_sched_g_freealloc(214,7536
slurm_sched_g_initial_priority(233,8122
slurm_sched_g_job_is_pending(246,8567
slurm_sched_g_partition_change(258,8918
slurm_sched_g_get_errno(274,9417
slurm_sched_g_strerror(286,9780
slurm_sched_g_requeue(298,10145
slurm_sched_g_get_conf(310,10569

src/slurmctld/sched_plugin.h,56
#define __SLURM_CONTROLLER_SCHED_PLUGIN_API_H__40,2202

src/slurmctld/slurmctld.h,14000
#define _HAVE_SLURMCTLD_H42,2339
#define MAX_JOB_ARRAY_VALUE 90,3656
#define MAX_SERVER_THREADS 97,3900
#define	PERIODIC_CHECKPOINT	102,4038
#define	RPC_RETRY_INTERVAL	107,4182
#define	PERIODIC_SCHEDULE	114,4415
#define	PERIODIC_TIMEOUT	119,4555
#define PURGE_JOB_INTERVAL 125,4726
#define TRIGGER_INTERVAL 130,4857
#define PERIODIC_NODE_ACCT 135,4996
#define GROUP_FILE	140,5116
#define CONTROL_TIMEOUT 145,5256
typedef struct slurmctld_config 152,5522
	int	daemonize;153,5556
	bool	resume_backup;154,5572
	time_t	boot_time;155,5593
	time_t	shutdown_time;156,5612
	int	server_thread_count;157,5635
	slurm_cred_ctx_t cred_ctx;159,5662
	pthread_mutex_t thread_count_lock;161,5711
	pthread_t thread_id_main;162,5747
	pthread_t thread_id_save;163,5774
	pthread_t thread_id_sig;164,5801
	pthread_t thread_id_power;165,5827
	pthread_t thread_id_rpc;166,5855
	int thread_count_lock;168,5887
	int thread_id_main;169,5911
	int thread_id_save;170,5932
	int thread_id_sig;171,5953
	int thread_id_power;172,5973
	int thread_id_rpc;173,5995
} slurmctld_config_t;175,6022
typedef struct diag_stats 178,6077
	int proc_req_threads;179,6105
	int proc_req_raw;180,6128
	uint32_t schedule_cycle_max;182,6148
	uint32_t schedule_cycle_last;183,6178
	uint32_t schedule_cycle_sum;184,6209
	uint32_t schedule_cycle_counter;185,6239
	uint32_t schedule_cycle_depth;186,6273
	uint32_t schedule_queue_len;187,6305
	uint32_t jobs_submitted;189,6336
	uint32_t jobs_started;190,6362
	uint32_t jobs_completed;191,6386
	uint32_t jobs_canceled;192,6412
	uint32_t jobs_failed;193,6437
	uint32_t backfilled_jobs;195,6461
	uint32_t last_backfilled_jobs;196,6488
	uint32_t bf_cycle_counter;197,6520
	uint32_t bf_cycle_last;198,6548
	uint32_t bf_cycle_max;199,6573
	uint32_t bf_cycle_sum;200,6597
	uint32_t bf_last_depth;201,6621
	uint32_t bf_last_depth_try;202,6646
	uint32_t bf_depth_sum;203,6675
	uint32_t bf_depth_try_sum;204,6699
	uint32_t bf_queue_len;205,6727
	uint32_t bf_queue_len_sum;206,6751
	time_t   bf_when_last_cycle;207,6779
	uint32_t bf_active;208,6809
} diag_stats_t;209,6830
#define FRONT_END_MAGIC 255,9232
typedef struct front_end_record 257,9268
	gid_t *allow_gids;allow_gids258,9302
	char *allow_groups;allow_groups259,9368
	uid_t *allow_uids;allow_uids260,9417
	char *allow_users;allow_users261,9482
	time_t boot_time;262,9529
	char *comm_name;comm_name264,9604
	gid_t *deny_gids;deny_gids265,9662
	char *deny_groups;deny_groups266,9726
	uid_t *deny_uids;deny_uids267,9773
	char *deny_users;deny_users268,9836
	uint32_t job_cnt_comp;269,9881
	uint16_t job_cnt_run;270,9945
	time_t last_response;271,10005
	uint32_t magic;272,10062
	char *name;name273,10123
	uint16_t node_state;274,10163
	bool not_responding;277,10276
	slurm_addr_t slurm_addr;279,10363
	uint16_t port;280,10411
	uint16_t protocol_version;281,10458
	char *reason;reason282,10513
	time_t reason_time;283,10566
	uint32_t reason_uid;285,10662
	time_t slurmd_start_time;287,10756
	char *version;version288,10812
} front_end_record_t;289,10850
#define PART_MAGIC 298,11232
struct part_record 300,11263
	char *allow_accounts;allow_accounts301,11284
	char **allow_account_array;allow_account_array303,11373
	char *allow_alloc_nodes;allow_alloc_nodes305,11456
	char *allow_groups;allow_groups308,11569
	uid_t *allow_uids;allow_uids310,11654
	char *allow_qos;allow_qos311,11721
	bitstr_t *allow_qos_bitstr;allow_qos_bitstr313,11800
	char *alternate;alternate315,11907
	uint32_t def_mem_per_cpu;316,11960
	uint32_t default_time;317,12029
	char *deny_accounts;deny_accounts318,12087
	char **deny_account_array;deny_account_array319,12155
	char *deny_qos;deny_qos320,12229
	bitstr_t *deny_qos_bitstr;deny_qos_bitstr321,12288
	uint16_t flags;323,12394
	uint32_t grace_time;324,12445
	uint32_t magic;325,12511
	uint32_t max_cpus_per_node;326,12571
	uint32_t max_mem_per_cpu;327,12638
	uint32_t max_nodes;328,12707
	uint32_t max_nodes_orig;329,12754
	uint32_t max_offset;330,12822
	uint16_t max_share;331,12875
	uint32_t max_time;332,12934
	uint32_t min_nodes;333,12980
	uint32_t min_offset;334,13015
	uint32_t min_nodes_orig;335,13068
	char *name;name336,13136
	bitstr_t *node_bitmap;node_bitmap337,13178
	char *nodes;nodes338,13237
	double   norm_priority;339,13294
	uint16_t preempt_mode;341,13385
	uint16_t priority;342,13451
	uint16_t state_up;343,13506
	uint32_t total_nodes;344,13566
	uint32_t total_cpus;345,13634
	uint16_t cr_type;346,13700
typedef struct slurmctld_resv 360,14419
	char *accounts;accounts361,14451
	int account_cnt;362,14510
	char **account_list;account_list363,14569
	bool account_not;364,14631
	char *assoc_list;assoc_list365,14696
	uint32_t cpu_cnt;366,14744
	bitstr_t *core_bitmap;core_bitmap367,14794
	uint32_t duration;368,14850
	time_t end_time;370,14945
	char *features;features371,14994
	uint32_t flags;372,15042
	bool full_nodes;373,15096
	uint32_t job_pend_cnt;374,15160
	uint32_t job_run_cnt;375,15214
	List license_list;376,15267
	char *licenses;licenses377,15322
	uint16_t magic;378,15372
	bool flags_set_node;379,15422
	char *name;name381,15518
	bitstr_t *node_bitmap;node_bitmap382,15560
	uint32_t node_cnt;383,15616
	char *node_list;node_list384,15667
	char *partition;partition385,15721
	struct part_record *part_ptr;part_ptr386,15775
	uint32_t resv_id;387,15838
	bool run_epilog;388,15899
	bool run_prolog;389,15955
	time_t start_time;390,16011
	time_t start_time_first;391,16064
	time_t start_time_prev;392,16130
	char *users;users395,16257
	int user_cnt;396,16310
	uid_t *user_list;user_list397,16364
	bool user_not;398,16421
} slurmctld_resv_t;399,16481
#define DETAILS_MAGIC	406,16774
#define JOB_MAGIC	407,16806
#define STEP_MAGIC	408,16835
#define FEATURE_OP_OR 410,16866
#define FEATURE_OP_AND 411,16892
#define FEATURE_OP_XOR 412,16918
#define FEATURE_OP_XAND 413,16944
#define FEATURE_OP_END 414,16970
struct feature_record 415,17030
	char *name;name416,17054
	uint16_t count;417,17091
	uint8_t op_code;418,17149
struct job_details 423,17303
	char *acctg_freq;acctg_freq424,17324
	uint32_t argc;425,17378
	char **argv;argv426,17425
	time_t begin_time;427,17480
	char *ckpt_dir;ckpt_dir430,17617
	uint16_t contiguous;432,17687
	uint16_t core_spec;433,17749
	char *cpu_bind;cpu_bind434,17800
	uint16_t cpu_bind_type;435,17854
	uint16_t cpus_per_task;436,17906
	List depend_list;438,17990
	char *dependency;dependency439,18044
	char *orig_dependency;orig_dependency440,18090
	uint16_t env_cnt;441,18152
	char **env_sup;env_sup442,18206
	bitstr_t *exc_node_bitmap;exc_node_bitmap444,18289
	char *exc_nodes;exc_nodes445,18348
	uint32_t expanding_jobid;446,18388
	List feature_list;447,18446
	char *features;features449,18516
	uint32_t magic;450,18559
	uint32_t max_cpus;451,18616
	uint32_t max_nodes;452,18666
	multi_core_data_t *mc_ptr;mc_ptr453,18718
	char *mem_bind;mem_bind454,18777
	uint16_t mem_bind_type;455,18831
	uint32_t min_cpus;456,18883
	uint32_t min_nodes;457,18933
	uint16_t nice;458,18985
	uint16_t ntasks_per_node;460,19069
	uint32_t num_tasks;461,19131
	uint8_t open_mode;462,19184
	uint8_t overcommit;463,19242
	uint16_t plane_size;464,19303
	uint32_t pn_min_cpus;467,19409
	uint32_t pn_min_memory;468,19467
	uint32_t pn_min_tmp_disk;471,19586
	uint8_t prolog_running;472,19649
	uint32_t reserved_resources;474,19727
	bitstr_t *req_node_bitmap;req_node_bitmap476,19839
	uint16_t *req_node_layout;req_node_layout477,19898
	time_t preempt_start_time;478,19963
	char *req_nodes;req_nodes480,20049
	uint16_t requeue;481,20089
	char *restart_dir;restart_dir482,20144
	uint8_t share_res;484,20226
	char *std_err;std_err486,20308
	char *std_in;std_in487,20362
	char *std_out;std_out488,20414
	time_t submit_time;489,20468
	uint16_t task_dist;490,20515
	uint32_t usable_nodes;493,20634
	uint8_t whole_node;494,20697
	char *work_dir;work_dir495,20758
struct job_record 498,20817
	char    *account;account499,20837
	char	*alias_list;alias_list500,20888
	char    *alloc_node;alloc_node501,20943
	uint16_t alloc_resp_port;502,21005
	uint32_t alloc_sid;503,21072
	uint32_t array_job_id;504,21132
	uint32_t array_task_id;505,21197
	uint32_t assoc_id;506,21252
	void    *assoc_ptr;assoc_ptr507,21319
	uint16_t batch_flag;511,21492
	char *batch_host;batch_host513,21599
	check_jobinfo_t check_job;514,21653
	uint16_t ckpt_interval;515,21719
	time_t ckpt_time;516,21782
	char *comment;comment518,21860
	uint32_t cpu_cnt;519,21902
	uint16_t cr_enabled;523,22054
	uint32_t db_index;531,22398
	uint32_t derived_ec;533,22476
	struct job_details *details;details534,22540
	uint16_t direct_set_prio;535,22588
	time_t end_time;538,22719
	bool epilog_running;540,22792
	uint32_t exit_code;541,22856
	front_end_record_t *front_end_ptr;front_end_ptr543,22934
	char *gres;gres545,23027
	List gres_list;546,23083
	char *gres_alloc;gres_alloc547,23143
	char *gres_req;gres_req549,23238
	char *gres_used;gres_used551,23332
	uint32_t group_id;553,23427
	uint32_t job_id;554,23476
	struct job_record *job_next;job_next555,23508
	struct job_record *job_array_next_j;job_array_next_j556,23576
	struct job_record *job_array_next_t;job_array_next_t557,23652
	job_resources_t *job_resrcs;job_resrcs558,23729
	uint16_t job_state;559,23792
	uint16_t kill_on_node_fail;560,23837
	char *licenses;licenses562,23922
	List license_list;563,23976
	uint16_t limit_set_max_cpus;564,24031
	uint16_t limit_set_max_nodes;566,24126
	uint16_t limit_set_min_cpus;568,24223
	uint16_t limit_set_min_nodes;570,24318
	uint16_t limit_set_pn_min_memory;572,24415
	uint16_t limit_set_time;574,24520
	uint16_t limit_set_qos;576,24617
	uint16_t mail_type;578,24712
	char *mail_user;mail_user579,24766
	uint32_t magic;580,24823
	char *name;name581,24880
	char *network;network582,24917
	uint32_t next_step_id;583,24973
	char *nodes;nodes584,25028
	slurm_addr_t *node_addr;node_addr585,25081
	bitstr_t *node_bitmap;node_bitmap587,25161
	bitstr_t *node_bitmap_cg;node_bitmap_cg588,25225
	uint32_t node_cnt;589,25289
	char *nodes_completing;nodes_completing591,25366
	uint16_t other_port;594,25504
	char *partition;partition595,25564
	List part_ptr_list;596,25614
	bool part_nodes_missing;597,25677
	struct part_record *part_ptr;part_ptr599,25764
	time_t pre_sus_time;600,25833
	time_t preempt_time;601,25897
	uint32_t priority;602,25953
	uint32_t *priority_array;priority_array604,26048
	priority_factors_object_t *prio_factors;prio_factors605,26106
	uint32_t profile;607,26199
	uint32_t qos_id;608,26252
	void *qos_ptr;qos_ptr609,26299
	uint16_t restart_cnt;615,26514
	time_t resize_time;616,26562
	uint32_t resv_id;617,26617
	char *resv_name;resv_name618,26658
	struct slurmctld_resv *resv_ptr;resv_ptr619,26700
	uint32_t requid;620,26769
	char *resp_host;resp_host621,26816
	dynamic_plugin_data_t *select_jobinfo;select_jobinfo622,26870
	char **spank_job_env;spank_job_env623,26937
	uint32_t spank_job_env_size;626,27063
	time_t start_time;627,27126
	char *state_desc;state_desc629,27203
	uint16_t state_reason;630,27263
	List step_list;632,27370
	time_t suspend_time;633,27415
	time_t time_last_active;634,27479
	uint32_t time_limit;635,27537
	uint32_t time_min;637,27640
	time_t tot_sus_time;640,27755
	uint32_t total_cpus;641,27812
	uint32_t total_nodes;643,27890
	uint32_t user_id;645,27969
	uint16_t wait_all_nodes;646,28016
	uint16_t warn_flags;648,28115
	uint16_t warn_signal;649,28169
	uint16_t warn_time;650,28230
	char *wckey;wckey652,28309
	uint32_t req_switch;655,28389
	uint32_t wait4switch;656,28460
	bool     best_switch;657,28531
	time_t wait4switch_start;658,28602
#define SLURM_DEPEND_AFTER	662,28753
#define SLURM_DEPEND_AFTER_ANY	663,28806
#define SLURM_DEPEND_AFTER_NOT_OK	664,28866
#define SLURM_DEPEND_AFTER_OK	665,28924
#define SLURM_DEPEND_SINGLETON	667,29005
#define SLURM_DEPEND_EXPAND	669,29096
struct	depend_spec 670,29152
	uint32_t	array_task_id;671,29173
	uint16_t	depend_type;672,29233
	uint32_t	job_id;673,29282
	struct job_record *job_ptr;job_ptr674,29320
struct 	step_record 677,29379
	uint16_t batch_step;678,29401
	uint16_t ckpt_interval;679,29463
	check_jobinfo_t check_job;680,29526
	char *ckpt_dir;ckpt_dir681,29587
	time_t ckpt_time;682,29643
	bitstr_t *core_bitmap_job;core_bitmap_job683,29693
	uint32_t cpu_count;686,29838
	uint32_t cpu_freq;687,29887
	uint16_t cpus_per_task;688,29938
	uint16_t cyclic_alloc;689,29994
	uint16_t exclusive;691,30077
	uint32_t exit_code;692,30138
	bitstr_t *exit_node_bitmap;exit_node_bitmap693,30198
	ext_sensors_data_t *ext_sensors;ext_sensors694,30256
	char *gres;gres695,30325
	List gres_list;696,30373
	char *host;host697,30433
	struct job_record* job_ptr;698,30483
	jobacctinfo_t *jobacct;jobacct699,30553
	uint32_t pn_min_memory;701,30639
	char *name;name704,30780
	char *network;network705,30818
	uint8_t no_kill;706,30871
	uint16_t port;707,30925
	time_t pre_sus_time;708,30978
	int *resv_port_array;resv_port_array709,31043
	uint16_t resv_port_cnt;710,31095
	char *resv_ports;resv_ports711,31160
	uint32_t requid;712,31209
	time_t start_time;713,31256
	uint32_t time_limit;714,31310
	dynamic_plugin_data_t *select_jobinfo;select_jobinfo715,31368
	uint16_t state;716,31435
	uint32_t step_id;717,31494
	slurm_step_layout_t *step_layout;step_layout718,31532
	bitstr_t *step_node_bitmap;step_node_bitmap720,31627
	switch_jobinfo_t *switch_job;switch_job725,31845
	time_t time_last_active;726,31905
	time_t tot_sus_time;727,31970
enum select_plugindata_info 742,32585
	SELECT_CR_PLUGIN,743,32615
	SELECT_BITMAP,744,32672
	SELECT_ALLOC_CPUS,745,32725
	SELECT_ALLOC_LPS,746,32791
	SELECT_AVAIL_MEMORY,747,32857
	SELECT_STATIC_PART,748,32923
	SELECT_CONFIG_INFO 750,33019

src/slurmctld/slurmctld_plugstack.c,544
slurm_nonstop_ops_t nonstop_ops 74,2881
typedef struct slurmctld_plugstack_ops 76,2938
} slurmctld_plugstack_ops_t;78,2999
static const char *syms[syms83,3094
static int g_context_cnt 87,3148
static slurmctld_plugstack_ops_t *ops ops88,3179
static plugin_context_t **g_context g_context89,3225
static char *slurmctld_plugstack_list slurmctld_plugstack_list90,3269
static pthread_mutex_t g_context_lock 91,3315
static bool init_run 92,3382
extern int slurmctld_plugstack_init(99,3495
extern int slurmctld_plugstack_fini(159,4938

src/slurmctld/slurmctld_plugstack.h,224
#define _SLURMCTLD_PLUGSTACK_H38,2042
typedef struct slurm_nonstop_ops 46,2345
	void		(*job_begin)job_begin47,2380
	void		(*job_fini)job_fini48,2432
	void		(*node_fail)node_fail49,2483
} slurm_nonstop_ops_t;51,2571

src/slurmctld/srun_comm.c,608
#define SRUN_LAUNCH_MSG 54,2513
static void _srun_agent_launch(60,2701
extern void srun_allocate 78,3220
extern void srun_allocate_abort(126,5022
extern void srun_node_fail 149,5710
extern void srun_ping 210,7739
extern void srun_step_timeout(251,8951
extern void srun_timeout 275,9674
extern int srun_user_message(307,10635
extern void srun_job_complete 367,12719
extern bool srun_job_suspend 401,13828
extern void srun_step_complete 426,14542
extern void srun_step_missing 449,15312
extern void srun_step_signal 474,16135
extern void srun_exec(498,16921
extern void srun_response(531,17941

src/slurmctld/srun_comm.h,34
#define _HAVE_SRUN_COMM_H41,2246

src/slurmctld/state_save.c,624
#define SAVE_MAX_WAIT	56,2642
static pthread_mutex_t state_save_lock 59,2674
static pthread_cond_t  state_save_cond 60,2742
static int save_jobs 61,2809
static int save_front_end 62,2867
static bool run_save_thread 63,2932
extern int fsync_and_close(68,3114
extern void schedule_front_end_save(98,3848
extern void schedule_job_save(107,4077
extern void schedule_node_save(116,4296
extern void schedule_part_save(125,4522
extern void schedule_resv_save(134,4750
extern void schedule_trigger_save(143,4973
extern void shutdown_state_save(152,5202
extern void *slurmctld_state_save(slurmctld_state_save167,5628

src/slurmctld/state_save.h,40
#define _SLURMCTLD_STATE_SAVE_H41,2268

src/slurmctld/statistics.c,69
extern void pack_all_stat(56,2398
extern void reset_stats(130,4858

src/slurmctld/step_mgr.c,2077
#define MAX_RETRIES 79,3245
static int  _opt_cpu_cnt(111,4798
static int _opt_node_cnt(138,5485
static struct step_record * _create_step_record(163,6255
static void _build_pending_step(191,7152
static void _internal_step_complete(211,7691
extern void delete_step_records 238,8589
static void _free_step_rec(264,9323
delete_step_record 306,10714
dump_step_desc(345,11647
find_step_record(384,13211
int job_step_signal(413,14036
void signal_step_tasks(520,17134
void signal_step_tasks_on_node(581,18989
static void _wake_pending_steps(619,20369
int job_step_complete(659,21796
static bitstr_t *_pick_step_nodes_cpus(_pick_step_nodes_cpus696,22936
_pick_step_nodes 811,26549
static int _count_cpus(1589,51369
static void _pick_step_cores(1632,52565
static int _get_node_cpus(1719,55151
extern void step_alloc_lps(1732,55455
static void _dump_step_layout(1838,58920
static void _step_dealloc_lps(1875,59988
static int _test_strlen(1969,62984
step_create(1994,63701
extern slurm_step_layout_t *step_layout_create(step_layout_create2373,76195
static void _pack_ctld_job_step_info(2519,80944
extern int pack_ctld_job_step_info_response_msg(2669,86203
extern int kill_step_on_node(2743,88355
extern int job_step_checkpoint(2782,89599
extern int job_step_checkpoint_comp(2861,91906
extern int job_step_checkpoint_task_comp(2919,93488
extern int step_partial_comp(2979,95131
static hostlist_t _step_range_to_hostlist(3114,99533
static int _step_hostname_to_inx(3136,100094
extern int step_epilog_complete(3154,100495
_suspend_job_step(3200,101735
suspend_job_step(3216,102123
_resume_job_step(3232,102544
resume_job_step(3247,102932
extern void dump_job_step_state(3270,103673
extern int load_step_state(3338,105928
extern void step_checkpoint(3594,114136
static void _signal_step_timelimit(3688,116760
check_job_step_time_limit 3772,119047
static bool _is_mem_resv(3805,120044
extern int update_step(3823,120458
static int _get_node_cores(3948,124403
extern void rebuild_step_bitmaps(3969,124939
extern int post_job_step(4030,126876

src/slurmctld/trigger_mgr.c,4025
#define MAX_PROG_TIME 75,2985
#define TRIGGER_STATE_VERSION 78,3124
#define TRIGGER_14_03_STATE_VERSION 79,3170
#define TRIGGER_2_6_STATE_VERSION 80,3242
#define TRIGGER_2_5_STATE_VERSION 81,3312
List trigger_list;83,3383
uint32_t next_trigger_id 84,3402
static pthread_mutex_t trigger_mutex 85,3432
bitstr_t *trigger_down_front_end_bitmap trigger_down_front_end_bitmap86,3498
bitstr_t *trigger_up_front_end_bitmap trigger_up_front_end_bitmap87,3546
bitstr_t *trigger_down_nodes_bitmap trigger_down_nodes_bitmap88,3592
bitstr_t *trigger_drained_nodes_bitmap trigger_drained_nodes_bitmap89,3636
bitstr_t *trigger_fail_nodes_bitmap trigger_fail_nodes_bitmap90,3683
bitstr_t *trigger_up_nodes_bitmap trigger_up_nodes_bitmap91,3727
static bool trigger_block_err 92,3771
static bool trigger_node_reconfig 93,3810
static bool trigger_pri_ctld_fail 94,3853
static bool trigger_pri_ctld_res_op 95,3896
static bool trigger_pri_ctld_res_ctrl 96,3941
static bool trigger_pri_ctld_acct_buffer_full 97,3988
static bool trigger_bu_ctld_fail 98,4043
static bool trigger_bu_ctld_res_op 99,4085
static bool trigger_bu_ctld_as_ctrl 100,4129
static bool trigger_pri_dbd_fail 101,4174
static bool trigger_pri_dbd_res_op 102,4216
static bool trigger_pri_db_fail 103,4260
static bool trigger_pri_db_res_op 104,4301
uint8_t ctld_failure 107,4400
uint8_t bu_ctld_failure 108,4426
uint8_t db_failure 109,4455
uint8_t dbd_failure 110,4479
typedef struct trig_mgr_info 112,4505
	uint32_t child_pid;113,4536
	uint16_t flags;114,4584
	uint32_t trig_id;115,4623
	uint16_t res_type;116,4659
	char *   res_id;117,4704
	bitstr_t *nodes_bitmap;nodes_bitmap118,4757
	uint32_t job_id;119,4830
	struct job_record *job_ptr;job_ptr120,4877
	uint32_t trig_type;121,4950
	time_t   trig_time;122,4992
	uint32_t user_id;123,5061
	uint32_t group_id;124,5110
	char *   program;125,5152
	uint8_t  state;126,5196
	bitstr_t *orig_bitmap;orig_bitmap129,5325
	char *   orig_res_id;130,5397
	time_t   orig_time;131,5464
} trig_mgr_info_t;132,5533
void _trig_del(135,5582
static int _trig_offset(145,5816
static void _dump_trigger_msg(153,5920
static int _match_all_triggers(180,6667
static bool _validate_trigger(186,6765
extern int trigger_pull(213,7390
extern int trigger_clear(279,9106
extern trigger_info_msg_t * trigger_get(334,10586
extern int trigger_set(377,12017
extern void trigger_front_end_down(479,15104
extern void trigger_front_end_up(490,15451
extern void trigger_node_down(501,15790
extern void trigger_node_drained(512,16115
extern void trigger_node_failing(523,16452
extern void trigger_node_up(535,16781
extern void trigger_reconfig(546,17098
extern void trigger_primary_ctld_fail(570,18011
extern void trigger_primary_ctld_res_op(580,18213
extern void trigger_primary_ctld_res_ctrl(588,18388
extern void trigger_primary_ctld_acct_full(595,18548
extern void trigger_backup_ctld_fail(602,18717
extern void trigger_backup_ctld_res_op(612,18923
extern void trigger_backup_ctld_as_ctrl(620,19099
extern void trigger_primary_dbd_fail(627,19255
extern void trigger_primary_dbd_res_op(637,19453
extern void trigger_primary_db_fail(645,19625
extern void trigger_primary_db_res_op(655,19819
extern void trigger_block_error(663,19990
static void _dump_trigger_state(670,20132
static int _load_trigger_state(693,21009
extern int trigger_state_save(769,23664
static int _open_resv_state_file(859,26309
extern void trigger_state_restore(886,27111
static bool _front_end_job_test(965,29149
static void _trigger_job_event(985,29626
static void _trigger_front_end_event(1089,32597
static void _trigger_node_event(1134,33999
static void _trigger_slurmctld_event(1309,39524
static void _trigger_slurmdbd_event(1398,42595
static void _trigger_database_event(1425,43506
static void _trigger_run_program(1458,44782
static void _clear_event_triggers(1515,46054
static void _trigger_clone(1553,47259
extern void trigger_process(1580,48188
extern void trigger_fini(1684,51375

src/slurmctld/trigger_mgr.h,33
#define _HAVE_TRIGGERS_H41,2239

src/srun_cr/srun_cr.c,897
static char *cr_run_path cr_run_path67,2641
static char *srun_path srun_path68,2693
static char **srun_argv srun_argv71,2768
static pid_t srun_pid 72,2800
static uint32_t jobid 74,2828
static uint32_t stepid 75,2855
static char *nodelist nodelist76,2892
static char cr_sock_addr[cr_sock_addr78,2923
static int listen_fd 79,2953
static int step_launched 81,2981
static pthread_mutex_t step_launch_mutex 82,3011
static pthread_cond_t step_launch_cond 83,3081
static cr_client_id_t cr_id 85,3149
signal_self(95,3460
signal_child 115,3876
mimic_exit(138,4492
on_child_exit(158,4978
_slurm_debug_env_val 176,5392
update_env(193,5675
init_srun_argv(204,5844
remove_listen_socket(223,6193
create_listen_socket(234,6406
fork_exec_srun(283,7481
get_step_image_dir(328,8368
cr_callback(363,9100
main(420,10380
_wait_for_srun_connect(504,12461
_read_info_from_srun(531,12867

src/squeue/opts.c,556
#  define _GNU_SOURCE42,2305
#define OPT_LONG_HELP 69,2792
#define OPT_LONG_USAGE 70,2821
#define OPT_LONG_HIDE 71,2850
#define OPT_LONG_START 72,2879
parse_command_line(93,3535
_parse_state(423,12427
extern int parse_format(459,13470
_get_prefix(844,24146
_parse_token(872,24879
_print_options(896,25343
_build_job_list(1013,28758
_build_str_list(1053,29773
_build_state_list(1078,30398
_build_all_states_list(1109,31127
_build_step_list(1137,31823
_build_user_list(1185,33216
static void _usage(1211,33826
static void _help(1221,34193

src/squeue/print.c,2925
int print_steps(70,3189
int print_jobs_array(86,3520
int print_steps_array(113,4094
static bool _merge_job_array(148,4852
static int _print_str(189,5907
int _print_nodes(220,6537
int _print_int(233,6822
int _print_secs(242,6996
int _print_time(271,7744
int print_job_from_format(286,8194
job_format_add_function(319,8878
int _print_job_array_job_id(335,9295
int _print_job_array_task_id(352,9779
int _print_job_batch_host(369,10267
int _print_job_core_spec(385,10715
int _print_job_job_id(394,10976
int _print_job_job_id2(437,12366
int _print_job_partition(451,12740
int _print_job_prefix(465,13119
int _print_job_reason(472,13261
int _print_job_name(490,13751
int _print_job_licenses(502,14034
int _print_job_wckey(514,14329
int _print_job_user_id(526,14615
int _print_job_user_name(537,14903
int _print_job_gres(551,15260
int _print_job_group_id(562,15542
int _print_job_group_name(573,15833
int _print_job_job_state(591,16322
int _print_job_job_state_compact(603,16639
int _print_job_time_left(616,16974
int _print_job_time_limit(634,17510
int _print_job_time_used(650,17989
long job_time_used(662,18293
int _print_job_time_start(683,18801
int _print_job_time_end(695,19104
int _print_job_priority(709,19514
int _print_job_priority_long(725,19961
int _print_job_nodes(739,20326
int _print_job_reason_list(769,21057
int _print_job_node_inx(808,22154
int _print_job_num_cpus(829,22684
int _print_job_num_nodes(848,23209
static int _get_node_cnt(878,24005
int _print_job_num_sct(912,25058
static int _nodes_in_list(951,26059
int _print_job_shared(959,26237
int _print_job_contiguous(984,26784
int _print_pn_min_cpus(998,27119
int _print_sockets(1015,27548
int _print_cores(1035,28076
int _print_threads(1055,28600
int _print_pn_min_memory(1075,29128
_print_pn_min_tmp_disk(1098,29683
int _print_job_req_nodes(1116,30122
int _print_job_exc_nodes(1128,30449
_print_job_req_node_inx(1141,30780
_print_job_exc_node_inx(1164,31332
int _print_job_features(1186,31880
int _print_job_account(1198,32201
int _print_job_comment(1210,32520
int _print_job_dependency(1222,32839
int _print_job_qos(1236,33239
int _print_job_select_jobinfo(1248,33546
int _print_job_reservation(1266,34043
int _print_job_command(1278,34372
int _print_job_work_dir(1290,34659
int print_step_from_format(1306,35137
step_format_add_function(1338,35837
int _print_step_id(1356,36289
int _print_step_partition(1386,37164
int _print_step_prefix(1402,37557
int _print_step_user_id(1410,37715
int _print_step_user_name(1422,38015
int _print_step_time_limit(1437,38386
int _print_step_time_start(1451,38790
int _print_step_time_used(1463,39103
int _print_step_name(1477,39442
int _print_step_nodes(1489,39736
int _print_step_num_tasks(1521,40480
int _print_step_gres(1533,40787
static int _filter_job(1547,41192
static int _filter_step(1702,44821
int _print_com_invalid(1787,46840

src/squeue/print.h,3277
#define _SQUEUE_PRINT_H_41,2232
#define FORMAT_STRING_SIZE 47,2314
typedef struct job_format 52,2525
	int (*function)function53,2553
	uint32_t width;54,2604
	bool right_justify;55,2621
	char *suffix;suffix56,2642
} job_format_t;57,2657
typedef struct step_format 59,2674
	int (*function)function60,2703
	uint32_t width;61,2759
	bool right_justify;62,2776
	char *suffix;suffix63,2797
} step_format_t;64,2812
#define job_format_add_array_job_id(83,3561
#define job_format_add_array_task_id(85,3694
#define job_format_add_batch_host(87,3829
#define job_format_add_core_spec(89,3958
#define job_format_add_job_id(91,4085
#define job_format_add_job_id2(93,4206
#define job_format_add_partition(95,4329
#define job_format_add_prefix(97,4456
#define job_format_add_reason(99,4571
#define job_format_add_reason_list(101,4699
#define job_format_add_name(103,4830
#define job_format_add_licenses(105,4947
#define job_format_add_wckey(107,5072
#define job_format_add_user_name(109,5191
#define job_format_add_user_id(111,5318
#define job_format_add_gres(113,5441
#define job_format_add_group_name(115,5565
#define job_format_add_group_id(117,5701
#define job_format_add_job_state(119,5833
#define job_format_add_job_state_compact(121,5960
#define job_format_add_time_left(124,6132
#define job_format_add_time_limit(127,6287
#define job_format_add_time_used(130,6444
#define job_format_add_time_start(132,6571
#define job_format_add_time_end(134,6700
#define job_format_add_priority(136,6825
#define job_format_add_priority_long(138,6950
#define job_format_add_nodes(140,7085
#define job_format_add_node_inx(142,7204
#define job_format_add_num_cpus(144,7329
#define job_format_add_num_nodes(146,7454
#define job_format_add_num_sct(148,7581
#define job_format_add_shared(150,7704
#define job_format_add_contiguous(152,7825
#define job_format_add_min_cpus(154,7954
#define job_format_add_sockets(156,8078
#define job_format_add_cores(158,8197
#define job_format_add_threads(160,8312
#define job_format_add_min_memory(162,8431
#define job_format_add_min_tmp_disk(164,8559
#define job_format_add_req_nodes(166,8691
#define job_format_add_exc_nodes(168,8818
#define job_format_add_req_node_inx(170,8945
#define job_format_add_exc_node_inx(172,9078
#define job_format_add_features(174,9211
#define job_format_add_account(176,9336
#define job_format_add_dependency(178,9459
#define job_format_add_qos(180,9588
#define job_format_add_select_jobinfo(182,9703
#define job_format_add_comment(184,9840
#define job_format_add_reservation(186,9963
#define job_format_add_command(188,10094
#define job_format_add_work_dir(190,10217
#define job_format_add_invalid(192,10342
#define step_format_add_id(312,15864
#define step_format_add_partition(314,15980
#define step_format_add_prefix(316,16110
#define step_format_add_user_id(318,16228
#define step_format_add_user_name(320,16354
#define step_format_add_time_limit(322,16484
#define step_format_add_time_start(324,16616
#define step_format_add_time_used(326,16748
#define step_format_add_nodes(328,16878
#define step_format_add_name(330,17000
#define step_format_add_num_tasks(332,17120
#define step_format_add_gres(334,17250
#define step_format_add_invalid(336,17370

src/squeue/sort.c,1922
#define PURE_ALPHA_SORT 50,2468
static bool reverse_order;52,2495
static time_t now;94,4888
void sort_job_list(100,5094
void sort_jobs_by_start_time 188,8128
void sort_step_list(195,8250
static void _get_job_info_from_void(234,9581
static void _get_step_info_from_void(239,9729
static int _sort_job_by_batch_host(244,9898
static int _sort_job_by_gres(264,10278
static int _sort_job_by_group_id(284,10628
static int _sort_job_by_group_name(299,10889
static int _sort_job_by_id(320,11377
static int _sort_job_by_name(335,11628
static int _sort_job_by_node_list(355,11978
static int _sort_job_by_num_nodes(412,13087
static int _sort_job_by_num_cpus(427,13351
static int _sort_job_by_num_sct(442,13612
static int _sort_job_by_sockets(467,14132
static int _sort_job_by_cores(482,14408
static int _sort_job_by_threads(497,14682
static int _sort_job_by_min_memory(512,14958
static int _sort_job_by_min_tmp_disk(529,15311
static int _sort_job_by_state(544,15590
static int _sort_job_by_state_compact(560,15897
static int _sort_job_by_time_end(576,16239
static int _sort_job_by_time_left(591,16500
static int _sort_job_by_time_limit(620,17122
static uint32_t _get_start_time(640,17477
static int _sort_job_by_time_start(649,17714
static int _sort_job_by_time_used(673,18161
static int _sort_job_by_partition(691,18485
static int _sort_job_by_priority(711,18860
static int _sort_job_by_user_id(726,19121
static int _sort_job_by_user_name(741,19379
static int _sort_job_by_reservation(761,19776
static int _sort_step_by_gres(784,20341
static int _sort_step_by_id(804,20711
static int _sort_step_by_node_list(821,21038
static int _sort_step_by_partition(879,22166
static int _sort_step_by_time_limit(899,22561
static int _sort_step_by_time_start(914,22846
static int _sort_step_by_time_used(929,23131
static int _sort_step_by_user_id(947,23499
static int _sort_step_by_user_name(962,23775

src/squeue/squeue.c,247
struct squeue_parameters params;59,2604
int max_line_size;60,2637
main 73,2950
static int _multi_cluster(114,3851
static int _get_info(135,4244
_get_window_width(145,4472
_print_job 169,4925
_print_job_steps(249,7065
_print_date(301,8492

src/squeue/squeue.h,1071
#define __SQUEUE_H__41,2246
typedef struct job_step 73,2851
	uint32_t job_id;74,2877
	uint16_t array_id;75,2895
	uint32_t step_id;76,2915
} squeue_job_step_t;77,2934
struct squeue_parameters 79,2956
	bool all_flag;80,2983
	bool array_flag;81,2999
	bool job_flag;82,3017
	bool start_flag;83,3033
	bool step_flag;84,3051
	bool long_list;85,3068
	bool no_header;86,3085
	int  iterate;87,3102
	int  verbose;88,3117
	char* accounts;90,3133
	List clusters;91,3150
	uint32_t cluster_flags;92,3166
	char* format;93,3191
	char* jobs;94,3206
	char* names;95,3219
	hostset_t nodes;96,3233
	char* partitions;97,3251
	char* qoss;98,3270
	char* reservation;99,3283
	char* sort;100,3303
	char* states;101,3316
	char* steps;102,3331
	char* users;103,3345
	uint32_t job_id;105,3360
	uint32_t user_id;106,3419
	List  account_list;108,3481
	List  format_list;109,3502
	List  job_list;110,3522
	List  name_list;111,3539
	List  part_list;112,3557
	List  qos_list;113,3575
	List  state_list;114,3592
	List  step_list;115,3611
	List  user_list;116,3629

src/sdiag/opts.c,159
#  define _GNU_SOURCE42,2096
#define OPT_LONG_USAGE 57,2321
extern void parse_command_line(67,2504
static void _usage(106,3305
static void _help(111,3373

src/sdiag/sdiag.c,188
int sdiag_param 54,2365
stats_info_response_msg_t *buf;buf56,2402
stats_info_request_msg_t req;61,2494
int main(65,2582
static int _get_info(89,3066
static int _print_info(101,3291

src/plugins/priority/multifactor/priority_multifactor.c,2398
#define SECS_PER_DAY	79,2946
#define SECS_PER_WEEK	80,2982
#define MIN_USAGE_FACTOR 82,3024
void *acct_db_conn acct_db_conn89,3267
uint32_t cluster_cpus 90,3324
List job_list 91,3385
time_t last_job_update 92,3437
uint16_t part_max_priority 93,3503
slurm_ctl_conf_t slurmctld_conf 94,3564
void *acct_db_conn acct_db_conn96,3632
uint32_t cluster_cpus 97,3659
List job_list 98,3691
time_t last_job_update 99,3713
uint16_t part_max_priority 100,3750
slurm_ctl_conf_t slurmctld_conf;101,3782
const char plugin_name[plugin_name133,5214
const char plugin_type[plugin_type134,5272
const uint32_t plugin_version	135,5323
static pthread_t decay_handler_thread;137,5361
static pthread_t cleanup_handler_thread;138,5400
static pthread_mutex_t decay_lock 139,5441
static bool running_decay 140,5504
static bool favor_small;142,5590
static uint16_t damp_factor 143,5649
static uint32_t max_age;144,5711
static uint16_t enforce;146,5808
static uint32_t weight_age;147,5868
static uint32_t weight_fs;148,5925
static uint32_t weight_js;149,5988
static uint32_t weight_part;150,6050
static uint32_t weight_qos;151,6113
static uint32_t flags;152,6170
static uint32_t max_tickets;153,6220
static time_t g_last_ran 155,6338
static double decay_factor 156,6397
static int _apply_decay(171,6959
static int _reset_usage(218,8320
static void _read_last_decay_ran(254,9194
static int _write_last_decay_ran(318,10621
static void _set_usage_efctv(395,12796
static int _set_children_usage_efctv(428,13966
static int _distribute_tickets(454,14628
static double _get_fairshare_priority(508,16272
static void _get_priority_factors(571,18096
static uint32_t _get_priority_internal(702,21972
static bool _mark_assoc_active(803,25555
static time_t _next_reset(828,26236
static void _init_grp_used_cpu_run_secs(899,28126
static int _apply_new_usage(992,30571
static void *_decay_thread(_decay_thread1139,35279
static int _filter_job(1433,43998
static void *_cleanup_thread(_cleanup_thread1473,44752
static void _internal_setup(1479,44858
int init 1514,46102
int fini 1578,48147
extern uint32_t priority_p_set(1597,48576
extern void priority_p_reconfig(1606,48819
extern void priority_p_set_assoc_usage(1624,49320
extern double priority_p_calc_fs_factor(1809,54940
extern List priority_p_get_priority_factors_list(1831,55466
extern void priority_p_job_end(1911,57542

src/plugins/priority/basic/priority_basic.c,446
const char plugin_name[plugin_name87,3817
const char plugin_type[plugin_type88,3876
const uint32_t plugin_version	89,3928
int init 95,4095
int fini 101,4175
extern uint32_t priority_p_set(110,4303
extern void priority_p_reconfig(130,4716
extern void priority_p_set_assoc_usage(135,4780
extern double priority_p_calc_fs_factor(140,4867
extern List priority_p_get_priority_factors_list(159,5437
extern void priority_p_job_end(165,5573

src/plugins/sched/builtin/builtin.c,540
#  define BACKFILL_INTERVAL	69,3055
static bool stop_builtin 73,3158
static pthread_mutex_t term_lock 74,3192
static pthread_cond_t  term_cond 75,3254
static bool config_flag 76,3315
static int backfill_interval 77,3348
static int max_backfill_job_cnt 78,3398
static int sched_timeout 79,3436
extern void stop_builtin_agent(87,3667
static void _my_sleep(95,3833
static void _load_config(106,4076
static void _compute_start_times(141,5045
extern void builtin_reconfig(239,7992
extern void *builtin_agent(builtin_agent245,8132

src/plugins/sched/builtin/builtin.h,33
#define _SLURM_BUILTIN_H42,2249

src/plugins/sched/builtin/builtin_wrapper.c,758
const char		plugin_name[plugin_name53,2586
const char		plugin_type[plugin_type54,2649
const uint32_t		plugin_version	55,2694
static int plugin_errno 58,2762
static pthread_t builtin_thread 60,2804
static pthread_mutex_t thread_flag_mutex 61,2841
int init(66,3143
void fini(93,4017
int slurm_sched_p_reconfig(108,4527
slurm_sched_p_schedule(118,4849
slurm_sched_p_newalloc(127,5146
slurm_sched_p_freealloc(136,5465
slurm_sched_p_initial_priority(146,5788
void slurm_sched_p_job_is_pending(155,6158
void slurm_sched_p_partition_change(163,6450
int slurm_sched_p_get_errno(171,6744
char *slurm_sched_p_strerror(slurm_sched_p_strerror179,7038
void slurm_sched_p_requeue(187,7331
char *slurm_sched_p_get_conf(slurm_sched_p_get_conf195,7652

src/plugins/sched/wiki2/cancel_job.c,156
#define TYPE_ADMIN	43,2238
#define TYPE_TIMEOUT	44,2259
extern int	cancel_job(54,2599
static int	_cancel_job(145,4776
static int	_timeout_job(191,5937

src/plugins/sched/wiki2/crypto.c,123
#define MAX_ITERATION 11,423
static void des(33,1057
static uint16_t compute_crc(79,2162
extern void checksum(114,3041

src/plugins/sched/wiki2/event.c,362
static pthread_mutex_t	event_mutex 42,2182
static time_t		last_notify_time 43,2246
static slurm_addr_t	moab_event_addr,44,2292
static slurm_addr_t	moab_event_addr,  moab_event_addr_bu;44,2292
static int		event_addr_set 45,2350
static slurm_fd_t	event_fd 46,2382
static int _open_fd(50,2494
static void _close_fd(92,3491
extern int	event_notify(109,3858

src/plugins/sched/wiki2/get_jobs.c,1059
static uint32_t cr_enabled 69,3496
#define REJECT_MSG_MAX 72,3604
#define REJECT_MSG_LEN 73,3637
static int reject_msg_cnt 74,3670
typedef struct reject_msg 75,3701
	uint32_t job_id;76,3729
	char     reason[reason77,3747
} reject_msg_t;78,3781
reject_msg_t reject_msgs[reject_msgs79,3797
extern int	get_jobs(126,5825
static int	_hidden_job(200,7766
static char *   _dump_all_jobs(218,8090
static char *	_dump_job(240,8586
static void	_get_job_comment(459,14015
static uint16_t _get_job_cpus_per_task(522,15885
static uint32_t _get_pn_min_mem(531,16119
static uint32_t _get_pn_min_disk(538,16271
static uint32_t	_get_job_max_nodes(546,16427
static uint32_t	_get_pn_min_nodes(573,17220
static uint32_t _get_job_submit_time(598,17899
static uint32_t _get_job_tasks(605,18065
static uint32_t	_get_job_time_limit(627,18556
static char *	_get_job_state(646,19142
static uint32_t	_get_job_end_time(678,20009
static char * _get_job_features(688,20327
static uint32_t	_get_job_suspend_time(715,20944
extern void wiki_job_requeue(725,21163

src/plugins/sched/wiki2/get_nodes.c,245
extern int	get_nodes(81,3863
static char *	_dump_all_nodes(178,6517
static int	_same_info(246,8112
static char *	_dump_node(309,9804
static char *	_get_node_state(424,12475
static int	_str_cmp(462,13302
static bool	_hidden_node(476,13597

src/plugins/sched/wiki2/hostlist.c,204
extern char * moab2slurm_task_list(77,3336
extern char * slurm_job2moab_task_list(155,5218
static char * _task_list(164,5445
static void _append_hl_buf(218,6812
static char * _task_list_exp(265,7853

src/plugins/sched/wiki2/initialize.c,36
extern int	initialize_wiki(54,2745

src/plugins/sched/wiki2/job_add_task.c,33
extern int	job_add_task(42,2206

src/plugins/sched/wiki2/job_modify.c,101
extern void	null_term(50,2542
static int	_job_modify(63,2734
extern int	job_modify_wiki(437,12448

src/plugins/sched/wiki2/job_notify.c,68
static int	_job_notify(45,2296
extern int	job_notify_wiki(65,2839

src/plugins/sched/wiki2/job_release_task.c,37
extern int	job_release_task(42,2214

src/plugins/sched/wiki2/job_requeue.c,37
extern int	job_requeue_wiki(44,2273

src/plugins/sched/wiki2/job_signal.c,108
static uint16_t _xlate_signal(50,2415
static int	_job_signal(91,3458
extern int	job_signal_wiki(110,3924

src/plugins/sched/wiki2/job_will_run.c,227
#define MAX_JOB_QUEUE 49,2495
extern int	job_will_run(71,3465
static char *	_will_run_test(126,4784
extern int	job_will_run2(315,10930
static char *	_will_run_test2(415,13430
extern char *	bitmap2wiki_node_name(617,19550

src/plugins/sched/wiki2/msg.c,1255
#define _DEBUG 47,2414
#define MAX_RETRIES 52,2648
static bool thread_running 54,2672
static bool thread_shutdown 55,2708
static pthread_mutex_t thread_flag_mutex 56,2745
static pthread_t msg_thread_id;57,2815
static char *err_msg;err_msg58,2847
static int   err_code;59,2869
static uint16_t sched_port;60,2892
char     auth_key[auth_key63,2959
char     e_host[e_host64,2993
char     e_host_bu[e_host_bu65,3028
uint16_t e_port 66,3066
struct   part_record *exclude_part_ptr[exclude_part_ptr67,3087
struct   part_record *hide_part_ptr[hide_part_ptr68,3141
struct   part_record *hide_part_nodes_ptr[hide_part_nodes_ptr69,3193
uint32_t first_job_id;70,3251
uint16_t job_aggregation_time 71,3274
int      init_prio_mode 72,3344
uint16_t kill_wait;73,3381
uint16_t use_host_exp 74,3401
extern int spawn_msg_thread(88,4053
extern void term_msg_thread(115,4859
static void *_msg_thread(_msg_thread149,5832
extern int parse_wiki_config(220,7904
extern char *	get_wiki_conf(393,12928
static size_t	_read_bytes(444,13924
static size_t	_write_bytes(477,14616
static char *	_recv_msg(522,15764
static size_t	_send_msg(562,16852
static int	_parse_msg(591,17752
static void	_proc_msg(658,19316
static void	_send_reply(759,22430

src/plugins/sched/wiki2/msg.h,208
#define E_HOST_SIZE	88,3538
#define EXC_PART_CNT	89,3562
#define HIDE_PART_CNT	90,3586
#define KEY_SIZE	91,3611
#define PRIO_HOLD	92,3631
#define PRIO_DECREMENT	93,3651
#define MAX_COMMENT_LEN	94,3676

src/plugins/sched/wiki2/resume_job.c,31
extern int	resume_job(45,2342

src/plugins/sched/wiki2/sched_wiki2.c,711
const char		plugin_name[plugin_name47,2362
const char		plugin_type[plugin_type48,2431
const uint32_t		plugin_version	49,2474
static int plugin_errno 52,2542
extern int init(57,2815
extern void fini(66,3155
extern int slurm_sched_p_schedule(75,3440
extern int slurm_sched_p_newalloc(84,3794
extern int slurm_sched_p_freealloc(92,4120
slurm_sched_p_initial_priority(102,4461
void slurm_sched_p_job_is_pending(133,5392
int slurm_sched_p_reconfig(141,5696
void slurm_sched_p_partition_change(151,6058
int slurm_sched_p_get_errno(159,6386
char *slurm_sched_p_strerror(slurm_sched_p_strerror167,6680
void slurm_sched_p_requeue(175,6973
char *slurm_sched_p_get_conf(slurm_sched_p_get_conf183,7317

src/plugins/sched/wiki2/start_job.c,62
extern int	start_job(55,2693
static int	_start_job(175,5851

src/plugins/sched/wiki2/suspend_job.c,32
extern int	suspend_job(45,2344

src/plugins/sched/wiki2/crypto.h,0

src/plugins/sched/backfill/backfill.c,1784
#  define BACKFILL_INTERVAL	86,3847
#  define BACKFILL_RESOLUTION	90,3914
#define   BACKFILL_WINDOW	96,4094
#  define BF_MAX_USERS	102,4285
#define SLURMCTLD_THREAD_LIMIT	105,4321
typedef struct node_space_map 107,4355
	time_t begin_time;108,4387
	time_t end_time;109,4407
	bitstr_t *avail_bitmap;avail_bitmap110,4425
	int next;111,4450
} node_space_map_t;112,4506
int bf_last_yields 116,4591
static bool stop_backfill 119,4680
static pthread_mutex_t thread_flag_mutex 120,4715
static pthread_mutex_t term_lock 121,4785
static pthread_cond_t  term_cond 122,4847
static bool config_flag 123,4908
static uint32_t debug_flags 124,4941
static int backfill_interval 125,4974
static int backfill_resolution 126,5024
static int backfill_window 127,5078
static int max_backfill_job_cnt 128,5124
static int max_backfill_job_per_part 129,5163
static int max_backfill_job_per_user 130,5205
static int max_backfill_jobs_start 131,5247
static bool backfill_continue 132,5287
static void _dump_job_sched(157,6422
static void _dump_job_test(170,6878
static void _dump_node_space_table(186,7324
static bool _job_is_completing(213,8240
static bool _many_pending_rpcs(243,8997
static int _num_feature_count(252,9255
static int  _try_sched(278,10000
extern void stop_backfill_agent(397,13672
static void _my_sleep(405,13840
static void _load_config(416,14084
extern void backfill_reconfig(489,16644
static void _do_diag_stats(494,16706
extern void *backfill_agent(backfill_agent523,17634
static int _yield_locks(559,18623
static int _attempt_backfill(583,19185
static int _start_job(1111,35315
static void _reset_job_time_limit(1169,37370
static bool _more_work 1201,38470
static void _add_reservation(1216,38866
static bool _test_resv_overlap(1289,41087

src/plugins/sched/backfill/backfill.h,34
#define _SLURM_BACKFILL_H42,2252

src/plugins/sched/backfill/backfill_wrapper.c,759
const char		plugin_name[plugin_name54,2613
const char		plugin_type[plugin_type55,2676
const uint32_t		plugin_version	56,2722
static int plugin_errno 59,2790
static pthread_t backfill_thread 61,2832
static pthread_mutex_t thread_flag_mutex 62,2870
int init(67,3172
void fini(94,4029
int slurm_sched_p_reconfig(109,4543
slurm_sched_p_schedule(119,4866
slurm_sched_p_newalloc(128,5163
slurm_sched_p_freealloc(137,5482
slurm_sched_p_initial_priority(147,5805
void slurm_sched_p_job_is_pending(156,6175
void slurm_sched_p_partition_change(164,6467
int slurm_sched_p_get_errno(172,6761
char *slurm_sched_p_strerror(slurm_sched_p_strerror180,7055
void slurm_sched_p_requeue(188,7348
char *slurm_sched_p_get_conf(slurm_sched_p_get_conf196,7669

src/plugins/sched/wiki/cancel_job.c,156
#define TYPE_ADMIN 43,2233
#define TYPE_TIMEOUT 44,2256
extern int	cancel_job(50,2462
static int	_cancel_job(100,3710
static int	_timeout_job(124,4335

src/plugins/sched/wiki/crypto.c,123
#define MAX_ITERATION 11,423
static void des(33,1057
static uint16_t compute_crc(79,2162
extern void checksum(114,3041

src/plugins/sched/wiki/get_jobs.c,770
extern int	get_jobs(106,5138
static int	_hidden_job(174,6937
static char *   _dump_all_jobs(187,7151
static char *	_dump_job(209,7647
static uint16_t _get_job_cpus_per_task(394,12059
static uint16_t _get_job_tasks_per_node(404,12294
static uint32_t _get_pn_min_mem(413,12536
static uint32_t _get_pn_min_disk(420,12688
static uint32_t	_get_pn_min_nodes(428,12844
static uint32_t _get_job_submit_time(441,13176
static uint32_t _get_job_tasks(448,13342
static uint32_t	_get_job_time_limit(470,13833
static char *	_get_job_state(482,14188
static char * _get_job_features(511,15014
static uint32_t	_get_job_end_time(537,15567
static uint32_t	_get_job_suspend_time(545,15784
extern char *   bitmap2wiki_node_name(565,16401
static char * _task_list(586,16815

src/plugins/sched/wiki/get_nodes.c,180
extern int	get_nodes(68,3250
static char *	_dump_all_nodes(157,5650
static char *	_dump_node(181,6174
static char *	_get_node_state(238,7463
static bool	_hidden_node(275,8314

src/plugins/sched/wiki/hostlist.c,204
extern char * moab2slurm_task_list(77,3336
extern char * slurm_job2moab_task_list(155,5218
static char * _task_list(164,5445
static void _append_hl_buf(210,6668
static char * _task_list_exp(257,7709

src/plugins/sched/wiki/job_modify.c,100
extern void	null_term(46,2349
static int	_job_modify(59,2541
extern int	job_modify_wiki(219,6762

src/plugins/sched/wiki/msg.c,1225
#define _DEBUG 46,2390
static bool thread_running 48,2408
static bool thread_shutdown 49,2444
static pthread_mutex_t thread_flag_mutex 50,2481
static pthread_t msg_thread_id;51,2551
static char *err_msg;err_msg52,2583
static int   err_code;53,2605
static uint16_t sched_port;54,2628
char     auth_key[auth_key57,2695
char     e_host[e_host58,2729
char     e_host_bu[e_host_bu59,2764
uint16_t e_port 60,2802
struct   part_record *exclude_part_ptr[exclude_part_ptr61,2823
struct   part_record *hide_part_ptr[hide_part_ptr62,2877
struct   part_record *hide_part_nodes_ptr[hide_part_nodes_ptr63,2929
uint16_t job_aggregation_time 64,2987
uint16_t host_format;65,3057
int      init_prio_mode 66,3079
uint16_t kill_wait;67,3116
uint16_t use_host_exp 68,3136
extern int spawn_msg_thread(82,3800
extern void term_msg_thread(108,4561
static void *_msg_thread(_msg_thread142,5798
extern int parse_wiki_config(214,7914
extern char *	get_wiki_conf(380,12770
static size_t	_read_bytes(431,13766
static size_t	_write_bytes(449,14108
static char *	_recv_msg(472,14779
static size_t	_send_msg(512,15867
static int	_parse_msg(541,16767
static void	_proc_msg(613,18490
static void	_send_reply(686,20456

src/plugins/sched/wiki/msg.h,175
#define E_HOST_SIZE 88,3533
#define EXC_PART_CNT 89,3558
#define HIDE_PART_CNT 90,3583
#define KEY_SIZE 91,3608
#define PRIO_HOLD 92,3633
#define PRIO_DECREMENT 93,3658

src/plugins/sched/wiki/resume_job.c,31
extern int	resume_job(45,2342

src/plugins/sched/wiki/sched_wiki.c,711
const char		plugin_name[plugin_name49,2351
const char		plugin_type[plugin_type50,2411
const uint32_t		plugin_version	51,2453
static int plugin_errno 54,2521
extern int init(59,2794
extern void fini(68,3126
extern int slurm_sched_p_schedule(77,3411
extern int slurm_sched_p_newalloc(85,3715
extern int slurm_sched_p_freealloc(93,4041
slurm_sched_p_initial_priority(103,4382
void slurm_sched_p_job_is_pending(132,5233
void slurm_sched_p_partition_change(140,5537
int slurm_sched_p_reconfig(148,5831
int slurm_sched_p_get_errno(156,6131
char *slurm_sched_p_strerror(slurm_sched_p_strerror164,6425
void slurm_sched_p_requeue(172,6718
char *slurm_sched_p_get_conf(slurm_sched_p_get_conf180,7049

src/plugins/sched/wiki/start_job.c,62
extern int	start_job(54,2650
static int	_start_job(132,4771

src/plugins/sched/wiki/suspend_job.c,32
extern int	suspend_job(45,2344

src/plugins/sched/wiki/crypto.h,0

src/plugins/sched/hold/hold_wrapper.c,664
const char		plugin_name[plugin_name52,2487
const char		plugin_type[plugin_type53,2546
const uint32_t		plugin_version	54,2588
static int plugin_errno 57,2656
int init(62,2929
void fini(71,3256
int slurm_sched_p_reconfig(79,3524
slurm_sched_p_schedule(88,3825
slurm_sched_p_newalloc(97,4122
slurm_sched_p_freealloc(106,4441
slurm_sched_p_initial_priority(116,4764
void slurm_sched_p_job_is_pending(130,5231
void slurm_sched_p_partition_change(138,5523
int slurm_sched_p_get_errno(146,5817
char *slurm_sched_p_strerror(slurm_sched_p_strerror154,6111
void slurm_sched_p_requeue(162,6404
char *slurm_sched_p_get_conf(slurm_sched_p_get_conf170,6725

src/plugins/mpi/pmi2/agent.c,567
#define MAX_RETRIES 64,2541
static int *initialized initialized66,2564
static int *finalized finalized67,2596
static pthread_t pmi2_agent_tid 69,2627
static struct io_operations tree_listen_ops 73,2774
static struct io_operations task_ops 82,3099
_handle_task_request(93,3341
_handle_tree_request(113,3760
_is_fd_ready(132,4176
_tree_listen_readable(146,4372
_tree_listen_read(161,4629
_task_readable(208,5663
_task_read(232,6036
_handle_pmi1_init(246,6289
_agent(298,7458
pmi2_start_agent(334,8299
pmi2_stop_agent(361,8883
task_finalize(369,9000

src/plugins/mpi/pmi2/agent.h,25
#define _AGENT_H39,2089

src/plugins/mpi/pmi2/client.c,744
#define KEY_INDEX(52,2297
#define VAL_INDEX(53,2326
#define MP_KEY(54,2359
#define MP_VAL(55,2417
#define REQ_PAIR_SIZE_INC 57,2476
static int pmi_version 59,2506
static int pmi_subversion 60,2534
is_pmi11(63,2577
is_pmi20(70,2688
get_pmi_version(77,2799
set_pmi_version(88,2994
_parse_cmd(114,3780
client_req_init(167,4903
client_req_free(185,5193
client_req_parse_body(199,5397
client_req_parse_spawn_req(259,6932
client_req_parse_spawn_subcmd(439,12017
_client_req_get_val(471,13164
client_req_get_str(484,13414
client_req_get_int(497,13622
client_req_get_bool(510,13825
client_resp_new(528,14161
client_resp_send(537,14276
client_resp_free(560,14722
_str_replace(570,14864
send_kvs_fence_resp_to_clients(585,15094

src/plugins/mpi/pmi2/client.h,565
#define _CLIENT_H39,2082
#define PMI11_VERSION 56,2391
#define PMI11_SUBVERSION 57,2415
#define PMI20_VERSION 58,2442
#define PMI20_SUBVERSION 59,2466
typedef struct client_request 61,2494
	int buf_len;62,2526
	char *buf;buf63,2540
	char sep;64,2552
	char term;65,2590
	int parse_idx;66,2628
	char *cmd;cmd67,2671
	char **pairs;pairs68,2730
	uint32_t pairs_size;69,2791
	uint32_t pairs_cnt;70,2813
} client_req_t;71,2834
typedef struct client_response 73,2851
	char *buf;buf74,2884
} client_resp_t;75,2896
#define client_resp_append(98,3870

src/plugins/mpi/pmi2/info.c,558
#define NODE_ATTR_SIZE_INC 58,2504
typedef struct nag_req 61,2575
	int fd;62,2600
	int rank;63,2609
	char key[key64,2620
	struct nag_req *next;next65,2648
} nag_req_t;66,2671
static nag_req_t *nag_req_list nag_req_list67,2684
static int na_cnt 70,2746
static int na_size 71,2769
static char **node_attr node_attr72,2793
#define KEY_INDEX(74,2826
#define VAL_INDEX(75,2855
_free_nag_req(80,2938
enqueue_nag_req(86,2998
node_attr_put(102,3286
node_attr_get(160,4647
job_attr_get_netinfo(181,4998
job_attr_get(199,5312
ifconfig(237,6043

src/plugins/mpi/pmi2/info.h,24
#define _INFO_H39,2050

src/plugins/mpi/pmi2/kvs.c,834
#define MAX_RETRIES 46,2159
int tasks_to_wait 49,2198
int children_to_wait 50,2221
int kvs_seq 51,2247
int waiting_kvs_resp 52,2286
typedef struct kvs_bucket 56,2346
	char **pairs;pairs57,2374
	uint32_t count;58,2389
	uint32_t size;59,2406
} kvs_bucket_t;60,2422
static kvs_bucket_t *kvs_hash kvs_hash62,2439
static uint32_t hash_size 63,2477
static char *temp_kvs_buf temp_kvs_buf65,2509
static int temp_kvs_cnt 66,2543
static int temp_kvs_size 67,2572
static int no_dup_keys 69,2603
#define TASKS_PER_BUCKET 71,2632
#define TEMP_KVS_SIZE_INC 72,2659
#define KEY_INDEX(74,2691
#define VAL_INDEX(75,2720
#define HASH(76,2753
_hash(79,2821
temp_kvs_init(94,3064
temp_kvs_add(142,4140
temp_kvs_merge(166,4674
temp_kvs_send(189,5103
kvs_init(229,6062
kvs_get(247,6385
kvs_put(271,6793
kvs_clear(306,7627

src/plugins/mpi/pmi2/kvs.h,23
#define _KVS_H39,2061

src/plugins/mpi/pmi2/mpi_pmi2.c,339
const char plugin_name[plugin_name81,3683
const char plugin_type[plugin_type82,3736
const uint32_t plugin_version 83,3782
int p_mpi_hook_slurmstepd_prefork(89,3874
int p_mpi_hook_slurmstepd_task 111,4252
p_mpi_hook_client_prelaunch(146,5095
int p_mpi_hook_client_single_task_per_node(165,5425
int p_mpi_hook_client_fini(170,5494

src/plugins/mpi/pmi2/nameserv.c,372
typedef struct name_port 43,2117
	char *name;name44,2144
	char *port;port45,2157
	struct name_port *next;next46,2170
} name_port_t;47,2195
static name_port_t *local_name_list local_name_list54,2323
name_lookup_local 57,2382
name_publish_local 69,2566
name_unpublish_local 90,2964
name_publish_up(113,3312
name_unpublish_up(141,3819
name_lookup_up(169,4301

src/plugins/mpi/pmi2/nameserv.h,29
#define _NAME_SERV_H39,2080

src/plugins/mpi/pmi2/pmi1.c,737
	char *cmd;cmd85,3703
	int (*handler)handler86,3715
} pmi1_cmd_handlers[pmi1_cmd_handlers87,3770
static spawn_req_t *pmi1_spawn pmi1_spawn107,4573
_handle_get_maxes(110,4624
_handle_get_universe_size(130,5114
_handle_get_appnum(149,5562
_handle_barrier_in(173,6139
_handle_finalize(207,7099
_handle_abort(227,7555
_handle_get_my_kvsname(237,7836
_handle_create_kvs(254,8290
_handle_destroy_kvs(262,8481
_handle_put(271,8675
_handle_get(304,9461
_handle_getbyidx(337,10179
_handle_publish_name(346,10369
_handle_unpublish_name(374,11023
_handle_lookup_name(404,11720
_handle_mcmd(436,12410
#define MAX_READLINE 510,14635
_handle_pmi1_cmd_buf(514,14700
_handle_pmi1_mcmd_buf(547,15423
handle_pmi1_cmd(603,16793

src/plugins/mpi/pmi2/pmi2.c,607
	char *cmd;cmd84,3655
	int (*handler)handler85,3667
} pmi2_cmd_handlers[pmi2_cmd_handlers86,3722
_handle_fullinit(108,4555
_handle_finalize(165,6073
_handle_abort(183,6447
_handle_job_getid(199,6845
_handle_job_connect(215,7262
_handle_job_disconnect(223,7430
_handle_kvs_put(231,7604
_handle_kvs_fence(255,8224
_handle_kvs_get(290,9181
_handle_info_getnodeattr(320,9839
_handle_info_putnodeattr(356,10700
_handle_info_getjobattr(380,11258
_handle_name_publish(409,11923
_handle_name_unpublish(436,12522
_handle_name_lookup(461,13054
_handle_spawn(493,13722
handle_pmi2_cmd(544,15114

src/plugins/mpi/pmi2/pmi.h,5365
#define _PMI_H39,2057
#define PMIU_MAXLINE 49,2313
#define MAXKEYLEN 52,2388
#define MAXVALLEN 53,2452
#define MAXNAMELEN 54,2518
#define MAXKVSNAME 55,2576
#define GETMAXES_CMD 58,2640
#define MAXES_CMD 59,2685
#define GETUNIVSIZE_CMD 60,2726
#define UNIVSIZE_CMD 61,2779
#define GETAPPNUM_CMD 62,2828
#define APPNUM_CMD 63,2874
#define BARRIERIN_CMD 64,2916
#define BARRIEROUT_CMD 65,2962
#define FINALIZE_CMD 66,3009
#define FINALIZEACK_CMD 67,3053
#define ABORT_CMD 68,3101
#define PUT_CMD 69,3142
#define PUTRESULT_CMD 70,3181
#define GET_CMD 71,3227
#define GETRESULT_CMD 72,3266
#define GETBYIDX_CMD 73,3312
#define GETBYIDXRESULTS_CMD 74,3356
#define SPAWNRESULT_CMD 75,3408
#define MCMD_KEY 77,3457
#define ENDCMD_KEY 78,3491
#define KVSNAMEMAX_KEY 79,3527
#define KEYLENMAX_KEY 80,3568
#define VALLENMAX_KEY 81,3608
#define SIZE_KEY 82,3648
#define APPNUM_KEY 83,3682
#define EXECNAME_KEY 84,3718
#define NPROCS_KEY 85,3756
#define ARGCNT_KEY 86,3792
#define INFONUM_KEY 87,3828
#define TOTSPAWNS_KEY 88,3866
#define SPAWNSSOFAR_KEY 89,3905
#define KVSNAME_KEY 90,3946
#define PREPUTNUM_KEY 91,3983
#define PREPUTKEY_KEY 92,4023
#define PREPUTVAL_KEY 93,4064
#define PMI2_SUCCESS 101,4292
#define PMI2_FAIL 102,4330
#define PMI2_ERR_INIT 103,4369
#define PMI2_ERR_NOMEM 104,4407
#define PMI2_ERR_INVALID_ARG 105,4445
#define PMI2_ERR_INVALID_KEY 106,4483
#define PMI2_ERR_INVALID_KEY_LENGTH 107,4521
#define PMI2_ERR_INVALID_VAL 108,4559
#define PMI2_ERR_INVALID_VAL_LENGTH 109,4597
#define PMI2_ERR_INVALID_LENGTH 110,4635
#define PMI2_ERR_INVALID_NUM_ARGS 111,4673
#define PMI2_ERR_INVALID_ARGS 112,4711
#define PMI2_ERR_INVALID_NUM_PARSED 113,4750
#define PMI2_ERR_INVALID_KEYVALP 114,4789
#define PMI2_ERR_INVALID_SIZE 115,4828
#define PMI2_ERR_OTHER 116,4867
#define PMI2_MAX_KEYLEN 118,4907
#define PMI2_MAX_VALLEN 119,4934
#define PMI2_MAX_ATTRVALUE 120,4963
#define PMI2_ID_NULL 121,4995
#define FULLINIT_CMD 124,5076
#define FULLINITRESP_CMD 125,5118
#define FINALIZE_CMD 126,5169
#define FINALIZERESP_CMD 127,5211
#define ABORT_CMD 128,5262
#define JOBGETID_CMD 129,5301
#define JOBGETIDRESP_CMD 130,5344
#define JOBCONNECT_CMD 131,5396
#define JOBCONNECTRESP_CMD 132,5441
#define JOBDISCONNECT_CMD 133,5495
#define JOBDISCONNECTRESP_CMD 134,5543
#define KVSPUT_CMD 135,5600
#define KVSPUTRESP_CMD 136,5641
#define KVSFENCE_CMD 137,5691
#define KVSFENCERESP_CMD 138,5734
#define KVSGET_CMD 139,5786
#define KVSGETRESP_CMD 140,5827
#define GETNODEATTR_CMD 141,5877
#define GETNODEATTRRESP_CMD 142,5927
#define PUTNODEATTR_CMD 143,5986
#define PUTNODEATTRRESP_CMD 144,6036
#define GETJOBATTR_CMD 145,6095
#define GETJOBATTRRESP_CMD 146,6144
#define NAMEPUBLISH_CMD 147,6202
#define NAMEPUBLISHRESP_CMD 148,6248
#define NAMEUNPUBLISH_CMD 149,6303
#define NAMEUNPUBLISHRESP_CMD 150,6351
#define NAMELOOKUP_CMD 151,6408
#define NAMELOOKUPRESP_CMD 152,6453
#define SPAWN_CMD 153,6507
#define SPAWNRESP_CMD 154,6546
#define GETMYKVSNAME_CMD 156,6595
#define GETMYKVSNAMERESP_CMD 157,6643
#define CREATEKVS_CMD 158,6687
#define DESTROYKVS_CMD 159,6731
#define PUBLISHNAME_CMD 160,6776
#define UNPUBLISHNAME_CMD 161,6822
#define LOOKUPNAME_CMD 162,6870
#define PUBLISHRESULT_CMD 163,6915
#define UNPUBLISHRESULT_CMD 164,6963
#define LOOKUPRESULT_CMD 165,7013
#define MCMD_CMD 166,7060
#define CMD_KEY 169,7100
#define PMIJOBID_KEY 170,7132
#define PMIRANK_KEY 171,7169
#define SRCID_KEY 172,7205
#define THREADED_KEY 173,7239
#define RC_KEY 174,7276
#define ERRMSG_KEY 175,7307
#define PMIVERSION_KEY 176,7342
#define PMISUBVER_KEY 177,7382
#define RANK_KEY 178,7425
#define SIZE_KEY 179,7458
#define APPNUM_KEY 180,7491
#define SPAWNERJOBID_KEY 181,7526
#define DEBUGGED_KEY 182,7568
#define PMIVERBOSE_KEY 183,7605
#define ISWORLD_KEY 184,7644
#define MSG_KEY 185,7680
#define JOBID_KEY 186,7712
#define KVSCOPY_KEY 187,7746
#define KEY_KEY 188,7782
#define VALUE_KEY 189,7814
#define FOUND_KEY 190,7848
#define WAIT_KEY 191,7882
#define NAME_KEY 192,7915
#define PORT_KEY 193,7948
#define THRID_KEY 194,7981
#define INFOKEYCOUNT_KEY 195,8015
#define INFOKEY_KEY 196,8056
#define INFOVAL_KEY 197,8092
#define FOUND_KEY 198,8128
#define NCMDS_KEY 199,8162
#define PREPUTCOUNT_KEY 200,8196
#define PPKEY_KEY 201,8236
#define PPVAL_KEY 202,8270
#define SUBCMD_KEY 203,8304
#define MAXPROCS_KEY 204,8339
#define ARGC_KEY 205,8376
#define ARGV_KEY 206,8409
#define INFOKEYCOUNT_KEY 207,8442
#define ERRCODES_KEY 208,8483
#define SERVICE_KEY 209,8520
#define INFO_KEY 210,8556
#define TRUE_VAL 212,8590
#define FALSE_VAL 213,8623
#define JOB_ATTR_PROC_MAP 215,8658
#define JOB_ATTR_UNIV_SIZE 216,8712
#define JOB_ATTR_NETINFO 217,8759
#define JOB_ATTR_RESV_PORTS 218,8813
#define PMI2_SRUN_PORT_ENV 223,9016
#define PMI2_STEP_NODES_ENV 224,9071
#define PMI2_TREE_WIDTH_ENV 225,9127
#define PMI2_PROC_MAPPING_ENV 226,9183
#define PMI2_PMI_JOBID_ENV 227,9241
#define PMI2_SPAWN_SEQ_ENV 228,9296
#define PMI2_SPAWNER_JOBID_ENV 229,9351
#define PMI2_SPAWNER_PORT_ENV 230,9410
#define PMI2_PREPUT_CNT_ENV 231,9468
#define PMI2_PPKEY_ENV 232,9526
#define PMI2_PPVAL_ENV 233,9577
#define SLURM_STEP_RESV_PORTS 234,9628
#define PMI2_PMI_DEBUGGED_ENV 236,9705
#define PMI2_KVS_NO_DUP_KEYS_ENV 237,9749

src/plugins/mpi/pmi2/setup.c,753
#define PMI2_SOCK_ADDR_FMT 70,2692
static bool run_in_stepd 75,2768
int  tree_sock;77,2799
int *task_socks;task_socks78,2815
char tree_sock_addr[tree_sock_addr79,2832
pmi2_job_info_t job_info;80,2858
pmi2_tree_info_t tree_info;81,2884
in_stepd(84,2925
_remove_tree_sock(90,2979
_setup_stepd_job_info(96,3044
_setup_stepd_tree_info(180,5296
_setup_stepd_sockets(261,7387
_setup_stepd_kvs(303,8562
pmi2_setup_stepd(346,9607
_get_proc_mapping(379,10228
_setup_srun_job_info(514,13845
_setup_srun_tree_info(590,15865
_setup_srun_socket(624,16839
_setup_srun_kvs(637,17156
_setup_srun_environ(646,17270
_tasks_launched 659,17699
_task_launch_detection(675,17965
_setup_srun_task_launch_detection(708,18645
pmi2_setup_srun(733,19225

src/plugins/mpi/pmi2/setup.h,1153
#define _SETUP_H39,2060
typedef struct pmi2_job_info 67,2650
	uint32_t jobid;68,2681
	uint32_t stepid;69,2747
	uint32_t nnodes;70,2813
	uint32_t nodeid;71,2879
	uint32_t ntasks;72,2945
	uint32_t ltasks;73,3011
	uint32_t *gtids;gtids74,3077
	uint32_t spawn_seq;75,3143
	int pmi_debugged;77,3202
	char *step_nodelist;step_nodelist78,3266
	char *proc_mapping;proc_mapping79,3325
	char *pmi_jobid;pmi_jobid80,3371
	char *spawner_jobid;spawner_jobid81,3410
	char **job_env;job_env82,3457
	MPIR_PROCDESC *MPIR_proctable;MPIR_proctable84,3519
	opt_t      *srun_opt;srun_opt85,3575
	switch_jobinfo_t *switch_job;switch_job86,3622
	char *resv_ports;resv_ports87,3691
} pmi2_job_info_t;88,3735
typedef struct pmi2_tree_info 90,3755
	char *this_node;this_node91,3787
	char *parent_node;parent_node92,3825
	int   parent_id;93,3867
	int   num_children;94,3905
	int   depth;95,3958
	int   max_depth;96,3993
	uint16_t pmi_port;97,4039
	slurm_addr_t *srun_addr;srun_addr98,4094
	uint32_t *children_kvs_seq;children_kvs_seq99,4156
} pmi2_tree_info_t;100,4225
#define STEPD_PMI_SOCK(108,4392
#define TASK_PMI_SOCK(109,4444

src/plugins/mpi/pmi2/spawn.c,982
static uint32_t spawn_seq 59,2454
static pid_t *spawned_srun_pids spawned_srun_pids60,2508
typedef struct pending_spawn_req 62,2549
	uint32_t seq;63,2584
	int fd;64,2599
	int lrank;65,2608
	char *from_node;from_node66,2620
	struct pending_spawn_req *next;next67,2653
} psr_t;68,2686
static psr_t *psr_list psr_list70,2696
spawn_subcmd_new(73,2752
spawn_subcmd_free(82,2877
spawn_req_new(111,3421
spawn_req_free(122,3591
spawn_req_pack(151,4097
spawn_req_unpack(192,5101
spawn_req_send_to_srun(269,7379
spawn_resp_new(292,7934
spawn_resp_free(301,8047
spawn_resp_pack(311,8181
spawn_resp_unpack(326,8501
spawn_resp_send_to_stepd(354,9185
spawn_resp_send_to_srun(372,9494
spawn_resp_send_to_fd(390,9782
spawn_psr_enqueue(411,10229
spawn_psr_dequeue(426,10512
spawn_seq_next(450,10980
_exec_srun_single(456,11039
_exec_srun_multiple(525,12884
_setup_exec_srun(593,14650
spawn_job_do_spawn(647,16254
_wait_for_all(667,16719
spawn_job_wait(686,17072

src/plugins/mpi/pmi2/spawn.h,802
#define _SPAWN_H39,2061
typedef struct spawn_subcmd 56,2379
	char *cmd;cmd57,2409
	uint32_t max_procs;58,2421
	uint32_t argc;59,2442
	char **argv;argv60,2458
	uint32_t info_cnt;61,2472
	char **info_keys;info_keys62,2492
	char **info_vals;info_vals63,2511
} spawn_subcmd_t;64,2530
typedef struct spawn_req 66,2549
	uint32_t seq;67,2576
	char *from_node;from_node68,2591
	uint32_t subcmd_cnt;69,2609
	uint32_t preput_cnt;70,2631
	char **pp_keys;pp_keys71,2653
	char **pp_vals;pp_vals72,2670
	spawn_subcmd_t **subcmds;subcmds73,2687
} spawn_req_t;75,2759
typedef struct spawn_resp 77,2775
	uint32_t seq;78,2803
	int rc;79,2818
	char *jobid;jobid80,2827
	uint16_t pmi_port;81,2841
	uint32_t error_cnt;82,2861
	int *error_codes;error_codes83,2882
} spawn_resp_t;84,2901

src/plugins/mpi/pmi2/tree.c,612
static uint32_t  spawned_srun_ports_size 65,2787
static uint16_t *spawned_srun_ports spawned_srun_ports66,2833
static char *tree_cmd_names[tree_cmd_names80,3097
_handle_kvs_fence(92,3326
_handle_kvs_fence_resp(162,5264
_handle_spawn(213,6486
_send_task_spawn_resp_pmi20(259,7494
_send_task_spawn_resp_pmi11(301,8522
_handle_spawn_resp(346,9618
_handle_name_publish(394,10989
_handle_name_unpublish(429,11725
_handle_name_lookup(462,12387
handle_tree_cmd(497,13125
tree_msg_to_srun(534,13877
tree_msg_to_srun_with_resp(551,14219
tree_msg_to_stepds(584,14876
tree_msg_to_spawned_sruns(595,15047

src/plugins/mpi/pmi2/tree.h,263
#define _TREE_H39,2073
	TREE_CMD_KVS_FENCE,46,2149
	TREE_CMD_KVS_FENCE_RESP,47,2170
	TREE_CMD_SPAWN,48,2196
	TREE_CMD_SPAWN_RESP,49,2213
	TREE_CMD_NAME_PUBLISH,50,2235
	TREE_CMD_NAME_UNPUBLISH,51,2259
	TREE_CMD_NAME_LOOKUP,52,2285
	TREE_CMD_COUNT53,2308

src/plugins/mpi/lam/mpi_lam.c,337
const char plugin_name[plugin_name80,3829
const char plugin_type[plugin_type81,3881
const uint32_t plugin_version 82,3926
int p_mpi_hook_slurmstepd_prefork(84,3966
int p_mpi_hook_slurmstepd_task(90,4109
p_mpi_hook_client_prelaunch(98,4279
int p_mpi_hook_client_single_task_per_node(105,4448
int p_mpi_hook_client_fini(110,4516

src/plugins/mpi/lam/lam.h,0

src/plugins/mpi/none/mpi_none.c,338
const char plugin_name[plugin_name82,3801
const char plugin_type[plugin_type83,3854
const uint32_t plugin_version 84,3900
int p_mpi_hook_slurmstepd_prefork(86,3940
int p_mpi_hook_slurmstepd_task(92,4084
p_mpi_hook_client_prelaunch(100,4254
int p_mpi_hook_client_single_task_per_node(107,4424
int p_mpi_hook_client_fini(112,4493

src/plugins/mpi/mpichgm/mpichgm.c,695
	int defined;64,2615
	unsigned int port_board_id;65,2629
	unsigned int unique_high_id;66,2658
	unsigned int unique_low_id;67,2688
	unsigned int numanode;68,2717
	unsigned int remote_pid;69,2741
	unsigned int remote_port;70,2767
} gm_slave_t;71,2794
#define GMPI_RECV_BUF_LEN 73,2809
struct gmpi_state 75,2842
	pthread_t tid;76,2862
	int fd;77,2878
	mpi_plugin_client_info_t *job;job78,2898
static int _gmpi_parse_init_recv_msg(81,2934
static int _gmpi_establish_map(127,4257
static void _gmpi_wait_abort(249,7262
static void *_gmpi_thr(_gmpi_thr297,8356
gmpi_state_create(313,8662
gmpi_state_destroy(327,8925
gmpi_thr_create(333,9001
extern int gmpi_thr_destroy(410,11694

src/plugins/mpi/mpichgm/mpichgm.h,48
typedef struct gmpi_state gmpi_state_t;47,2314

src/plugins/mpi/mpichgm/mpi_mpichgm.c,338
const char plugin_name[plugin_name81,3811
const char plugin_type[plugin_type82,3868
const uint32_t plugin_version 83,3917
int p_mpi_hook_slurmstepd_prefork(85,3957
int p_mpi_hook_slurmstepd_task(91,4104
p_mpi_hook_client_prelaunch(123,5092
int p_mpi_hook_client_single_task_per_node(129,5263
int p_mpi_hook_client_fini(134,5332

src/plugins/mpi/mpichmx/mpichmx.c,695
	int defined;63,2626
	unsigned int port_board_id;64,2640
	unsigned int unique_high_id;65,2669
	unsigned int unique_low_id;66,2699
	unsigned int numanode;67,2728
	unsigned int remote_pid;68,2752
	unsigned int remote_port;69,2778
} gm_slave_t;70,2805
#define GMPI_RECV_BUF_LEN 72,2820
struct gmpi_state 74,2853
	pthread_t tid;75,2873
	int fd;76,2889
	mpi_plugin_client_info_t *job;job77,2909
static int _gmpi_parse_init_recv_msg(80,2945
static int _gmpi_establish_map(130,4351
static void _gmpi_wait_abort(252,7356
static void *_gmpi_thr(_gmpi_thr300,8450
gmpi_state_create(316,8756
gmpi_state_destroy(330,9019
gmpi_thr_create(336,9095
extern int gmpi_thr_destroy(414,11789

src/plugins/mpi/mpichmx/mpichmx.h,48
typedef struct gmpi_state gmpi_state_t;47,2349

src/plugins/mpi/mpichmx/mpi_mpichmx.c,338
const char plugin_name[plugin_name80,3793
const char plugin_type[plugin_type81,3850
const uint32_t plugin_version 82,3899
int p_mpi_hook_slurmstepd_prefork(84,3939
int p_mpi_hook_slurmstepd_task(90,4086
p_mpi_hook_client_prelaunch(122,5074
int p_mpi_hook_client_single_task_per_node(128,5245
int p_mpi_hook_client_fini(133,5314

src/plugins/mpi/mpich1_shmem/mpich1_shmem.c,337
const char plugin_name[plugin_name80,3795
const char plugin_type[plugin_type81,3852
const uint32_t plugin_version 82,3906
int p_mpi_hook_slurmstepd_prefork(84,3946
int p_mpi_hook_slurmstepd_task(90,4098
p_mpi_hook_client_prelaunch(99,4339
int p_mpi_hook_client_single_task_per_node(106,4517
int p_mpi_hook_client_fini(111,4585

src/plugins/mpi/openmpi/mpi_openmpi.c,338
const char plugin_name[plugin_name82,3806
const char plugin_type[plugin_type83,3858
const uint32_t plugin_version 84,3907
int p_mpi_hook_slurmstepd_prefork(86,3947
int p_mpi_hook_slurmstepd_task(92,4094
p_mpi_hook_client_prelaunch(100,4268
int p_mpi_hook_client_single_task_per_node(107,4441
int p_mpi_hook_client_fini(112,4510

src/plugins/mpi/mpich1_p4/mpich1_p4.c,653
const char plugin_name[plugin_name87,3981
const char plugin_type[plugin_type88,4039
const uint32_t plugin_version 89,4090
pthread_t p4_tid 92,4171
int p4_fd1 93,4206
static int  shutdown_pipe[shutdown_pipe99,4379
static bool shutdown_complete;100,4409
static int  shutdown_timeout;101,4483
static pthread_mutex_t shutdown_lock;103,4586
static pthread_cond_t  shutdown_cond;104,4624
int p_mpi_hook_slurmstepd_prefork(107,4664
int p_mpi_hook_slurmstepd_task 113,4813
static void *mpich1_thr(mpich1_thr172,6159
p_mpi_hook_client_prelaunch(256,7963
int p_mpi_hook_client_single_task_per_node(326,9829
int p_mpi_hook_client_fini(331,9897

src/plugins/mpi/mvapich/mpi_mvapich.c,338
const char plugin_name[plugin_name81,3861
const char plugin_type[plugin_type82,3917
const uint32_t plugin_version 83,3966
int p_mpi_hook_slurmstepd_prefork(85,4006
int p_mpi_hook_slurmstepd_task 91,4153
p_mpi_hook_client_prelaunch(135,5379
int p_mpi_hook_client_single_task_per_node(141,5552
int p_mpi_hook_client_fini(146,5621

src/plugins/mpi/mvapich/mvapich.c,4399
#define MVAPICH_VERSION_REQUIRES_PIDS 83,3311
#  define timersub(90,3461
enum mv_init_state105,3805
	MV_READ_VERSION,107,3826
	MV_READ_RANK,108,3844
	MV_READ_HOSTIDLEN,109,3859
	MV_READ_HOSTID,110,3879
	MV_READ_ADDRLEN,111,3896
	MV_READ_ADDRS,112,3914
	MV_READ_PIDLEN,113,3930
	MV_READ_PID,114,3947
	MV_INIT_DONE,115,3961
struct mvapich_info121,4034
	int do_poll;123,4056
	enum mv_init_state state;124,4070
	int nread;125,4135
	int nwritten;126,4200
	int fd;128,4266
	int version;129,4331
	int rank;130,4396
	int pidlen;131,4461
	char *pid;pid132,4526
	int hostidlen;133,4591
	int hostid;134,4656
	int addrlen;135,4721
	int *addr;addr137,4787
int mvapich_verbose 151,5316
static time_t first_abort_time 153,5342
struct mvapich_state 159,5534
	pthread_t tid;160,5557
	struct mvapich_info **mvarray;mvarray161,5573
	int fd;162,5605
	int nprocs;163,5614
	int nconnected;164,5627
	int protocol_version;165,5644
	int protocol_phase;166,5667
	int connect_once;167,5688
	int do_timing;168,5707
	int timeout;170,5724
	int start_time;171,5788
	int shutdown_pipe[shutdown_pipe173,5853
	bool shutdown_complete;174,5925
	int  shutdown_timeout;175,5993
	pthread_mutex_t  shutdown_lock;178,6092
	pthread_cond_t   shutdown_cond;179,6125
	mpi_plugin_client_info_t job[job181,6159
struct mvapich_poll187,6263
	mvapich_state_t      *st;st189,6285
	struct mvapich_info **mvmap;mvmap190,6312
	struct pollfd        *fds;fds191,6342
	int                   counter;192,6370
	int                   nfds;193,6402
#define mvapich_debug(200,6473
#define mvapich_debug2(206,6584
#define mvapich_debug3(212,6700
static void do_timings 219,6817
static int mvapich_requires_pids 223,6972
static int startup_timeout 236,7273
char * vmsg 257,7586
static void mvapich_terminate_job 287,8004
static struct mvapich_info *mvapich_info_find mvapich_info_find303,8373
static void report_absent_tasks 318,8729
static struct mvapich_info * mvapich_info_create 355,9742
static void mvapich_info_destroy 367,9985
static void mvapich_poll_reset 378,10177
static struct mvapich_poll * mvapich_poll_create 400,10659
static void mvapich_poll_destroy 413,10975
static int mvapich_poll_internal 424,11173
mvapich_poll_next 445,11741
static int mvapich_poll 517,13413
static int mvapich_write 554,14282
static int mvapich_read 582,14761
static int mvapich_write_n 610,15222
static int mvapich_read_n 635,15684
static int mvapich_dual_phase 671,16343
static int mvapich_abort_sends_rank 676,16466
static void mvapich_bcast_addrs 696,16942
static void mvapich_bcast_hostids 750,18162
static int mvapich_send 800,19443
static int mvapich_recv 807,19673
static int mvapich_scatterbcast 814,19912
static int mvapich_allgatherbcast 833,20356
static int mvapich_alltoallbcast 852,20792
static int recv_common_value 876,21273
static int process_pmgr_bcast 902,21967
static int process_pmgr_gather 927,22551
static int process_pmgr_scatter 948,23125
static int process_pmgr_allgather 971,23729
static int process_pmgr_alltoall 990,24226
static int mvapich_process_op 1010,24716
static int mvapich_complete_op 1075,26466
static int mvapich_pmgr_loop 1129,28012
static int mvapich_processops 1177,29466
static void mvapich_bcast 1189,29772
static void mvapich_barrier 1197,29960
mvapich_print_abort_message 1223,30589
static int mvapich_abort_timeout 1290,32203
static int mvapich_abort_accept 1311,32544
static void mvapich_wait_for_abort(1358,33620
static void mvapich_mvarray_destroy 1417,34982
static void do_timings 1430,35205
static int mvapich_read_item 1469,35938
static int mvapich_info_process_init 1513,37056
static int mvapich_accept_new 1636,40023
mvapich_initialize_connections 1691,41466
static int mvapich_phase_two 1812,44086
static int read_phase2_header 1844,44761
static int mvapich_handle_phase_two 1865,45283
static void mvapich_connection_init 1922,46768
static void mvapich_close_fds 1959,47549
static void *mvapich_thr(mvapich_thr1973,47861
static int process_environment 2013,48822
mvapich_state_create(2037,49258
static void mvapich_state_destroy(2071,50121
int mpirun_id_create(2092,50673
static short _sock_bind_wild(2100,50851
int do_listen 2119,51299
extern mvapich_state_t *mvapich_thr_create(mvapich_thr_create2145,51672
extern int mvapich_thr_destroy(2211,53890
void mvapich_thr_exit(2244,54549

src/plugins/mpi/mvapich/mvapich.h,90
#define _HAVE_MPI_MVAPICH_H41,2209
typedef struct mvapich_state mvapich_state_t;51,2380

src/plugins/crypto/munge/crypto_munge.c,633
#define GPL_LICENSED 58,2598
#define RETRY_COUNT	68,2813
#define RETRY_USEC	69,2837
const char plugin_name[plugin_name99,4223
const char plugin_type[plugin_type100,4297
const uint32_t plugin_version 101,4347
enum local_error_code 107,4432
	ESIG_BUF_DATA_MISMATCH 108,4456
	ESIG_BUF_SIZE_MISMATCH,109,4488
	ESIG_BAD_USERID,110,4513
	ESIG_CRED_REPLAYED,111,4531
static uid_t slurm_user 114,4556
extern int init 120,4715
extern int fini 130,4926
crypto_destroy_key(137,5029
crypto_read_private_key(144,5126
crypto_read_public_key(175,5885
crypto_str_error(186,6106
crypto_sign(202,6586
crypto_verify_sign(238,7600

src/plugins/crypto/openssl/crypto_openssl.c,353
const char plugin_name[plugin_name95,4100
const char plugin_type[plugin_type96,4176
const uint32_t plugin_version 97,4228
extern int init 103,4396
extern int fini 113,4607
crypto_destroy_key(120,4710
crypto_read_private_key(127,4804
crypto_read_public_key(148,5100
crypto_str_error(168,5403
crypto_sign(182,5662
crypto_verify_sign(211,6345

src/plugins/switch/cray/switch_cray.c,3281
#define _GNU_SOURCE43,2135
#define LEGACY_SPOOL_DIR 80,3080
#define CRAY_JOBINFO_MAGIC	89,3412
#define CRAY_NULL_JOBINFO_MAGIC	90,3450
#define MIN_PORT	91,3493
#define MAX_PORT	92,3516
#define ATTEMPTS	93,3539
#define PORT_CNT	94,3558
#define SWITCH_BUF_SIZE 95,3601
#define SWITCH_CRAY_STATE_VERSION 98,3667
static uint8_t port_resv[port_resv99,3720
static uint32_t last_alloc_port 100,3756
static uint32_t debug_flags 103,3819
const char plugin_name[plugin_name132,5188
const char plugin_type[plugin_type133,5237
const uint32_t plugin_version 134,5279
typedef struct slurm_cray_jobinfo 137,5360
	uint32_t magic;138,5396
	uint32_t num_cookies;139,5413
	char     **cookies;cookies146,5761
	uint32_t *cookie_ids;cookie_ids148,5853
	uint32_t port;149,5876
	uint32_t       jobid;150,5925
	uint32_t       stepid;151,5976
	uint64_t apid;153,6096
} slurm_cray_jobinfo_t;154,6112
static void _print_alpsc_pe_info(167,6641
static void _print_jobinfo(183,7161
int init(220,8250
int fini(234,8570
extern int switch_p_reconfig(239,8613
static void _state_read_buf(245,8700
static void _state_write_buf(282,9895
int switch_p_libstate_save(297,10227
int switch_p_libstate_restore(352,11341
int switch_p_libstate_clear(416,13021
int switch_p_alloc_jobinfo(427,13230
int switch_p_build_jobinfo(452,13875
void switch_p_free_jobinfo(585,17548
int switch_p_pack_jobinfo(630,18397
int switch_p_unpack_jobinfo(664,19236
void switch_p_print_jobinfo(747,21472
char *switch_p_sprint_jobinfo(switch_p_sprint_jobinfo752,21551
int switch_p_node_init(766,21769
int switch_p_node_fini(771,21826
int switch_p_job_preinit(776,21883
extern int switch_p_job_init(781,21963
extern int switch_p_job_suspend_test(1308,37194
extern void switch_p_job_suspend_info_get(1313,37286
extern void switch_p_job_suspend_info_pack(1319,37397
extern int switch_p_job_suspend_info_unpack(1325,37521
extern void switch_p_job_suspend_info_free(1331,37662
extern int switch_p_job_suspend(1336,37739
extern int switch_p_job_resume(1341,37833
int switch_p_job_fini(1346,37926
int switch_p_job_postfini(1402,39246
int switch_p_job_attach(1467,40724
extern int switch_p_get_jobinfo(1474,40905
extern int switch_p_get_errno(1484,41099
extern char *switch_p_strerror(switch_p_strerror1489,41163
extern int switch_p_clear_node_state(1498,41313
extern int switch_p_alloc_node_info(1503,41384
extern int switch_p_build_node_info(1508,41482
extern int switch_p_pack_node_info(1513,41579
extern int switch_p_unpack_node_info(1519,41709
extern int switch_p_free_node_info(1525,41855
extern char*switch_p_sprintf_node_info(switch_p_sprintf_node_info1530,41952
extern int switch_p_job_step_complete(1541,42134
extern int switch_p_job_step_part_comp(1599,43586
extern bool switch_p_part_comp(1605,43707
extern int switch_p_job_step_allocated(1610,43764
extern int switch_p_slurmctld_init(1616,43885
extern int switch_p_slurmd_init(1629,44233
extern int switch_p_slurmd_step_init(1659,44978
static int _get_first_pe(1682,45456
static int _list_str_to_array(1723,46457
static void _recursive_rmdir(1783,47716
static int _get_cpu_total(1859,49528
static int _assign_port(1966,52314
static int _release_port(2018,53422
static void _free_alpsc_pe_info(2054,54214

src/plugins/switch/nrt/nrt.c,6660
void *nrt_handle nrt_handle82,3544
char *nrt_sym[nrt_sym83,3569
	int (*nrt_command)nrt_command88,3632
} nrt_api_t;89,3702
nrt_api_t nrt_api;90,3715
static int nrt_cmd_wrap(92,3735
#define NRT_NULL_MAGIC 123,4440
#define NRT_NODEINFO_MAGIC	124,4476
#define NRT_JOBINFO_MAGIC	125,4514
#define NRT_LIBSTATE_MAGIC	127,4552
#define NRT_HOSTLEN	128,4590
#define NRT_NODECOUNT	129,4614
#define NRT_HASHCOUNT	130,4641
#define NRT_MAX_ADAPTERS 131,4668
#define NRT_MAX_PROTO_CNT	132,4745
#define NRT_STATE_VERSION 136,4837
pthread_mutex_t		global_lock 138,4888
slurm_nrt_libstate_t *	nrt_state 140,4980
mode_t			nrt_umask;141,5021
typedef struct slurm_nrt_window 158,5562
	nrt_window_id_t window_id;159,5596
	win_state_t state;160,5624
	nrt_job_key_t job_key;161,5644
} slurm_nrt_window_t;162,5668
typedef struct slurm_nrt_block 164,5691
	uint32_t rcontext_block_use;165,5724
	nrt_job_key_t job_key;166,5785
} slurm_nrt_block_t;167,5809
typedef struct slurm_nrt_adapter 169,5831
	char adapter_name[adapter_name170,5866
	nrt_adapter_t adapter_type;171,5912
	nrt_cau_index_t cau_indexes_avail;172,5941
	nrt_cau_index_t cau_indexes_used;173,5977
	nrt_imm_send_slot_t immed_slots_avail;174,6012
	nrt_imm_send_slot_t immed_slots_used;175,6052
	in_addr_t ipv4_addr;176,6091
	struct in6_addr ipv6_addr;177,6113
	nrt_logical_id_t lid;178,6141
	nrt_network_id_t network_id;179,6164
	nrt_port_id_t port_id;180,6194
	uint64_t rcontext_block_count;181,6218
	uint64_t rcontext_block_used;182,6281
	uint16_t block_count;183,6348
	slurm_nrt_block_t *block_list;block_list184,6371
	uint64_t special;185,6403
	nrt_window_id_t window_count;186,6422
	slurm_nrt_window_t *window_list;window_list187,6453
} slurm_nrt_adapter_t;188,6487
struct slurm_nrt_nodeinfo 190,6511
	uint32_t magic;191,6539
	char name[name192,6556
	uint32_t adapter_count;193,6581
	slurm_nrt_adapter_t *adapter_list;adapter_list194,6606
	struct slurm_nrt_nodeinfo *next;next195,6642
	nrt_node_number_t node_number;196,6676
struct slurm_nrt_libstate 199,6712
	uint32_t magic;200,6740
	uint32_t node_count;201,6757
	uint32_t node_max;202,6779
	slurm_nrt_nodeinfo_t *node_list;node_list203,6799
	uint32_t hash_max;204,6833
	slurm_nrt_nodeinfo_t **hash_table;hash_table205,6853
	nrt_job_key_t key_index;206,6889
struct slurm_nrt_jobinfo 209,6919
	uint32_t magic;210,6946
	nrt_job_key_t job_key;215,7080
	uint8_t bulk_xfer;216,7104
	uint32_t bulk_xfer_resources;217,7135
	uint16_t cau_indexes;218,7166
	uint16_t immed_slots;219,7189
	uint8_t ip_v4;220,7212
	uint8_t user_space;221,7240
	uint16_t tables_per_task;222,7272
	nrt_tableinfo_t *tableinfo;tableinfo223,7299
	hostlist_t nodenames;225,7329
	uint32_t num_tasks;226,7352
	char adapter_name[adapter_name230,7394
	nrt_adapter_t adapter_type;231,7440
} nrt_cache_entry_t;232,7469
typedef struct nrt_protocol_info 235,7492
	char protocol_name[protocol_name236,7527
} nrt_protocol_info_t;237,7572
typedef struct nrt_protocol_table 239,7596
	nrt_protocol_info_t protocol_table[protocol_table240,7632
	int protocol_table_cnt;241,7688
} nrt_protocol_table_t;242,7754
typedef struct slurm_nrt_suspend_info 244,7779
	uint32_t job_key_count;245,7819
	uint32_t job_key_array_size;246,7844
	nrt_job_key_t *job_key;job_key247,7874
} slurm_nrt_suspend_info_t;248,7899
static int lid_cache_size 250,7928
static nrt_cache_entry_t lid_cache[lid_cache251,7959
static bool dynamic_window_err 252,8013
static uint64_t my_lpar_id 256,8187
static bool     my_lpar_id_set 257,8219
static uint64_t my_network_id 258,8259
static bool     my_network_id_set 259,8294
_lock(341,12078
_unlock(351,12182
_init_adapter_cache(368,12592
_fill_in_adapter_cache(378,12757
_hash_index(449,14994
_find_node(472,15476
_hash_add_nodeinfo(515,16353
_hash_rebuild(534,16768
_find_window(552,17243
_free_resources_by_job(573,17771
_job_step_window_state(635,19544
static char *_state_str(_state_str672,20405
_window_state_set(695,20930
_alloc_node(849,25341
_find_free_window(901,26482
static void _table_alloc(919,26904
_add_block_use(947,27722
static int _add_immed_use(1055,31471
_free_block_use(1079,32178
_allocate_windows_all(1125,33402
_allocate_window_single(1304,39048
_win_state_str(1467,44086
_adapter_type_str(1489,44571
_port_status_str(1513,44957
_print_adapter_info(1530,45248
_print_adapter_status(1581,46989
_print_nodeinfo(1628,48447
_print_libstate(1713,51087
_print_table(1732,51531
_print_jobinfo(1807,54045
_print_load_table(1858,55696
_alloc_libstate(1892,57083
nrt_init(1915,57627
nrt_slurmctld_init(1929,57799
nrt_slurmd_init(1936,57876
nrt_slurmd_step_init(1948,58059
nrt_alloc_jobinfo(1964,58332
nrt_alloc_nodeinfo(1979,58634
static int _get_my_id(1998,59049
_load_min_window_id(2095,62157
_get_adapters(2123,62716
nrt_build_nodeinfo(2374,70852
nrt_pack_nodeinfo(2392,71125
_copy_node(2440,72431
_cmp_ipv6(2491,73943
_fake_unpack_adapters(2508,74218
_unpack_nodeinfo(2669,79198
nrt_unpack_nodeinfo(2805,83422
nrt_free_nodeinfo(2817,83654
nrt_job_step_complete(2848,84285
nrt_job_step_allocated(2909,86143
_next_key(2934,86732
static nrt_protocol_table_t *_get_protocol_table(_get_protocol_table2952,87037
_adapter_type_pref(2986,88005
nrt_build_jobinfo(3008,88475
_pack_tableinfo(3242,95126
nrt_pack_jobinfo(3331,97765
_unpack_tableinfo(3372,98699
nrt_unpack_jobinfo(3492,102577
nrt_free_jobinfo(3548,103892
nrt_get_jobinfo(3583,104505
_wait_for_window_unloaded(3622,105408
_wait_for_all_windows(3692,107271
nrt_load_table(3775,110462
_unload_window(3884,113488
_unload_window_all_jobs(3935,115019
static int _unload_job_table(3977,116200
static int _unload_job_windows(4005,117085
nrt_unload_table(4064,118825
nrt_fini(4090,119323
_free_libstate(4096,119378
_pack_libstate(4113,119668
nrt_libstate_save(4142,120387
_unpack_libstate(4160,120762
nrt_libstate_restore(4216,122315
nrt_libstate_clear(4236,122617
nrt_clear_node_state(4278,123547
extern char *nrt_err_str(nrt_err_str4493,130177
extern bool nrt_adapter_name_check(4570,132364
static preemption_state_t _job_preempt_state(4601,132967
static char *_job_state_str(_job_state_str4619,133464
static int _wait_job(4645,134064
extern int nrt_preempt_job_test(4700,135638
extern void nrt_suspend_job_info_get(4715,135989
extern void nrt_suspend_job_info_pack(4739,136733
extern int nrt_suspend_job_info_unpack(4762,137366
extern void nrt_suspend_job_info_free(4797,138326
static int _preempt_job(4808,138574
extern int nrt_preempt_job(4839,139604
static int _resume_job(4856,140023
extern int nrt_resume_job(4885,140958

src/plugins/switch/nrt/nrt_keys.h,570
#define _NRT_KEYS_INCLUDED40,2184
	NRT_JOBINFO_TABLEINFO,50,2353
	NRT_JOBINFO_TABLESPERTASK,51,2377
	NRT_JOBINFO_KEY,52,2442
	NRT_JOBINFO_PROTOCOL,53,2460
	NRT_JOBINFO_MODE54,2483
typedef struct nrt_tableinfo 58,2576
	char adapter_name[adapter_name59,2607
	nrt_adapter_t adapter_type;60,2678
	nrt_context_id_t context_id;61,2707
	uint32_t instance;62,2737
	nrt_network_id_t network_id;63,2757
	char protocol_name[protocol_name64,2787
	nrt_table_id_t table_id;65,2860
	uint32_t table_length;66,2886
	void *table;table67,2910
} nrt_tableinfo_t;68,2959

src/plugins/switch/nrt/slurm_nrt.h,597
#define _SLURM_NRT_INCLUDED48,2361
typedef struct slurm_nrt_libstate slurm_nrt_libstate_t;57,2530
typedef struct slurm_nrt_jobinfo  slurm_nrt_jobinfo_t;58,2586
typedef struct slurm_nrt_nodeinfo slurm_nrt_nodeinfo_t;59,2641
	ESTATUS 65,2863
	EADAPTER,66,2884
	ENOADAPTER,67,2895
	EBADMAGIC_NRT_NODEINFO,68,2908
	EBADMAGIC_NRT_JOBINFO,69,2933
	EBADMAGIC_NRT_LIBSTATE,70,2957
	EUNPACK,71,2982
	EHOSTNAME,72,2992
	ENOTSUPPORTED,73,3004
	EVERSION,74,3020
	EWINDOW,75,3031
	EUNLOAD76,3041
#define NRT_DEBUG_CNT 79,3054
#define NRT_MAXADAPTERS 81,3165
#define NRT_LIBSTATE_LEN 82,3191

src/plugins/switch/nrt/switch_nrt.c,2739
#define NRT_BUF_SIZE 58,2673
char local_dir_path[local_dir_path60,2700
bool nrt_need_state_save 61,2727
	int xe_number;68,2941
	char *xe_message;xe_message69,2957
} slurm_errtab_t;70,2976
static slurm_errtab_t slurm_errtab[slurm_errtab72,2995
const char plugin_name[plugin_name131,5077
const char plugin_type[plugin_type132,5132
const uint32_t plugin_version 133,5180
uint32_t debug_flags 135,5220
extern int init 141,5376
extern int fini 149,5506
extern int switch_p_reconfig 154,5556
extern int switch_p_slurmctld_init(160,5662
extern int switch_p_slurmd_init(178,5991
extern int switch_p_slurmd_step_init(196,6308
extern int switch_p_libstate_save 219,6810
static int _switch_p_libstate_save 238,7222
extern int switch_p_libstate_restore 290,8398
extern int switch_p_libstate_clear(356,10078
extern int switch_p_clear_node_state(371,10590
extern int switch_p_alloc_node_info(389,10925
extern int switch_p_build_node_info(396,11151
extern int switch_p_pack_node_info(423,11764
extern int switch_p_unpack_node_info(432,12062
extern void switch_p_free_node_info(441,12361
extern char * switch_p_sprintf_node_info(450,12596
extern int switch_p_alloc_jobinfo(461,12879
extern int switch_p_build_jobinfo(470,13128
extern void switch_p_free_jobinfo(671,18712
extern int switch_p_pack_jobinfo(679,18916
extern int switch_p_unpack_jobinfo(689,19193
extern int switch_p_get_jobinfo(699,19480
static inline int _make_step_comp(709,19746
extern int switch_p_job_step_complete(721,20003
extern int switch_p_job_step_part_comp(734,20271
extern bool switch_p_part_comp(747,20542
extern int switch_p_job_step_allocated(755,20669
extern void switch_p_print_jobinfo(771,21023
extern char *switch_p_sprint_jobinfo(switch_p_sprint_jobinfo776,21109
static bool _nrt_version_ok(785,21278
int switch_p_node_init(793,21448
extern int switch_p_node_fini(805,21679
extern int switch_p_job_preinit(810,21743
extern int switch_p_job_init 815,21830
extern int switch_p_job_suspend_test(836,22256
extern void switch_p_job_suspend_info_get(843,22473
extern void switch_p_job_suspend_info_pack(864,22938
extern int switch_p_job_suspend_info_unpack(874,23167
extern void switch_p_job_suspend_info_free(884,23419
extern int switch_p_job_suspend(893,23575
extern int switch_p_job_resume(911,23940
extern int switch_p_job_fini 929,24301
extern int switch_p_job_postfini(934,24386
extern int switch_p_job_attach(965,25084
static char *_lookup_slurm_api_errtab(_lookup_slurm_api_errtab989,25673
extern int switch_p_get_errno(1003,25939
extern char *switch_p_strerror(switch_p_strerror1013,26112
static void *_state_save_thread(_state_save_thread1020,26248
static void _spawn_state_save_thread(1038,26567

src/plugins/switch/nrt/libpermapi/shr_64.c,1741
bool srun_max_timer 81,2982
bool srun_shutdown 82,3011
static char *poe_cmd_fname poe_cmd_fname84,3041
static void *my_handle my_handle85,3076
static srun_job_t *job job86,3107
static bool got_alloc 87,3138
static bool slurm_started 88,3169
static log_options_t log_opts 89,3204
static host_usage_t *host_usage host_usage90,3258
static hostlist_t total_hl 91,3298
static int err_msg_len 92,3333
int sig_array[sig_array94,3364
#define PM_POE 103,3580
#define PM_PMD 104,3598
typedef struct agent_data 109,3678
	uint32_t   fe_auth_key;110,3706
	slurm_fd_t fe_comm_socket;111,3731
} agent_data_t;112,3759
static char *_name_from_addr(_name_from_addr114,3776
static void _pack_srun_ctx(128,4047
static int _unpack_srun_ctx(146,4530
static Buf _pack_srun_job_rec(192,5697
static srun_job_t * _unpack_srun_job_rec(220,6366
static bool _validate_connect(259,7375
static void _agent_proc_connect(297,8166
static void *_agent_thread(_agent_thread357,9599
static uint32_t _gen_auth_key(393,10539
static void _spawn_fe_agent(407,10855
static char *_uint16_array_to_str(_uint16_array_to_str463,12721
srun_job_t * _read_job_srun_agent(494,13297
static char *_get_cmd_protocol(_get_cmd_protocol574,15294
static void _parse_prog_line(650,17259
static bool _multi_prog_parse(766,20006
static void _re_write_cmdfile(820,21376
void _self_complete(869,22419
void _self_signal(874,22505
void _self_timeout(879,22565
extern int pe_rm_connect(921,24410
extern void pe_rm_free(1080,29309
extern int pe_rm_free_event(1117,30444
extern int pe_rm_get_event(1192,33757
extern int pe_rm_get_job_info(1251,36237
extern int pe_rm_init(1508,45767
extern int pe_rm_send_event(1802,54038
int pe_rm_submit_job(1849,55834

src/plugins/switch/none/switch_none.c,2001
const char plugin_name[plugin_name77,3734
const char plugin_type[plugin_type78,3790
const uint32_t plugin_version 79,3839
int init 85,4008
int fini 91,4090
extern int switch_p_reconfig 96,4136
int switch_p_libstate_save 104,4259
int switch_p_libstate_restore 109,4334
int switch_p_libstate_clear 114,4426
int switch_p_alloc_jobinfo 122,4551
int switch_p_build_jobinfo 128,4683
void switch_p_free_jobinfo 135,4836
int switch_p_pack_jobinfo(140,4910
int switch_p_unpack_jobinfo(146,5026
void switch_p_print_jobinfo(152,5158
char *switch_p_sprint_jobinfo(switch_p_sprint_jobinfo157,5237
int switch_p_node_init 171,5457
int switch_p_node_fini 176,5517
int switch_p_job_preinit 181,5577
extern int switch_p_job_init 186,5660
extern int switch_p_job_suspend_test(191,5741
extern void switch_p_job_suspend_info_get(196,5833
extern void switch_p_job_suspend_info_pack(202,5944
extern int switch_p_job_suspend_info_unpack(208,6068
extern void switch_p_job_suspend_info_free(214,6209
extern int switch_p_job_suspend(219,6286
extern int switch_p_job_resume(224,6380
int switch_p_job_fini 229,6473
int switch_p_job_postfini 234,6553
int switch_p_job_attach 251,6922
extern int switch_p_get_jobinfo(258,7106
extern int switch_p_get_errno(268,7297
extern char *switch_p_strerror(switch_p_strerror273,7361
extern int switch_p_clear_node_state(282,7510
extern int switch_p_alloc_node_info(287,7581
extern int switch_p_build_node_info(292,7679
extern int switch_p_pack_node_info(297,7776
extern int switch_p_unpack_node_info(303,7906
extern int switch_p_free_node_info(309,8052
extern char*switch_p_sprintf_node_info(switch_p_sprintf_node_info314,8149
extern int switch_p_job_step_complete(325,8330
extern int switch_p_job_step_part_comp(331,8440
extern bool switch_p_part_comp(337,8551
extern int switch_p_job_step_allocated(342,8608
extern int switch_p_slurmctld_init(348,8719
extern int switch_p_slurmd_init(353,8790
extern int switch_p_slurmd_step_init(358,8858

src/plugins/switch/generic/switch_generic.c,3569
#define SW_GEN_HASH_MAX	63,2592
#define SW_GEN_LIBSTATE_MAGIC	64,2622
#define SW_GEN_NODE_INFO_MAGIC	65,2663
#define SW_GEN_STEP_INFO_MAGIC	66,2705
#define GEN_STATE_VERSION 69,2821
typedef struct sw_gen_ifa 71,2862
	char *ifa_name;ifa_name72,2890
	char *ifa_family;ifa_family73,2934
	char *ifa_addr;ifa_addr74,2983
} sw_gen_ifa_t;75,3029
typedef struct sw_gen_node_info 76,3045
	uint32_t magic;77,3079
	uint16_t ifa_cnt;78,3096
	sw_gen_ifa_t **ifa_array;ifa_array79,3115
	char *node_name;node_name80,3142
	struct sw_gen_node_info *next;next81,3160
} sw_gen_node_info_t;82,3218
typedef struct sw_gen_node 84,3241
	char *node_name;node_name85,3270
	uint16_t ifa_cnt;86,3288
	sw_gen_ifa_t **ifa_array;ifa_array87,3307
} sw_gen_node_t;88,3334
typedef struct sw_gen_step_info 89,3351
	uint32_t magic;90,3385
	uint32_t node_cnt;91,3402
	sw_gen_node_t **node_array;node_array92,3422
} sw_gen_step_info_t;93,3451
typedef struct sw_gen_libstate 95,3474
	uint32_t magic;96,3507
	uint32_t node_count;97,3524
	uint32_t hash_max;98,3546
	sw_gen_node_info_t **hash_table;hash_table99,3566
} sw_gen_libstate_t;100,3600
const char plugin_name[plugin_name129,4957
const char plugin_type[plugin_type130,5016
const uint32_t plugin_version 131,5068
uint32_t	debug_flags 133,5108
pthread_mutex_t	global_lock 134,5134
sw_gen_libstate_t *libstate libstate135,5191
static void _lock(144,5533
static void _unlock(153,5637
_alloc_libstate(163,5757
_free_libstate(176,6069
_hash_index(206,6830
_find_node(229,7308
_hash_add_nodeinfo(271,8286
static void _cache_node_info(290,8985
int init(327,10104
int fini(334,10223
extern int switch_p_reconfig(342,10307
int switch_p_libstate_save(351,10467
int switch_p_libstate_restore(359,10672
int switch_p_libstate_clear(371,10957
int switch_p_alloc_jobinfo(381,11163
int switch_p_build_jobinfo(396,11586
void switch_p_free_jobinfo(446,13286
int switch_p_pack_jobinfo(474,14033
int switch_p_unpack_jobinfo(508,15072
void switch_p_print_jobinfo(568,16977
char *switch_p_sprint_jobinfo(switch_p_sprint_jobinfo575,17139
int switch_p_node_init(590,17449
int switch_p_node_fini(597,17585
int switch_p_job_preinit(604,17721
extern int switch_p_job_init(628,18357
extern int switch_p_job_suspend_test(635,18515
extern void switch_p_job_suspend_info_get(642,18693
extern void switch_p_job_suspend_info_pack(650,18894
extern int switch_p_job_suspend_info_unpack(658,19109
extern void switch_p_job_suspend_info_free(666,19343
extern int switch_p_job_suspend(673,19511
extern int switch_p_job_resume(680,19686
int switch_p_job_fini(687,19859
int switch_p_job_postfini(694,20014
int switch_p_job_attach(713,20464
extern int switch_p_get_jobinfo(726,20863
#define IFNAMSIZ 738,21223
extern int switch_p_get_errno(779,22219
extern char *switch_p_strerror(switch_p_strerror786,22362
extern int switch_p_clear_node_state(797,22589
extern int switch_p_alloc_node_info(804,22746
extern int switch_p_build_node_info(818,23146
extern int switch_p_pack_node_info(881,25156
extern int switch_p_unpack_node_info(904,25872
extern int switch_p_free_node_info(951,27434
extern char *switch_p_sprintf_node_info(switch_p_sprintf_node_info973,28108
extern int switch_p_job_step_complete(988,28407
extern int switch_p_job_step_part_comp(996,28613
extern bool switch_p_part_comp(1004,28822
extern int switch_p_job_step_allocated(1011,28958
extern int switch_p_slurmctld_init(1019,29167
extern int switch_p_slurmd_init(1026,29320
extern int switch_p_slurmd_step_init(1033,29467

src/plugins/launch/poe/launch_poe.c,843
const char plugin_name[plugin_name85,3872
const char plugin_type[plugin_type86,3927
const uint32_t plugin_version 87,3975
static char *cmd_fname cmd_fname89,4015
static char *poe_cmd_line poe_cmd_line90,4046
static pid_t poe_pid 91,4080
static void _build_work_dir(93,4107
static char *_get_cmd_protocol(_get_cmd_protocol111,4603
static void _propagate_srun_opts(181,6370
static void _unblock_signals 270,9077
extern int init(288,9477
extern int fini(298,9655
extern int launch_p_setup_srun_opt(303,9705
extern int launch_p_handle_multi_prog_verify(335,10501
extern int launch_p_create_job_step(341,10580
extern int launch_p_step_launch(759,23144
extern int launch_p_step_wait(796,23979
extern int launch_p_step_terminate(801,24070
extern void launch_p_print_status(807,24140
extern void launch_p_fwd_signal(812,24186

src/plugins/launch/runjob/launch_runjob.c,796
const char plugin_name[plugin_name84,3809
const char plugin_type[plugin_type85,3867
const uint32_t plugin_version 86,3918
static srun_job_t *local_srun_job local_srun_job88,3958
static void _send_step_complete_rpc(92,4047
static void _handle_timeout(117,4719
_handle_msg(138,5298
static void *_msg_thr_internal(_msg_thr_internal190,6621
_spawn_msg_handler(222,7443
extern int init(246,8080
extern int fini(256,8258
extern int launch_p_setup_srun_opt(261,8308
extern int launch_p_handle_multi_prog_verify(426,12925
extern int launch_p_create_job_step(431,13003
extern int launch_p_step_launch(450,13453
extern int launch_p_step_wait(474,13973
extern int launch_p_step_terminate(479,14052
extern void launch_p_print_status(488,14237
extern void launch_p_fwd_signal(493,14283

src/plugins/launch/runjob/runjob_interface.h,37
#define _RUNJOB_INTERFACE_H_39,1996

src/plugins/launch/slurm/launch_slurm.c,1468
#define _GNU_SOURCE41,2044
#define OPEN_MPI_PORT_ERROR 60,2554
#define MAX_STEP_RETRIES 63,2594
const char plugin_name[plugin_name92,3951
const char plugin_type[plugin_type93,4008
const uint32_t plugin_version 94,4058
static srun_job_t *local_srun_job local_srun_job96,4098
static uint32_t *local_global_rc local_global_rc97,4140
static task_state_t task_state;99,4182
static time_t launch_start_time;100,4214
static bool retry_step_begin 101,4247
static int  retry_step_cnt 102,4285
static char *_hostset_to_string(_hostset_to_string106,4357
static char *_task_ids_to_host_list(_task_ids_to_host_list127,4829
static char *_task_array_to_string(_task_array_to_string159,5636
static void _update_task_exit_state(179,6073
static int _kill_on_bad_exit(189,6323
static void _setup_max_wait_timer(196,6463
static const char *_taskstr(_taskstr207,6796
_is_openmpi_port_error(216,6901
_handle_openmpi_port_error(228,7144
static void _task_start(250,7753
static void _task_finish(285,8605
static void _load_multi(375,11247
extern int init(418,12291
extern int fini(428,12469
extern int launch_p_setup_srun_opt(435,12553
extern int launch_p_handle_multi_prog_verify(448,12877
extern int launch_p_create_job_step(464,13237
extern int launch_p_step_launch(477,13604
extern int launch_p_step_wait(610,17948
extern int launch_p_step_terminate(632,18462
extern void launch_p_print_status(641,18691
extern void launch_p_fwd_signal(646,18780

src/plugins/launch/slurm/task_state.c,765
struct task_state_struct 53,2411
	int n_tasks;54,2438
	int n_started;55,2452
	int n_abnormal;56,2468
	int n_exited;57,2485
	unsigned int first_exit:first_exit58,2500
	unsigned int first_abnormal_exit:first_abnormal_exit59,2528
	bitstr_t *start_failed;start_failed60,2565
	bitstr_t *running;running61,2590
	bitstr_t *normal_exit;normal_exit62,2610
	bitstr_t *abnormal_exit;abnormal_exit63,2634
task_state_t task_state_create 66,2664
void task_state_alter 80,2988
void task_state_destroy 90,3312
static const char *_task_state_type_str _task_state_type_str101,3542
void task_state_update 116,3863
int task_state_first_exit 160,4917
int task_state_first_abnormal_exit 169,5058
static void _do_log_msg 178,5228
void task_state_print 185,5428

src/plugins/launch/slurm/task_state.h,262
#define _HAVE_TASK_STATE_H41,2189
typedef struct task_state_struct * task_state_t;43,2217
	TS_START_SUCCESS,46,2282
	TS_START_FAILURE,47,2301
	TS_NORMAL_EXIT,48,2320
	TS_ABNORMAL_EXIT49,2337
} task_state_type_t;50,2355
typedef void (*log_f)log_f64,2698

src/plugins/launch/aprun/launch_aprun.c,1148
resource_allocation_response_msg_t *global_resp global_resp59,2522
resource_allocation_response_msg_t *global_resp global_resp62,2614
const char plugin_name[plugin_name92,4007
const char plugin_type[plugin_type93,4064
const uint32_t plugin_version 94,4114
static pid_t aprun_pid 96,4154
static char *_get_nids(_get_nids103,4324
static int _parse_prog_line(146,5334
static void _handle_multi_prog(230,7127
static void _unblock_signals(253,7541
static void _send_step_complete_rpc(267,7811
static void _handle_step_complete(292,8493
static void _handle_timeout(298,8607
static void _handle_msg(318,9174
static void *_msg_thr_internal(_msg_thr_internal370,10525
static pthread_t _spawn_msg_handler(401,11330
extern int init(424,11971
extern int fini(434,12149
extern int launch_p_setup_srun_opt(439,12199
extern int launch_p_handle_multi_prog_verify(683,18177
extern int launch_p_create_job_step(690,18288
extern int launch_p_step_launch(729,19385
extern int launch_p_step_wait(774,20435
extern int launch_p_step_terminate(779,20526
extern void launch_p_print_status(785,20596
extern void launch_p_fwd_signal(790,20642

src/plugins/acct_gather_infiniband/ofed/acct_gather_infiniband_ofed.c,1472
#define ALL_PORTS 71,2838
#define _DEBUG 74,2863
#define _DEBUG_INFINIBAND 75,2880
#define TIMEOUT 76,2908
#define IB_FREQ 77,2927
const char plugin_name[plugin_name109,4330
const char plugin_type[plugin_type110,4393
const uint32_t plugin_version 111,4451
	uint32_t port;114,4506
} slurm_ofed_conf_t;115,4522
struct ibmad_port *srcport srcport118,4545
static ib_portid_t portid;119,4580
static int ibd_timeout 120,4607
static int port 121,4635
	time_t last_update_time;124,4674
	time_t update_time;125,4700
	uint64_t xmtdata;126,4721
	uint64_t rcvdata;127,4740
	uint64_t xmtpkts;128,4759
	uint64_t rcvpkts;129,4778
	uint64_t total_xmtdata;130,4797
	uint64_t total_rcvdata;131,4822
	uint64_t total_xmtpkts;132,4847
	uint64_t total_rcvpkts;133,4872
} ofed_sens_t;134,4897
static ofed_sens_t ofed_sens 136,4913
static uint8_t pc[pc138,4964
static slurm_ofed_conf_t ofed_conf;140,4990
static uint32_t debug_flags 141,5026
static pthread_mutex_t ofed_lock 142,5059
static uint8_t *_slurm_pma_query_via(_slurm_pma_query_via144,5122
static int _read_ofed_values(170,5819
static int _update_node_infiniband(265,8634
static bool _run_in_daemon(293,9410
extern int init(311,9709
extern int fini(318,9800
extern int acct_gather_infiniband_p_node_update(334,10045
extern void acct_gather_infiniband_p_conf_set(357,10424
extern void acct_gather_infiniband_p_conf_options(372,10739
extern void acct_gather_infiniband_p_conf_values(384,11009

src/plugins/acct_gather_infiniband/ofed/acct_gather_infiniband_ofed.h,79
#define _GATHER_INFINIBAND_H_41,2189
#define INFINIBAND_DEFAULT_PORT 43,2220

src/plugins/acct_gather_infiniband/none/acct_gather_infiniband_none.c,470
#define _DEBUG 55,2575
#define _DEBUG_INFINIBAND 56,2592
const char plugin_name[plugin_name87,4004
const char plugin_type[plugin_type88,4067
const uint32_t plugin_version 89,4125
extern int init(95,4292
extern int fini(101,4378
extern int acct_gather_infiniband_p_node_update(106,4428
extern void acct_gather_infiniband_p_conf_set(111,4510
extern void acct_gather_infiniband_p_conf_options(116,4590
extern void acct_gather_infiniband_p_conf_values(122,4753

src/plugins/topology/none/topology_none.c,305
const char plugin_name[plugin_name78,3686
const char plugin_type[plugin_type79,3744
const uint32_t plugin_version 80,3795
extern int init(86,3964
extern int fini(96,4142
extern int topo_build_config(105,4313
extern bool topo_generate_node_ranking(113,4463
extern int topo_get_node_addr(124,4712

src/plugins/topology/3d_torus/hilbert.c,74
extern void TransposetoAxes(36,1483
extern void AxestoTranspose(61,2171

src/plugins/topology/3d_torus/hilbert.h,38
typedef unsigned int coord_t;34,1431

src/plugins/topology/3d_torus/hilbert_slurm.c,68
#define _DEBUG 49,2468
extern void nodes_to_hilbert_curve(54,2704

src/plugins/topology/3d_torus/topology_3d_torus.c,306
const char plugin_name[plugin_name80,3802
const char plugin_type[plugin_type81,3864
const uint32_t plugin_version 82,3919
extern int init(90,4131
extern int fini(100,4309
extern int topo_build_config(109,4480
extern bool topo_generate_node_ranking(117,4610
extern int topo_get_node_addr(132,4926

src/plugins/topology/node_rank/topology_node_rank.c,330
#define _DEBUG 57,2562
const char plugin_name[plugin_name86,3910
const char plugin_type[plugin_type87,3973
const uint32_t plugin_version 88,4029
extern int init(94,4198
extern int fini(104,4376
extern int topo_build_config(113,4547
extern bool topo_generate_node_ranking(121,4677
extern int topo_get_node_addr(134,4992

src/plugins/topology/tree/topology_tree.c,929
const char plugin_name[plugin_name82,3822
const char plugin_type[plugin_type83,3880
const uint32_t plugin_version 84,3931
typedef struct slurm_conf_switches 86,3971
	uint32_t link_speed;87,4008
	char *nodes;nodes88,4064
	char *switch_name;switch_name90,4147
	char *switches;switches91,4193
} slurm_conf_switches_t;93,4290
static s_p_hashtbl_t *conf_hashtbl conf_hashtbl94,4315
static char* topo_conf 95,4358
extern int init(114,5053
extern int fini(124,5231
extern int topo_build_config(135,5451
extern bool topo_generate_node_ranking(144,5624
extern int topo_get_node_addr(157,5910
static void _validate_switches(224,7477
static void _log_switches(382,11944
static int _get_switch_inx(400,12443
static void _free_switch_record_table(415,12765
extern int  _read_topo_file(432,13188
static int  _parse_switches(461,13898
static void _destroy_switches(503,14947
static int _node_name2bitmap(522,15643

src/plugins/core_spec/cray/core_spec_cray.c,360
#define _DEBUG 68,2698
const char plugin_name[plugin_name96,3907
const char plugin_type[plugin_type97,3976
const uint32_t plugin_version 98,4028
extern int init(100,4068
extern int fini(106,4150
extern int core_spec_p_set(117,4328
extern int core_spec_p_clear(130,4595
extern int core_spec_p_suspend(143,4823
extern int core_spec_p_resume(156,5054

src/plugins/core_spec/none/core_spec_none.c,360
#define _DEBUG 68,2705
const char plugin_name[plugin_name96,3914
const char plugin_type[plugin_type97,3983
const uint32_t plugin_version 98,4035
extern int init(100,4075
extern int fini(105,4125
extern int core_spec_p_set(115,4271
extern int core_spec_p_clear(128,4538
extern int core_spec_p_suspend(141,4766
extern int core_spec_p_resume(154,4997

src/plugins/slurmctld/nonstop/do_work.c,2320
#define NONSTOP_EVENT_PERIOD	78,3114
#define NONSTOP_SAVE_PERIOD	79,3146
#define FAILURE_MAGIC 81,3178
typedef struct job_failures 84,3248
	slurm_addr_t		callback_addr;85,3278
	uint32_t		callback_flags;86,3308
	uint16_t		callback_port;87,3335
	uint32_t		job_id;88,3361
	struct job_record *	job_ptr;89,3380
	uint32_t		fail_node_cnt;90,3410
	uint32_t *		fail_node_cpus;91,3436
	char **			fail_node_names;92,3465
	uint32_t		magic;93,3493
	uint16_t		pending_job_delay;94,3511
	uint32_t		pending_job_id;95,3541
	char *			pending_node_name;96,3568
	uint32_t		replace_node_cnt;97,3597
	uint32_t		time_extend_avail;98,3626
	uint32_t		user_id;99,3656
} job_failures_t;100,3676
static List job_fail_list 101,3694
static pthread_mutex_t job_fail_mutex 102,3728
static time_t job_fail_save_time 103,3795
static time_t job_fail_update_time 104,3844
static bool thread_running 106,3894
static bool thread_shutdown 107,3930
static pthread_mutex_t thread_flag_mutex 108,3967
static pthread_t msg_thread_id;109,4037
static void _job_fail_del(111,4070
static int _job_fail_find(134,4758
static void _job_fail_log(147,5121
static bool _valid_job_ptr(186,6425
static bool _valid_drain_user(197,6703
static void _pack_job_state(214,7087
static int _unpack_job_state(235,7858
extern int save_nonstop_state(283,9552
extern int restore_nonstop_state(370,11844
extern void init_job_db(453,14144
extern void term_job_db(461,14324
static uint32_t _get_job_cpus(471,14517
static void _failing_node(497,15254
extern void node_fail_callback(530,16294
extern void job_begin_callback(575,17829
extern void job_fini_callback(602,18791
extern char *drain_nodes_user(drain_nodes_user618,19376
extern char *fail_nodes(fail_nodes707,21716
static void _kill_job(787,23844
extern char *register_callback(register_callback806,24420
static char *_job_node_features(_job_node_features863,26211
extern char *drop_node(drop_node906,27588
extern char *replace_node(replace_node1101,33530
extern char *show_config(show_config1488,45843
extern char *show_job(show_job1531,47266
extern char *time_incr(time_incr1626,50093
static void _send_event_callbacks(1696,52199
static void *_state_thread(_state_thread1763,54231
extern int spawn_state_thread(1789,54854
extern void term_state_thread(1811,55419

src/plugins/slurmctld/nonstop/do_work.h,40
#define _HAVE_NONSTOP_DO_WORK_H38,2050

src/plugins/slurmctld/nonstop/msg.c,572
#define _MAX_RETRIES	66,2927
#define _MAX_NAME_SIZE	69,3028
static bool thread_running 71,3056
static bool thread_shutdown 72,3092
static pthread_mutex_t thread_flag_mutex 73,3129
static pthread_t msg_thread_id;74,3199
static size_t _read_bytes(76,3232
static size_t _write_bytes(109,3924
static char *_recv_msg(_recv_msg148,4794
static void _send_reply(178,5448
static char *_decrypt(_decrypt198,5969
static void _proc_msg(213,6308
static void *_msg_thread(_msg_thread303,9412
extern int spawn_msg_thread(353,10707
extern void term_msg_thread(375,11247

src/plugins/slurmctld/nonstop/msg.h,42
#define _HAVE_NONSTOP_SOCK_COMM_H39,2085

src/plugins/slurmctld/nonstop/nonstop.c,177
const char	plugin_name[plugin_name68,3403
const char	plugin_type[plugin_type69,3466
const uint32_t	plugin_version	70,3514
extern int init(72,3552
extern int fini(89,3920

src/plugins/slurmctld/nonstop/read_config.c,1221
int hot_spare_info_cnt;56,2493
spare_node_resv_t *hot_spare_info;hot_spare_info57,2517
char *hot_spare_count_str hot_spare_count_str58,2552
uint16_t nonstop_comm_port 59,2586
uint16_t nonstop_debug 60,2618
char *nonstop_control_addr nonstop_control_addr61,2646
char *nonstop_backup_addr nonstop_backup_addr62,2681
uint32_t max_spare_node_count 63,2715
uint16_t time_limit_delay 64,2750
uint16_t time_limit_drop 65,2781
uint16_t time_limit_extend 66,2811
int user_drain_allow_cnt 67,2843
uid_t *user_drain_allow user_drain_allow68,2873
char *user_drain_allow_str user_drain_allow_str69,2905
int user_drain_deny_cnt 70,2940
uid_t *user_drain_deny user_drain_deny71,2969
char *user_drain_deny_str user_drain_deny_str72,3000
uint32_t read_timeout 76,3104
uint32_t write_timeout 78,3132
munge_ctx_t ctx 79,3160
static s_p_options_t nonstop_options[nonstop_options81,3185
static void _print_config(98,3639
static spare_node_resv_t *_xlate_hot_spares(_xlate_hot_spares149,5178
static uid_t *_xlate_users(_xlate_users213,6940
static void _validate_config(243,7611
extern void nonstop_read_config(265,8306
extern void nonstop_free_config(302,9734
extern void create_hot_spare_resv(331,10433

src/plugins/slurmctld/nonstop/read_config.h,424
#define _HAVE_NONSTOP_READ_CONFIG_H39,2089
     typedef enum {false,false46,2220
     typedef enum {false, true}true46,2220
     typedef enum {false, true} bool;46,2220
#define GPL_LICENSED 57,2447
#define DEFAULT_NONSTOP_PORT	62,2533
typedef struct spare_node_resv 65,2600
	uint32_t node_cnt;66,2633
	char *partition;partition67,2685
	struct part_record *part_ptr;part_ptr68,2739
} spare_node_resv_t;69,2802

src/plugins/slurmctld/dynalloc/allocate.c,311
static int _get_nodelist_optional(105,4053
static int _get_nodelist_mandatory(177,6222
static char* _uint16_array_to_str_xmalloc(208,7019
static int _get_tasks_per_node(252,7840
static int _setup_job_desc_msg(314,9482
int allocate_node_rpc(432,13257
int allocate_node(539,16866
int cancel_job(705,21834

src/plugins/slurmctld/dynalloc/allocate.h,37
#define DYNALLOC_ALLOCATE_H_39,2103

src/plugins/slurmctld/dynalloc/allocator.c,156
static void _parse_job_params(78,3134
static void _parse_app_params(127,4375
static void _allocate_app_op(189,5989
extern void allocate_job_op(236,7378

src/plugins/slurmctld/dynalloc/allocator.h,38
#define DYNALLOC_ALLOCATOR_H_39,2106

src/plugins/slurmctld/dynalloc/argv.c,574
int argv_append(49,2240
int argv_append_nosize(63,2471
int argv_prepend_nosize(101,3198
int argv_append_unique_nosize(134,3862
void argv_free(164,4568
static char **argv_split_inter(argv_split_inter182,4768
char **argv_split(argv_split251,6114
char **argv_split_with_empty(argv_split_with_empty256,6228
int argv_count(264,6414
char *argv_join(argv_join282,6650
char *argv_join_range(argv_join_range330,7577
size_t argv_len(377,8551
char **argv_copy(argv_copy397,8818
int argv_delete(423,9279
int argv_insert(471,10382
int argv_insert_element(517,11526

src/plugins/slurmctld/dynalloc/argv.h,33
#define DYNALLOC_ARGV_H_39,2067

src/plugins/slurmctld/dynalloc/constants.h,176
#define DYNALLOC_CONSTANTS_H_39,2077
typedef enum {false,false44,2156
typedef enum {false, true}true44,2156
typedef enum {false, true} bool;44,2156
#define SIZE 48,2220

src/plugins/slurmctld/dynalloc/deallocate.c,70
extern void deallocate(66,2643
extern void deallocate_port(132,4300

src/plugins/slurmctld/dynalloc/deallocate.h,39
#define DYNALLOC_DEALLOCATE_H_39,2113

src/plugins/slurmctld/dynalloc/info.c,339
#define _GNU_SOURCE38,2073
static uint16_t fast_schedule 54,2400
void get_total_nodes_slots 64,2609
void get_free_nodes_slots 96,3405
hostlist_t get_available_host_list_system_m(133,4262
char* get_available_host_list_range_sytem_m(166,5025
hostlist_t choose_available_from_node_list_m(188,5529
char* get_hostlist_subset_m(227,6629

src/plugins/slurmctld/dynalloc/info.h,33
#define DYNALLOC_INFO_H_39,2098

src/plugins/slurmctld/dynalloc/job_ports_list.c,195
List job_ports_list 46,2267
extern void append_job_ports_item(48,2296
extern void free_job_ports_item_func(65,2825
extern int find_job_ports_item_func(75,3015
extern void print_list(90,3261

src/plugins/slurmctld/dynalloc/job_ports_list.h,191
#define JOB_PORTS_LIST_H_39,2140
	uint32_t slurm_jobid;62,2539
	uint16_t port_cnt;63,2562
	char *resv_ports;resv_ports64,2582
	int *port_array;port_array65,2601
} job_ports_t;66,2619

src/plugins/slurmctld/dynalloc/msg.c,654
#define _DEBUG 60,2511
#define MAX_RETRIES 65,2749
static bool thread_running 67,2773
static bool thread_shutdown 68,2809
static pthread_mutex_t thread_flag_mutex 69,2846
static pthread_t msg_thread_id;70,2916
static char *err_msg;err_msg71,2948
static int   err_code;72,2970
static uint16_t sched_port;73,2993
extern int spawn_msg_thread(86,3542
extern void term_msg_thread(128,4756
static void *_msg_thread(_msg_thread162,5714
static size_t 	_read_bytes(213,6947
static size_t 	_write_bytes(247,7680
static char * 	_recv_msg(293,8872
static size_t	_send_msg(316,9549
static void	_proc_msg(334,10099
extern void	send_reply(371,11145

src/plugins/slurmctld/dynalloc/msg.h,32
#define DYNALLOC_MSG_H_39,2144

src/plugins/slurmctld/dynalloc/slurmctld_dynalloc.c,181
const char		plugin_name[plugin_name51,2373
const char		plugin_type[plugin_type52,2445
const uint32_t		plugin_version	53,2495
extern int init(58,2765
extern void fini(67,3117

src/plugins/jobacct_gather/common/common_jag.c,791
static int cpunfo_frequency 55,2633
static long hertz 56,2666
static int my_pagesize 58,2690
static DIR  *slash_proc slash_proc59,2718
static int energy_profile 60,2750
static uint32_t _update_weighted_freq(63,2843
static char *_skipdot _skipdot84,3332
static int _get_sys_interface_freq_line(98,3514
static int _is_a_lwp(151,4939
static int _get_process_data_line(207,6482
static int _get_process_memory_line(277,8951
static int _remove_share_data(306,9728
static int _get_process_io_data_line(336,10545
static void _handle_stats(362,11143
static List _get_precs(414,12513
extern void jag_common_init(526,15224
extern void jag_common_fini(552,15814
extern void destroy_jag_prec(558,15901
extern void print_jag_prec(565,16014
extern void jag_common_poll_data(578,16418

src/plugins/jobacct_gather/common/common_jag.h,547
#define __COMMON_JAG_H__42,2260
typedef struct jag_prec 46,2316
	int	act_cpufreq;47,2363
	double	disk_read;48,2416
	double	disk_write;49,2457
	int	last_cpu;50,2500
	int     pages;51,2530
	pid_t	pid;52,2559
	pid_t	ppid;53,2571
	uint64_t rss;54,2584
	int     ssec;55,2609
	int     usec;56,2648
	uint64_t vsize;57,2685
} jag_prec_t;58,2721
typedef struct jag_callbacks 60,2736
	void (*prec_extra)prec_extra61,2767
	List (*get_precs)get_precs62,2807
	void (*get_offspring_data)get_offspring_data64,2919
} jag_callbacks_t;66,3006

src/plugins/jobacct_gather/none/jobacct_gather_none.c,1113
const char plugin_name[plugin_name74,3699
const char plugin_type[plugin_type75,3770
const uint32_t plugin_version 76,3820
extern int init 82,3987
extern int fini 88,4076
extern void jobacct_gather_p_poll_data(93,4129
extern jobacctinfo_t *jobacct_gather_p_create(jobacct_gather_p_create99,4245
extern void jobacct_gather_p_destroy(104,4336
extern int jobacct_gather_p_setinfo(109,4416
extern int jobacct_gather_p_getinfo(116,4559
extern void jobacct_gather_p_pack(122,4701
extern int jobacct_gather_p_unpack(127,4790
extern void jobacct_gather_p_aggregate(133,4913
extern int jobacct_gather_p_startpoll(139,5029
extern int jobacct_gather_p_endpoll(144,5115
extern void jobacct_gather_p_suspend_poll(149,5185
extern void jobacct_gather_p_resume_poll(154,5247
extern int jobacct_gather_p_set_proctrack_container_id(159,5308
extern int jobacct_gather_p_add_task(164,5404
extern jobacctinfo_t *jobacct_gather_p_stat_task(jobacct_gather_p_stat_task170,5507
extern jobacctinfo_t *jobacct_gather_p_remove_task(jobacct_gather_p_remove_task175,5586
extern void jobacct_gather_p_2_stats(180,5667

src/plugins/jobacct_gather/linux/jobacct_gather_linux.c,424
#define _DEBUG 54,2731
const char plugin_name[plugin_name85,4132
const char plugin_type[plugin_type86,4197
const uint32_t plugin_version 87,4248
static void _get_offspring_data(110,4924
static bool _run_in_daemon(136,5610
extern int init 153,5908
extern int fini 163,6046
extern void jobacct_gather_p_poll_data(191,6772
extern int jobacct_gather_p_endpoll(209,7171
extern int jobacct_gather_p_add_task(216,7262

src/plugins/jobacct_gather/aix/jobacct_gather_aix.c,485
#define NPROCS 56,2753
const char plugin_name[plugin_name88,4164
const char plugin_type[plugin_type89,4227
const uint32_t plugin_version 90,4276
static int pagesize 93,4346
static bool _run_in_daemon(95,4372
static void _get_offspring_data(143,5621
static List _get_precs(167,6241
extern void jobacct_gather_p_poll_data(242,8723
extern int init 265,9266
extern int fini 276,9439
extern int jobacct_gather_p_endpoll 287,9628
extern int jobacct_gather_p_add_task(293,9702

src/plugins/jobacct_gather/cgroup/jobacct_gather_cgroup.c,645
#define _DEBUG 54,2692
slurmd_conf_t *conf conf61,2916
int bg_recover 62,2966
slurmd_conf_t *conf;conf64,3039
int bg_recover 65,3060
const char plugin_name[plugin_name98,4490
const char plugin_type[plugin_type99,4556
const uint32_t plugin_version 100,4608
static slurm_cgroup_conf_t slurm_cgroup_conf;103,4678
static void _prec_extra(105,4725
static bool _run_in_daemon(176,7258
extern int init 193,7556
extern int fini 243,8791
extern void jobacct_gather_p_poll_data(274,9691
extern int jobacct_gather_p_endpoll(291,10046
extern int jobacct_gather_p_add_task(298,10137
extern char* jobacct_cgroup_create_slurm_cg(315,10584

src/plugins/jobacct_gather/cgroup/jobacct_gather_cgroup_cpuacct.c,623
#define PATH_MAX 54,2447
static char user_cgroup_path[user_cgroup_path57,2476
static char job_cgroup_path[job_cgroup_path58,2516
static char jobstep_cgroup_path[jobstep_cgroup_path59,2555
static char task_cgroup_path[task_cgroup_path60,2598
static xcgroup_ns_t cpuacct_ns;62,2639
static xcgroup_t user_cpuacct_cg;64,2672
static xcgroup_t job_cpuacct_cg;65,2706
static xcgroup_t step_cpuacct_cg;66,2739
xcgroup_t task_cpuacct_cg;67,2773
extern int jobacct_gather_cgroup_cpuacct_init(69,2801
extern int jobacct_gather_cgroup_cpuacct_fini(88,3306
extern int jobacct_gather_cgroup_cpuacct_attach_task(121,4158

src/plugins/jobacct_gather/cgroup/jobacct_gather_cgroup_memory.c,615
#define PATH_MAX 54,2443
static char user_cgroup_path[user_cgroup_path57,2472
static char job_cgroup_path[job_cgroup_path58,2512
static char jobstep_cgroup_path[jobstep_cgroup_path59,2551
static char task_cgroup_path[task_cgroup_path60,2594
static xcgroup_ns_t memory_ns;62,2635
static xcgroup_t user_memory_cg;64,2667
static xcgroup_t job_memory_cg;65,2700
static xcgroup_t step_memory_cg;66,2732
xcgroup_t task_memory_cg;67,2765
extern int jobacct_gather_cgroup_memory_init(70,2793
extern int jobacct_gather_cgroup_memory_fini(89,3292
extern int jobacct_gather_cgroup_memory_attach_task(129,4529

src/plugins/jobacct_gather/cgroup/jobacct_gather_cgroup.h,0

src/plugins/jobacct_gather/cgroup/jobacct_gather_cgroup_blkio.c,0

src/plugins/preempt/none/preempt_none.c,342
const char	plugin_name[plugin_name51,2461
const char	plugin_type[plugin_type52,2511
const uint32_t	plugin_version	53,2554
extern int init(58,2823
extern void fini(67,3139
extern List find_preemptable_jobs(75,3414
extern uint16_t job_preempt_mode(83,3733
extern bool preemption_enabled(91,4067
extern bool job_preempt_check(99,4358

src/plugins/preempt/partition_prio/preempt_partition_prio.c,420
const char	plugin_name[plugin_name52,2535
const char	plugin_type[plugin_type53,2602
const uint32_t	plugin_version	54,2655
extern int init(62,3030
extern void fini(71,3356
extern List find_preemptable_jobs(79,3631
static uint32_t _gen_job_prio(139,5568
static int _sort_by_prio 156,5861
extern uint16_t job_preempt_mode(179,6461
extern bool preemption_enabled(191,6947
extern bool job_preempt_check(199,7279

src/plugins/preempt/qos/preempt_qos.c,459
const char	plugin_name[plugin_name53,2577
const char	plugin_type[plugin_type54,2643
const uint32_t	plugin_version	55,2685
extern int init(65,3158
extern void fini(74,3473
extern List find_preemptable_jobs(82,3748
static bool _qos_preemptable(137,5367
static uint32_t _gen_job_prio(155,5989
static int _sort_by_prio 177,6483
extern uint16_t job_preempt_mode(200,7083
extern bool preemption_enabled(212,7589
extern bool job_preempt_check(220,7921

src/plugins/checkpoint/blcr/checkpoint_blcr.c,1763
void acct_policy_add_job_submit(82,3122
#define MAX_PATH_LEN 88,3288
struct check_job_info 90,3315
	uint16_t disabled;91,3339
	time_t   time_stamp;92,3402
	uint32_t error_code;93,3459
	char    *error_msg;error_msg94,3481
struct ckpt_req 97,3506
	uint32_t gid;98,3524
	uint32_t uid;99,3539
	uint32_t job_id;100,3554
	uint32_t step_id;101,3572
	time_t begin_time;102,3591
	uint16_t wait;103,3611
	char *image_dir;image_dir104,3627
	char *nodelist;nodelist105,3645
	uint32_t op;106,3662
	uint16_t sig_done;107,3676
static const char scch_path[scch_path122,4164
static const char cr_checkpoint_path[cr_checkpoint_path123,4223
static const char cr_restart_path[cr_restart_path124,4299
static uint32_t ckpt_agent_jobid 126,4370
static uint16_t ckpt_agent_count 127,4408
static pthread_mutex_t ckpt_agent_mutex 128,4446
static pthread_cond_t ckpt_agent_cond 129,4515
const char plugin_name[plugin_name159,5940
const char plugin_type[plugin_type160,6000
const uint32_t plugin_version	161,6053
extern int init 167,6220
extern int fini 174,6305
extern int slurm_ckpt_op 183,6472
extern int slurm_ckpt_comp 312,9462
extern int slurm_ckpt_task_comp 319,9677
extern int slurm_ckpt_alloc_job(327,9930
extern int slurm_ckpt_free_job(335,10145
extern int slurm_ckpt_pack_job(345,10371
extern int slurm_ckpt_unpack_job(382,11331
extern check_jobinfo_t slurm_ckpt_copy_job(421,12431
extern int slurm_ckpt_stepd_prefork(431,12770
extern int slurm_ckpt_signal_tasks(469,13782
extern int slurm_ckpt_restart_task(578,16284
static void _send_sig(604,16858
static void _requeue_when_finished(625,17496
static void *_ckpt_agent_thr(_ckpt_agent_thr653,18254
static void _ckpt_req_free(730,20453
static int _on_ckpt_complete(743,20679

src/plugins/checkpoint/none/checkpoint_none.c,647
const char plugin_name[plugin_name86,3841
const char plugin_type[plugin_type87,3901
const uint32_t plugin_version	88,3954
extern int init 94,4121
extern int fini 99,4174
extern int slurm_ckpt_op 108,4311
extern int slurm_ckpt_comp 116,4559
extern int slurm_ckpt_alloc_job(122,4712
extern int slurm_ckpt_free_job(127,4798
extern int slurm_ckpt_pack_job(132,4882
extern int slurm_ckpt_unpack_job(145,5157
extern check_jobinfo_t slurm_ckpt_copy_job(166,5587
extern int slurm_ckpt_task_comp 171,5674
extern int slurm_ckpt_stepd_prefork(178,5852
extern int slurm_ckpt_signal_tasks(183,5934
extern int slurm_ckpt_restart_task(188,6022

src/plugins/checkpoint/ompi/checkpoint_ompi.c,906
struct check_job_info 63,2642
	uint16_t disabled;64,2666
	uint16_t reply_cnt;65,2729
	uint16_t wait_time;66,2750
	time_t   time_stamp;67,2771
	uint32_t error_code;68,2828
	char    *error_msg;error_msg69,2850
const char plugin_name[plugin_name102,4315
const char plugin_type[plugin_type103,4378
const uint32_t plugin_version	104,4431
extern int init 110,4598
extern int fini 118,4851
extern int slurm_ckpt_op 127,4988
extern int slurm_ckpt_comp 194,6733
extern int slurm_ckpt_alloc_job(236,7959
extern int slurm_ckpt_free_job(242,8115
extern int slurm_ckpt_pack_job(248,8216
extern int slurm_ckpt_unpack_job(290,9337
extern check_jobinfo_t slurm_ckpt_copy_job(333,10631
static int _ckpt_step(343,10970
extern int slurm_ckpt_task_comp 375,11715
extern int slurm_ckpt_stepd_prefork(382,11896
extern int slurm_ckpt_signal_tasks(387,11978
extern int slurm_ckpt_restart_task(392,12066

src/plugins/checkpoint/poe/checkpoint_poe.c,1819
struct node_record *node_record_table_ptr node_record_table_ptr81,3400
int node_record_count 82,3450
struct check_job_info 84,3478
	uint16_t disabled;85,3502
	uint16_t node_cnt;86,3565
	uint16_t reply_cnt;87,3585
	uint16_t wait_time;88,3606
	time_t   time_stamp;89,3627
	uint32_t error_code;90,3684
	char    *error_msg;error_msg91,3706
static bool		ckpt_agent_stop 100,4016
static pthread_t	ckpt_agent_tid 101,4054
static pthread_mutex_t	ckpt_agent_mutex 102,4091
static pthread_cond_t	ckpt_agent_cond 103,4160
static List		ckpt_timeout_list 104,4226
struct ckpt_timeout_info 105,4265
	uint32_t   job_id;106,4292
	uint32_t   step_id;107,4312
	uint16_t   signal;108,4333
	time_t     start_time;109,4353
	time_t     end_time;110,4377
	char      *node_name;node_name111,4399
	slurm_addr_t node_addr;112,4422
const char plugin_name[plugin_name151,6221
const char plugin_type[plugin_type152,6280
const uint32_t plugin_version	153,6332
extern int init 159,6499
extern int fini 176,6866
extern int slurm_ckpt_op 195,7284
extern int slurm_ckpt_comp 272,9291
extern int slurm_ckpt_alloc_job(309,10453
extern int slurm_ckpt_free_job(315,10609
extern int slurm_ckpt_pack_job(321,10710
extern int slurm_ckpt_unpack_job(365,11908
extern check_jobinfo_t slurm_ckpt_copy_job(410,13296
static void _send_sig(422,13742
static int _step_sig(445,14479
static void _my_sleep(493,15799
static void *_ckpt_agent_thr(_ckpt_agent_thr506,16163
static void _ckpt_signal_step(537,16824
static void _ckpt_enqueue_timeout(545,17090
static void _ckpt_timeout_free(570,17874
static void _ckpt_dequeue_timeout(581,18131
extern int slurm_ckpt_task_comp 604,18736
extern int slurm_ckpt_stepd_prefork(611,18917
extern int slurm_ckpt_signal_tasks(616,18999
extern int slurm_ckpt_restart_task(621,19087

src/plugins/checkpoint/aix/checkpoint_aix.c,1693
struct node_record *node_record_table_ptr node_record_table_ptr76,3018
int node_record_count 77,3068
struct check_job_info 79,3096
	uint16_t disabled;80,3120
	uint16_t node_cnt;81,3183
	uint16_t reply_cnt;82,3203
	uint16_t wait_time;83,3224
	time_t   time_stamp;84,3245
	uint32_t error_code;85,3302
	char    *error_msg;error_msg86,3324
static pthread_t	ckpt_agent_tid 95,3622
static pthread_mutex_t	ckpt_agent_mutex 96,3659
static List		ckpt_timeout_list 97,3728
struct ckpt_timeout_info 98,3767
	uint32_t   job_id;99,3794
	uint32_t   step_id;100,3814
	uint16_t   signal;101,3835
	time_t     start_time;102,3855
	time_t     end_time;103,3879
	char      *node_name;node_name104,3901
	slurm_addr_t node_addr;105,3924
const char plugin_name[plugin_name143,5722
const char plugin_type[plugin_type144,5781
const uint32_t plugin_version	145,5833
extern int init 151,6000
extern int fini 168,6367
extern int slurm_ckpt_op 190,6738
extern int slurm_ckpt_comp 267,8746
extern int slurm_ckpt_alloc_job(304,9908
extern int slurm_ckpt_free_job(310,10064
extern int slurm_ckpt_pack_job(316,10165
extern int slurm_ckpt_unpack_job(359,11362
extern check_jobinfo_t slurm_ckpt_copy_job(404,12750
static void _send_sig(415,13136
static int _step_sig(438,13873
static void *_ckpt_agent_thr(_ckpt_agent_thr488,15286
static void _ckpt_signal_step(516,15896
static void _ckpt_enqueue_timeout(524,16162
static void _ckpt_timeout_free(549,16946
static void _ckpt_dequeue_timeout(560,17203
extern int slurm_ckpt_task_comp 583,17808
extern int slurm_ckpt_stepd_prefork(590,17989
extern int slurm_ckpt_signal_tasks(595,18071
extern int slurm_ckpt_restart_task(600,18159

src/plugins/accounting_storage/filetxt/accounting_storage_filetxt.c,3542
const char plugin_name[plugin_name75,3781
const char plugin_type[plugin_type76,3845
const uint32_t plugin_version 77,3902
static FILE *		LOGFILE;78,3939
static int		LOGFILE_FD;79,3963
static pthread_mutex_t  logfile_lock 80,3987
static int              storage_init;81,4053
const char *_jobstep_format _jobstep_format83,4127
static int _print_record(136,5376
static char *_safe_dup(_safe_dup176,6384
extern int init 198,6817
extern int fini 259,8415
extern void * acct_storage_p_get_connection(266,8501
extern int acct_storage_p_close_connection(273,8740
extern int acct_storage_p_commit(278,8827
extern int acct_storage_p_add_users(283,8916
extern int acct_storage_p_add_coord(289,9033
extern int acct_storage_p_add_accts(295,9179
extern int acct_storage_p_add_clusters(301,9296
extern int acct_storage_p_add_associations(307,9422
extern int acct_storage_p_add_qos(313,9553
extern int acct_storage_p_add_res(319,9665
extern int acct_storage_p_add_wckeys(325,9777
extern int acct_storage_p_add_reservation(331,9894
extern List acct_storage_p_modify_users(337,10019
extern List acct_storage_p_modify_accts(344,10193
extern List acct_storage_p_modify_clusters(351,10367
extern List acct_storage_p_modify_associations(358,10548
extern List acct_storage_p_modify_job(365,10745
extern List acct_storage_p_modify_qos(372,10921
extern List acct_storage_p_modify_res(379,11090
extern List acct_storage_p_modify_wckeys(386,11267
extern int acct_storage_p_modify_reservation(393,11447
extern List acct_storage_p_remove_users(399,11578
extern List acct_storage_p_remove_coord(405,11715
extern List acct_storage_p_remove_accts(412,11867
extern List acct_storage_p_remove_clusters(418,12007
extern List acct_storage_p_remove_associations(424,12149
extern List acct_storage_p_remove_qos(430,12301
extern List acct_storage_p_remove_res(436,12427
extern List acct_storage_p_remove_wckeys(442,12553
extern int acct_storage_p_remove_reservation(448,12686
extern List acct_storage_p_get_users(454,12817
extern List acct_storage_p_get_accts(460,12937
extern List acct_storage_p_get_clusters(466,13060
extern List acct_storage_p_get_config(472,13185
extern List acct_storage_p_get_associations(477,13276
extern List acct_storage_p_get_events(483,13411
extern List acct_storage_p_get_problems(489,13541
extern List acct_storage_p_get_qos(495,13668
extern List acct_storage_p_get_res(501,13785
extern List acct_storage_p_get_wckeys(507,13902
extern List acct_storage_p_get_reservations(513,14029
extern List acct_storage_p_get_txn(519,14169
extern int acct_storage_p_get_usage(525,14286
extern int acct_storage_p_roll_usage(534,14453
extern int clusteracct_storage_p_node_down(543,14625
extern int clusteracct_storage_p_node_up(550,14818
extern int clusteracct_storage_p_register_ctld(557,14963
extern int clusteracct_storage_p_register_disconn_ctld(562,15068
extern int clusteracct_storage_p_fini_ctld(568,15188
extern int clusteracct_storage_p_cluster_cpus(575,15336
extern int jobacct_storage_p_job_start(586,15564
extern int jobacct_storage_p_job_complete(647,16977
extern int jobacct_storage_p_step_start(690,18120
extern int jobacct_storage_p_step_complete(797,21023
extern int jobacct_storage_p_suspend(950,25319
extern List jobacct_storage_p_get_jobs_cond(988,26271
extern int jobacct_storage_p_archive(997,26480
extern int jobacct_storage_p_archive_load(1007,26676
extern int acct_storage_p_update_shares_used(1013,26799
extern int acct_storage_p_flush_jobs_on_cluster(1019,26915

src/plugins/accounting_storage/filetxt/filetxt_jobacct_process.c,4657
#define BATCH_JOB_TIMESTAMP 57,2838
#define EXPIRE_READ_LENGTH 58,2868
#define MAX_RECORD_FIELDS 59,2898
typedef struct expired_rec 61,2929
	uint32_t job;62,2987
	time_t job_submit;63,3002
	char *line;line64,3022
} expired_rec_t;65,3035
typedef struct header 67,3053
	uint32_t jobnum;68,3077
	char	*partition;partition69,3095
	char	*blockid;blockid70,3113
	time_t 	job_submit;71,3129
	time_t 	timestamp;72,3150
	uint32_t uid;73,3170
	uint32_t gid;74,3185
} filetxt_header_t;75,3200
	uint32_t job_start_seen,78,3238
		job_step_seen,79,3284
		job_terminated_seen,80,3301
		jobnum_superseded;81,3324
	filetxt_header_t header;82,3375
	uint16_t show_full;83,3401
	char	*nodes;nodes84,3422
	char	*jobname;jobname85,3436
	uint16_t track_steps;86,3452
	int32_t priority;87,3475
	uint32_t ncpus;88,3494
	uint32_t ntasks;89,3511
	enum job_states	status;90,3529
	int32_t	exitcode;91,3554
	uint32_t elapsed;92,3573
	time_t end;93,3592
	uint32_t tot_cpu_sec;94,3605
	uint32_t tot_cpu_usec;95,3628
	struct rusage rusage;96,3652
	slurmdb_stats_t stats;97,3675
	List    steps;98,3699
	char    *account;account99,3715
	uint32_t requid;100,3734
} filetxt_job_rec_t;101,3752
	filetxt_header_t   header;104,3791
	uint32_t	stepnum;105,3819
	char	        *nodes;nodes106,3862
	char	        *stepname;stepname107,3884
	enum job_states	status;108,3909
	int32_t	        exitcode;109,3934
	uint32_t	ntasks;110,3961
	uint32_t        ncpus;111,3979
	uint32_t	elapsed;112,4003
	time_t          end;113,4022
	uint32_t	tot_cpu_sec;114,4044
	uint32_t        tot_cpu_usec;115,4067
	struct rusage   rusage;116,4098
	slurmdb_stats_t stats;117,4123
	char            *account;account118,4147
	uint32_t requid;119,4174
} filetxt_step_rec_t;120,4192
enum {	F_JOB 123,4250
	F_PARTITION,124,4268
	F_JOB_SUBMIT,125,4282
	F_TIMESTAMP,126,4297
	F_UID,127,4311
	F_GID,128,4319
	F_BLOCKID,129,4327
	F_RESERVED2,130,4339
	F_RECTYPE,131,4353
	HEADER_LENGTH132,4365
enum {	F_JOBNAME 136,4407
enum {	F_JOBNAME = HEADER_LENGTH,136,4407
	F_TRACK_STEPS,137,4441
	F_PRIORITY,138,4457
	F_NCPUS,139,4470
	F_NODES,140,4480
	F_JOB_ACCOUNT,141,4490
	JOB_START_LENGTH142,4506
enum {	F_JOBSTEP 146,4550
enum {	F_JOBSTEP = HEADER_LENGTH,146,4550
	F_STATUS,147,4584
	F_EXITCODE,148,4595
	F_NTASKS,149,4608
	F_STEPNCPUS,150,4619
	F_ELAPSED,151,4633
	F_CPU_SEC,152,4645
	F_CPU_USEC,153,4657
	F_USER_SEC,154,4670
	F_USER_USEC,155,4683
	F_SYS_SEC,156,4697
	F_SYS_USEC,157,4709
	F_RSS,158,4722
	F_IXRSS,159,4730
	F_IDRSS,160,4740
	F_ISRSS,161,4750
	F_MINFLT,162,4760
	F_MAJFLT,163,4771
	F_NSWAP,164,4782
	F_INBLOCKS,165,4792
	F_OUBLOCKS,166,4805
	F_MSGSND,167,4818
	F_MSGRCV,168,4829
	F_NSIGNALS,169,4840
	F_NVCSW,170,4853
	F_NIVCSW,171,4863
	F_MAX_VSIZE,172,4874
	F_MAX_VSIZE_TASK,173,4888
	F_AVE_VSIZE,174,4907
	F_MAX_RSS,175,4921
	F_MAX_RSS_TASK,176,4933
	F_AVE_RSS,177,4950
	F_MAX_PAGES,178,4962
	F_MAX_PAGES_TASK,179,4976
	F_AVE_PAGES,180,4995
	F_MIN_CPU,181,5009
	F_MIN_CPU_TASK,182,5021
	F_AVE_CPU,183,5038
	F_STEPNAME,184,5050
	F_STEPNODES,185,5063
	F_MAX_VSIZE_NODE,186,5077
	F_MAX_RSS_NODE,187,5096
	F_MAX_PAGES_NODE,188,5113
	F_MIN_CPU_NODE,189,5132
	F_STEP_ACCOUNT,190,5149
	F_STEP_REQUID,191,5166
	JOB_STEP_LENGTH192,5182
enum {	F_TOT_ELAPSED 196,5239
enum {	F_TOT_ELAPSED = HEADER_LENGTH,196,5239
	F_TERM_STATUS,197,5277
	F_JOB_REQUID,198,5293
	F_JOB_EXITCODE,199,5308
	JOB_TERM_LENGTH200,5325
static void _destroy_exp(203,5346
static void _free_filetxt_header(212,5502
static void _destroy_filetxt_job_rec(223,5704
static void _destroy_filetxt_step_rec(237,5996
static slurmdb_step_rec_t *_slurmdb_create_step_rec(_slurmdb_create_step_rec249,6252
static slurmdb_job_rec_t *_slurmdb_create_job_rec(_slurmdb_create_job_rec281,7560
static filetxt_job_rec_t *_create_filetxt_job_rec(_create_filetxt_job_rec367,10498
static filetxt_step_rec_t *_create_filetxt_step_rec(_create_filetxt_step_rec398,11329
static char *_prefix_filename(_prefix_filename427,12225
static FILE *_open_log_file(_open_log_file457,12799
static int _cmp_jrec(467,12944
static void _show_rec(482,13250
static filetxt_job_rec_t *_find_job_record(_find_job_record492,13410
static filetxt_step_rec_t *_find_step_record(_find_step_record531,14387
static int _parse_header(549,14785
static int _parse_line(562,15148
static void _process_start(695,19868
static void _process_step(727,20682
static void _process_suspend(825,23494
static void _process_terminated(847,24097
extern List filetxt_jobacct_process_get_jobs(898,25599
extern int filetxt_jobacct_process_archive(1127,30858

src/plugins/accounting_storage/filetxt/filetxt_jobacct_process.h,80
#define _HAVE_FILETXT_JOBSLURMDB_PROCESS_H45,2416
#define BUFFER_SIZE 55,2667

src/plugins/accounting_storage/common/common_as.c,827
static int _sort_update_object_dec(68,2878
static void _dump_slurmdb_assoc_records(82,3305
static void _dump_slurmdb_clus_res_record(94,3577
static void _dump_slurmdb_clus_res_records(100,3765
static void _dump_slurmdb_res_records(111,4059
extern int addto_update_list(141,5023
extern void dump_update_list(306,10299
extern int cluster_first_reg(370,11909
extern int set_usage_information(417,13289
extern void merge_delta_qos_list(527,16015
extern bool is_user_min_admin_level(558,16815
extern bool is_user_coord(580,17439
extern bool is_user_any_coord(600,17857
extern char *acct_get_db_name(acct_get_db_name615,18306
extern time_t archive_setup_end_time(642,18862
extern int archive_run_script(690,19931
static char *_make_archive_name(_make_archive_name805,23124
extern int archive_write_file(853,24334

src/plugins/accounting_storage/common/common_as.h,34
#define _HAVE_COMMON_AS_H42,2261

src/plugins/accounting_storage/mysql/accounting_storage_mysql.c,5719
char *slurmctld_cluster_name slurmctld_cluster_name71,3361
char *slurmctld_cluster_name slurmctld_cluster_name73,3434
List as_mysql_cluster_list 76,3479
List as_mysql_total_cluster_list 81,3674
pthread_mutex_t as_mysql_cluster_list_lock 82,3715
const char plugin_name[plugin_name114,5196
const char plugin_type[plugin_type115,5258
const uint32_t plugin_version 116,5316
static mysql_db_info_t *mysql_db_info mysql_db_info118,5354
static char *mysql_db_name mysql_db_name119,5400
#define DELETE_SEC_BACK 121,5436
char *acct_coord_table acct_coord_table123,5467
char *acct_table acct_table124,5512
char *assoc_day_table assoc_day_table125,5545
char *assoc_hour_table assoc_hour_table126,5594
char *assoc_month_table assoc_month_table127,5645
char *assoc_table assoc_table128,5698
char *clus_res_table clus_res_table129,5733
char *cluster_day_table cluster_day_table130,5774
char *cluster_hour_table cluster_hour_table131,5819
char *cluster_month_table cluster_month_table132,5866
char *cluster_table cluster_table133,5915
char *event_table event_table134,5954
char *job_table job_table135,5989
char *last_ran_table last_ran_table136,6020
char *qos_table qos_table137,6061
char *resv_table resv_table138,6092
char *res_table res_table139,6125
char *step_table step_table140,6156
char *txn_table txn_table141,6189
char *user_table user_table142,6220
char *suspend_table suspend_table143,6253
char *wckey_day_table wckey_day_table144,6292
char *wckey_hour_table wckey_hour_table145,6341
char *wckey_month_table wckey_month_table146,6392
char *wckey_table wckey_table147,6445
static char *default_qos_str default_qos_str149,6481
	JASSOC_JOB,152,6526
	JASSOC_ACCT,153,6539
	JASSOC_USER,154,6553
	JASSOC_PART,155,6567
	JASSOC_COUNT156,6581
static List _get_cluster_names(161,6671
static int _set_qos_cnt(210,7823
static void _process_running_jobs_result(238,8483
static bool _check_jobs_before_remove(268,9475
static bool _check_jobs_before_remove_assoc(344,11408
static bool _check_jobs_before_remove_without_assoctable(414,13221
static int _as_mysql_acct_check_tables(444,13936
extern int check_connection(825,26455
extern int last_affected_rows(866,27601
extern void reset_mysql_conn(889,28126
extern int create_cluster_tables(897,28322
extern int remove_cluster_tables(1299,43212
extern int setup_association_limits(1359,45239
extern int modify_common(1672,55530
extern int remove_common(1738,57417
extern int init 2094,68434
extern int fini 2152,69929
extern void *acct_storage_p_get_connection(acct_storage_p_get_connection2172,70465
extern int acct_storage_p_close_connection(2210,71498
extern int acct_storage_p_commit(2224,71759
extern int acct_storage_p_add_users(2335,74770
extern int acct_storage_p_add_coord(2341,74931
extern int acct_storage_p_add_accts(2348,75143
extern int acct_storage_p_add_clusters(2354,75304
extern int acct_storage_p_add_associations(2360,75480
extern int acct_storage_p_add_qos(2367,75671
extern int acct_storage_p_add_res(2373,75824
extern int acct_storage_p_add_wckeys(2379,75977
extern int acct_storage_p_add_reservation(2385,76143
extern List acct_storage_p_modify_users(2391,76301
extern List acct_storage_p_modify_accts(2398,76519
extern List acct_storage_p_modify_clusters(2405,76743
extern List acct_storage_p_modify_associations(2413,76999
extern List acct_storage_p_modify_job(2421,77237
extern List acct_storage_p_modify_qos(2428,77462
extern List acct_storage_p_modify_res(2435,77680
extern List acct_storage_p_modify_wckeys(2443,77899
extern int acct_storage_p_modify_reservation(2451,78133
extern List acct_storage_p_remove_users(2457,78300
extern List acct_storage_p_remove_coord(2463,78481
extern List acct_storage_p_remove_accts(2470,78694
extern List acct_storage_p_remove_clusters(2476,78878
extern List acct_storage_p_remove_associations(2483,79085
extern List acct_storage_p_remove_qos(2490,79281
extern List acct_storage_p_remove_res(2496,79460
extern List acct_storage_p_remove_wckeys(2503,79643
extern int acct_storage_p_remove_reservation(2510,79836
extern List acct_storage_p_get_users(2516,80003
extern List acct_storage_p_get_accts(2522,80179
extern List acct_storage_p_get_clusters(2528,80358
extern List acct_storage_p_get_associations(2534,80545
extern List acct_storage_p_get_events(2541,80732
extern List acct_storage_p_get_problems(2547,80925
extern List acct_storage_p_get_config(2574,81548
extern List acct_storage_p_get_qos(2579,81639
extern List acct_storage_p_get_res(2585,81806
extern List acct_storage_p_get_wckeys(2591,81977
extern List acct_storage_p_get_reservations(2597,82159
extern List acct_storage_p_get_txn(2604,82343
extern int acct_storage_p_get_usage(2610,82510
extern int acct_storage_p_roll_usage(2617,82733
extern int clusteracct_storage_p_node_down(2625,82962
extern int clusteracct_storage_p_node_up(2639,83347
extern int clusteracct_storage_p_register_ctld(2654,83768
extern uint16_t clusteracct_storage_p_register_disconn_ctld(2666,84067
extern int clusteracct_storage_p_fini_ctld(2718,85754
extern int clusteracct_storage_p_cluster_cpus(2732,86154
extern int jobacct_storage_p_job_start(2749,86570
extern int jobacct_storage_p_job_complete(2758,86777
extern int jobacct_storage_p_step_start(2767,86993
extern int jobacct_storage_p_step_complete(2776,87204
extern int jobacct_storage_p_suspend(2785,87424
extern List jobacct_storage_p_get_jobs_cond(2796,87689
extern int jobacct_storage_p_archive(2813,88055
extern int jobacct_storage_p_archive_load(2825,88357
extern int acct_storage_p_update_shares_used(2834,88623
extern int acct_storage_p_flush_jobs_on_cluster(2841,88808

src/plugins/accounting_storage/mysql/accounting_storage_mysql.h,363
#define _HAVE_ACCOUNTING_STORAGE_MYSQL_H42,2306
#define	fatal	52,2613
#define	error	53,2641
#define	info	54,2669
#define	verbose	55,2695
#define	debug	56,2727
#define	debug2	57,2755
#define	debug3	58,2785
#define	debug4	59,2815
#define	debug5	60,2845
	QOS_LEVEL_NONE,109,4093
	QOS_LEVEL_SET,110,4110
	QOS_LEVEL_MODIFY111,4126
} qos_level_t;112,4144

src/plugins/accounting_storage/mysql/as_mysql_acct.c,330
static int _get_account_coords(47,2400
extern int as_mysql_add_accts(122,4403
extern List as_mysql_modify_accts(238,7528
extern List as_mysql_remove_accts(372,10805
extern List as_mysql_get_accts(519,14401
		SLURMDB_REQ_NAME,542,14933
		SLURMDB_REQ_DESC,543,14953
		SLURMDB_REQ_ORG,544,14973
		SLURMDB_REQ_COUNT545,14992

src/plugins/accounting_storage/mysql/as_mysql_acct.h,35
#define _HAVE_MYSQL_ACCT_H40,2199

src/plugins/accounting_storage/mysql/as_mysql_archive.c,8026
	char *cluster_nodes;cluster_nodes50,2380
	char *cpu_count;cpu_count51,2402
	char *node_name;node_name52,2420
	char *period_end;period_end53,2438
	char *period_start;period_start54,2457
	char *reason;reason55,2478
	char *reason_uid;reason_uid56,2493
	char *state;state57,2512
} local_event_t;58,2526
	char *account;account61,2561
	char *alloc_cpus;alloc_cpus62,2577
	char *alloc_nodes;alloc_nodes63,2596
	char *associd;associd64,2616
	char *blockid;blockid65,2632
	char *derived_ec;derived_ec66,2648
	char *derived_es;derived_es67,2667
	char *exit_code;exit_code68,2686
	char *eligible;eligible69,2704
	char *end;end70,2721
	char *gid;gid71,2733
	char *id;id72,2745
	char *jobid;jobid73,2756
	char *kill_requid;kill_requid74,2770
	char *name;name75,2790
	char *nodelist;nodelist76,2803
	char *node_inx;node_inx77,2820
	char *partition;partition78,2837
	char *priority;priority79,2855
	char *qos;qos80,2872
	char *req_cpus;req_cpus81,2884
	char *req_mem;req_mem82,2901
	char *resvid;resvid83,2917
	char *start;start84,2932
	char *state;state85,2946
	char *submit;submit86,2960
	char *suspended;suspended87,2975
	char *timelimit;timelimit88,2993
	char *track_steps;track_steps89,3011
	char *uid;uid90,3031
	char *wckey;wckey91,3043
	char *wckey_id;wckey_id92,3057
} local_job_t;93,3074
	char *assocs;assocs96,3107
	char *cpus;cpus97,3122
	char *flags;flags98,3135
	char *id;id99,3149
	char *name;name100,3160
	char *nodes;nodes101,3173
	char *node_inx;node_inx102,3187
	char *time_end;time_end103,3204
	char *time_start;time_start104,3221
} local_resv_t;105,3240
	char *act_cpufreq;act_cpufreq108,3274
	char *ave_cpu;ave_cpu109,3294
	char *ave_disk_read;ave_disk_read110,3310
	char *ave_disk_write;ave_disk_write111,3332
	char *ave_pages;ave_pages112,3355
	char *ave_rss;ave_rss113,3373
	char *ave_vsize;ave_vsize114,3389
	char *exit_code;exit_code115,3407
	char *consumed_energy;consumed_energy116,3425
	char *cpus;cpus117,3449
	char *id;id118,3462
	char *kill_requid;kill_requid119,3473
	char *max_disk_read;max_disk_read120,3493
	char *max_disk_read_node;max_disk_read_node121,3515
	char *max_disk_read_task;max_disk_read_task122,3542
	char *max_disk_write;max_disk_write123,3569
	char *max_disk_write_node;max_disk_write_node124,3592
	char *max_disk_write_task;max_disk_write_task125,3620
	char *max_pages;max_pages126,3648
	char *max_pages_node;max_pages_node127,3666
	char *max_pages_task;max_pages_task128,3689
	char *max_rss;max_rss129,3712
	char *max_rss_node;max_rss_node130,3728
	char *max_rss_task;max_rss_task131,3749
	char *max_vsize;max_vsize132,3770
	char *max_vsize_node;max_vsize_node133,3788
	char *max_vsize_task;max_vsize_task134,3811
	char *min_cpu;min_cpu135,3834
	char *min_cpu_node;min_cpu_node136,3850
	char *min_cpu_task;min_cpu_task137,3871
	char *name;name138,3892
	char *nodelist;nodelist139,3905
	char *nodes;nodes140,3922
	char *node_inx;node_inx141,3936
	char *period_end;period_end142,3953
	char *period_start;period_start143,3972
	char *period_suspended;period_suspended144,3993
	char *req_cpufreq;req_cpufreq145,4018
	char *state;state146,4038
	char *stepid;stepid147,4052
	char *sys_sec;sys_sec148,4067
	char *sys_usec;sys_usec149,4083
	char *tasks;tasks150,4100
	char *task_dist;task_dist151,4114
	char *user_sec;user_sec152,4132
	char *user_usec;user_usec153,4149
} local_step_t;154,4167
	char *associd;associd157,4201
	char *id;id158,4217
	char *period_end;period_end159,4228
	char *period_start;period_start160,4247
} local_suspend_t;161,4268
char *event_req_inx[event_req_inx165,4364
	EVENT_REQ_START,177,4511
	EVENT_REQ_END,178,4529
	EVENT_REQ_NODE,179,4545
	EVENT_REQ_CNODES,180,4562
	EVENT_REQ_CPU,181,4581
	EVENT_REQ_REASON,182,4597
	EVENT_REQ_REASON_UID,183,4616
	EVENT_REQ_STATE,184,4639
	EVENT_REQ_COUNT185,4657
static char *job_req_inx[job_req_inx190,4754
	JOB_REQ_ACCOUNT,226,5235
	JOB_REQ_ALLOC_CPUS,227,5253
	JOB_REQ_ALLOC_NODES,228,5274
	JOB_REQ_ASSOCID,229,5296
	JOB_REQ_BLOCKID,230,5314
	JOB_REQ_DERIVED_EC,231,5332
	JOB_REQ_DERIVED_ES,232,5353
	JOB_REQ_EXIT_CODE,233,5374
	JOB_REQ_TIMELIMIT,234,5394
	JOB_REQ_ELIGIBLE,235,5414
	JOB_REQ_END,236,5433
	JOB_REQ_GID,237,5447
	JOB_REQ_ID,238,5461
	JOB_REQ_JOBID,239,5474
	JOB_REQ_KILL_REQUID,240,5490
	JOB_REQ_NAME,241,5512
	JOB_REQ_NODELIST,242,5527
	JOB_REQ_NODE_INX,243,5546
	JOB_REQ_RESVID,244,5565
	JOB_REQ_PARTITION,245,5582
	JOB_REQ_PRIORITY,246,5602
	JOB_REQ_QOS,247,5621
	JOB_REQ_REQ_CPUS,248,5635
	JOB_REQ_REQ_MEM,249,5654
	JOB_REQ_START,250,5672
	JOB_REQ_STATE,251,5688
	JOB_REQ_SUBMIT,252,5704
	JOB_REQ_SUSPENDED,253,5721
	JOB_REQ_TRACKSTEPS,254,5741
	JOB_REQ_UID,255,5762
	JOB_REQ_WCKEY,256,5776
	JOB_REQ_WCKEYID,257,5792
	JOB_REQ_COUNT258,5810
char *resv_req_inx[resv_req_inx262,5896
	RESV_REQ_ID,275,6045
	RESV_REQ_ASSOCS,276,6059
	RESV_REQ_CPUS,277,6077
	RESV_REQ_FLAGS,278,6093
	RESV_REQ_NODES,279,6110
	RESV_REQ_NODE_INX,280,6127
	RESV_REQ_NAME,281,6147
	RESV_REQ_START,282,6163
	RESV_REQ_END,283,6180
	RESV_REQ_COUNT284,6195
static char *step_req_inx[step_req_inx289,6291
	STEP_REQ_ID,340,7066
	STEP_REQ_STEPID,341,7080
	STEP_REQ_START,342,7098
	STEP_REQ_END,343,7115
	STEP_REQ_SUSPENDED,344,7130
	STEP_REQ_NAME,345,7151
	STEP_REQ_NODELIST,346,7167
	STEP_REQ_NODE_INX,347,7187
	STEP_REQ_STATE,348,7207
	STEP_REQ_KILL_REQUID,349,7224
	STEP_REQ_EXIT_CODE,350,7247
	STEP_REQ_NODES,351,7268
	STEP_REQ_CPUS,352,7285
	STEP_REQ_TASKS,353,7301
	STEP_REQ_TASKDIST,354,7318
	STEP_REQ_USER_SEC,355,7338
	STEP_REQ_USER_USEC,356,7358
	STEP_REQ_SYS_SEC,357,7379
	STEP_REQ_SYS_USEC,358,7398
	STEP_REQ_MAX_VSIZE,359,7418
	STEP_REQ_MAX_VSIZE_TASK,360,7439
	STEP_REQ_MAX_VSIZE_NODE,361,7465
	STEP_REQ_AVE_VSIZE,362,7491
	STEP_REQ_MAX_RSS,363,7512
	STEP_REQ_MAX_RSS_TASK,364,7531
	STEP_REQ_MAX_RSS_NODE,365,7555
	STEP_REQ_AVE_RSS,366,7579
	STEP_REQ_MAX_PAGES,367,7598
	STEP_REQ_MAX_PAGES_TASK,368,7619
	STEP_REQ_MAX_PAGES_NODE,369,7645
	STEP_REQ_AVE_PAGES,370,7671
	STEP_REQ_MIN_CPU,371,7692
	STEP_REQ_MIN_CPU_TASK,372,7711
	STEP_REQ_MIN_CPU_NODE,373,7735
	STEP_REQ_AVE_CPU,374,7759
	STEP_REQ_ACT_CPUFREQ,375,7778
	STEP_REQ_CONSUMED_ENERGY,376,7801
	STEP_REQ_REQ_CPUFREQ,377,7828
	STEP_REQ_MAX_DISK_READ,378,7851
	STEP_REQ_MAX_DISK_READ_TASK,379,7876
	STEP_REQ_MAX_DISK_READ_NODE,380,7906
	STEP_REQ_AVE_DISK_READ,381,7936
	STEP_REQ_MAX_DISK_WRITE,382,7961
	STEP_REQ_MAX_DISK_WRITE_TASK,383,7987
	STEP_REQ_MAX_DISK_WRITE_NODE,384,8018
	STEP_REQ_AVE_DISK_WRITE,385,8049
	STEP_REQ_COUNT,386,8075
static char *suspend_req_inx[suspend_req_inx391,8172
	SUSPEND_REQ_ID,399,8274
	SUSPEND_REQ_ASSOCID,400,8291
	SUSPEND_REQ_START,401,8313
	SUSPEND_REQ_END,402,8333
	SUSPEND_REQ_COUNT403,8351
static int high_buffer_size 406,8374
static void _pack_local_event(408,8420
static int _unpack_local_event(423,8954
static void _pack_local_job(440,9517
static int _unpack_local_job(479,10868
static void _pack_local_resv(553,14278
static int _unpack_local_resv(569,14815
static void _pack_local_step(587,15396
static int _unpack_local_step(716,20333
static void _pack_local_suspend(847,26949
static int _unpack_local_suspend(858,27327
static int _process_old_sql_line(871,27674
static int _process_old_sql(1360,40714
static uint32_t _archive_events(1383,41150
_load_events(1465,43364
static uint32_t _archive_jobs(1512,44494
static char *_load_jobs(_load_jobs1617,47566
static uint32_t _archive_resvs(1688,49205
static char *_load_resvs(_load_resvs1770,51391
static uint32_t _archive_steps(1817,52516
static char *_load_steps(_load_steps1936,56519
static uint32_t _archive_suspend(2021,58628
static char *_load_suspend(_load_suspend2098,60692
static int _execute_archive(2140,61691
extern int as_mysql_jobacct_process_archive(2345,67533
extern int as_mysql_jobacct_process_archive_load(2379,68468

src/plugins/accounting_storage/mysql/as_mysql_archive.h,38
#define _HAVE_MYSQL_ARCHIVE_H41,2211

src/plugins/accounting_storage/mysql/as_mysql_assoc.c,3365
char *assoc_req_inx[assoc_req_inx44,2302
	ASSOC_REQ_ID,74,2722
	ASSOC_REQ_LFT,75,2737
	ASSOC_REQ_RGT,76,2753
	ASSOC_REQ_USER,77,2769
	ASSOC_REQ_ACCT,78,2786
	ASSOC_REQ_PART,79,2803
	ASSOC_REQ_FS,80,2820
	ASSOC_REQ_GCM,81,2835
	ASSOC_REQ_GCRM,82,2851
	ASSOC_REQ_GC,83,2868
	ASSOC_REQ_GJ,84,2883
	ASSOC_REQ_GMEM,85,2898
	ASSOC_REQ_GN,86,2915
	ASSOC_REQ_GSJ,87,2930
	ASSOC_REQ_GW,88,2946
	ASSOC_REQ_MCMPJ,89,2961
	ASSOC_REQ_MCRM,90,2979
	ASSOC_REQ_MCPJ,91,2996
	ASSOC_REQ_MJ,92,3013
	ASSOC_REQ_MNPJ,93,3028
	ASSOC_REQ_MSJ,94,3045
	ASSOC_REQ_MWPJ,95,3061
	ASSOC_REQ_PARENT,96,3078
	ASSOC_REQ_DEF_QOS,97,3097
	ASSOC_REQ_QOS,98,3117
	ASSOC_REQ_DELTA_QOS,99,3133
	ASSOC_REQ_DEFAULT,100,3155
	ASSOC_REQ_COUNT101,3175
static char *get_parent_limits_select get_parent_limits_select104,3196
	ASSOC2_REQ_PARENT_ID,110,3350
	ASSOC2_REQ_MJ,111,3373
	ASSOC2_REQ_MSJ,112,3389
	ASSOC2_REQ_MCPJ,113,3406
	ASSOC2_REQ_MNPJ,114,3424
	ASSOC2_REQ_MWPJ,115,3442
	ASSOC2_REQ_MCMPJ,116,3460
	ASSOC2_REQ_MCRM,117,3479
	ASSOC2_REQ_DEF_QOS,118,3497
	ASSOC2_REQ_QOS,119,3518
	ASSOC2_REQ_DELTA_QOS,120,3535
static char *aassoc_req_inx[aassoc_req_inx123,3562
	AASSOC_ID,132,3663
	AASSOC_PACCT,133,3675
	AASSOC_LFT,134,3690
	AASSOC_RGT,135,3703
	AASSOC_DELETED,136,3716
	AASSOC_COUNT137,3733
static char *massoc_req_inx[massoc_req_inx140,3751
	MASSOC_ID,152,3883
	MASSOC_ACCT,153,3895
	MASSOC_PACCT,154,3909
	MASSOC_USER,155,3924
	MASSOC_PART,156,3938
	MASSOC_LFT,157,3952
	MASSOC_RGT,158,3965
	MASSOC_QOS,159,3978
	MASSOC_COUNT160,3991
static char *rassoc_req_inx[rassoc_req_inx165,4107
	RASSOC_ID,175,4222
	RASSOC_LFT,176,4234
	RASSOC_ACCT,177,4247
	RASSOC_PACCT,178,4261
	RASSOC_USER,179,4276
	RASSOC_PART,180,4290
	RASSOC_COUNT181,4304
static int _assoc_sort_cluster(184,4322
static int _reset_default_assoc(202,4764
static int _make_sure_users_have_default(271,6803
static int _move_account(354,8936
static int _move_parent(459,12143
static uint32_t _get_parent_id(534,14169
static int _set_assoc_lft_rgt(568,14968
static int _set_assoc_limits_for_add(604,15793
		ASSOC_REQ_PARENT_ID,614,16014
		ASSOC_REQ_MJ,615,16037
		ASSOC_REQ_MSJ,616,16053
		ASSOC_REQ_MCPJ,617,16070
		ASSOC_REQ_MNPJ,618,16088
		ASSOC_REQ_MWPJ,619,16106
		ASSOC_REQ_MCMPJ,620,16124
		ASSOC_REQ_MCRM,621,16143
		ASSOC_REQ_QOS,622,16161
		ASSOC_REQ_DELTA_QOS,623,16178
static int _modify_unset_users(720,19044
		ASSOC_ID,751,19613
		ASSOC_USER,752,19625
		ASSOC_ACCT,753,19639
		ASSOC_PART,754,19653
		ASSOC_MJ,755,19667
		ASSOC_MSJ,756,19679
		ASSOC_MNPJ,757,19692
		ASSOC_MCPJ,758,19706
		ASSOC_MWPJ,759,19720
		ASSOC_MCMPJ,760,19734
		ASSOC_MCRM,761,19749
		ASSOC_DEF_QOS,762,19763
		ASSOC_QOS,763,19780
		ASSOC_DELTA_QOS,764,19793
		ASSOC_LFT,765,19812
		ASSOC_RGT,766,19825
		ASSOC_COUNT767,19838
static char *_setup_association_cond_qos(_setup_association_cond_qos959,25050
static int _setup_association_cond_limits(1011,26612
static int _process_modify_assoc_results(1390,36232
static int _process_remove_assoc_results(1823,48908
static int _cluster_get_assocs(1939,51981
extern int as_mysql_get_modified_lfts(2384,63619
extern int as_mysql_add_assocs(2420,64663
extern List as_mysql_modify_assocs(3005,81491
extern List as_mysql_remove_assocs(3170,86063
extern List as_mysql_get_assocs(3317,89905

src/plugins/accounting_storage/mysql/as_mysql_assoc.h,36
#define _HAVE_MYSQL_ASSOC_H41,2206

src/plugins/accounting_storage/mysql/as_mysql_cluster.c,1034
static int _setup_cluster_cond_limits(46,2327
extern int as_mysql_add_clusters(119,4099
extern List as_mysql_modify_clusters(309,9312
extern List as_mysql_remove_clusters(465,13018
extern List as_mysql_get_clusters(601,16620
		CLUSTER_REQ_NAME,630,17325
		CLUSTER_REQ_CLASS,631,17345
		CLUSTER_REQ_CH,632,17366
		CLUSTER_REQ_CP,633,17384
		CLUSTER_REQ_VERSION,634,17402
		CLUSTER_REQ_DIMS,635,17425
		CLUSTER_REQ_FLAGS,636,17445
		CLUSTER_REQ_PI_SELECT,637,17466
		CLUSTER_REQ_COUNT638,17491
extern List as_mysql_get_cluster_events(783,21341
		EVENT_REQ_CNODES,812,21962
		EVENT_REQ_CPU,813,21982
		EVENT_REQ_NODE,814,21999
		EVENT_REQ_STATE,815,22017
		EVENT_REQ_START,816,22036
		EVENT_REQ_END,817,22055
		EVENT_REQ_REASON,818,22072
		EVENT_REQ_REASON_UID,819,22092
		EVENT_REQ_COUNT820,22116
extern int as_mysql_node_down(1032,27172
extern int as_mysql_node_up(1093,29078
extern int as_mysql_register_ctld(1115,29656
extern int as_mysql_fini_ctld(1170,31397
extern int as_mysql_cluster_cpus(1240,33594

src/plugins/accounting_storage/mysql/as_mysql_cluster.h,38
#define _HAVE_MYSQL_CLUSTER_H40,2205

src/plugins/accounting_storage/mysql/as_mysql_jobacct_process.c,2984
	hostlist_t hl;48,2497
	time_t start;49,2513
	time_t end;50,2528
	bitstr_t *asked_bitmap;asked_bitmap51,2541
} local_cluster_t;52,2566
char *job_req_inx[job_req_inx56,2683
	JOB_REQ_ACCOUNT1,95,3286
	JOB_REQ_ALLOC_CPUS,96,3305
	JOB_REQ_REQ_CPUS,97,3326
	JOB_REQ_DERIVED_EC,98,3345
	JOB_REQ_DERIVED_ES,99,3366
	JOB_REQ_EXIT_CODE,100,3387
	JOB_REQ_ASSOCID,101,3407
	JOB_REQ_BLOCKID,102,3425
	JOB_REQ_GID,103,3443
	JOB_REQ_JOBID,104,3457
	JOB_REQ_QOS,105,3473
	JOB_REQ_RESVID,106,3487
	JOB_REQ_UID,107,3504
	JOB_REQ_WCKEYID,108,3518
	JOB_REQ_ID,109,3536
	JOB_REQ_NAME,110,3549
	JOB_REQ_KILL_REQUID,111,3564
	JOB_REQ_REQ_MEM,112,3586
	JOB_REQ_NODE_INX,113,3604
	JOB_REQ_NODELIST,114,3623
	JOB_REQ_ALLOC_NODES,115,3642
	JOB_REQ_PARTITION,116,3664
	JOB_REQ_PRIORITY,117,3684
	JOB_REQ_STATE,118,3703
	JOB_REQ_ELIGIBLE,119,3719
	JOB_REQ_END,120,3738
	JOB_REQ_START,121,3752
	JOB_REQ_SUBMIT,122,3768
	JOB_REQ_SUSPENDED,123,3785
	JOB_REQ_TIMELIMIT,124,3805
	JOB_REQ_TRACKSTEPS,125,3825
	JOB_REQ_WCKEY,126,3846
	JOB_REQ_ACCOUNT,127,3862
	JOB_REQ_LFT,128,3880
	JOB_REQ_USER_NAME,129,3894
	JOB_REQ_COUNT130,3914
char *step_req_inx[step_req_inx135,4031
	STEP_REQ_STEPID,184,4918
	STEP_REQ_START,185,4936
	STEP_REQ_END,186,4953
	STEP_REQ_SUSPENDED,187,4968
	STEP_REQ_NAME,188,4989
	STEP_REQ_NODELIST,189,5005
	STEP_REQ_NODE_INX,190,5025
	STEP_REQ_STATE,191,5045
	STEP_REQ_KILL_REQUID,192,5062
	STEP_REQ_EXIT_CODE,193,5085
	STEP_REQ_NODES,194,5106
	STEP_REQ_CPUS,195,5123
	STEP_REQ_TASKS,196,5139
	STEP_REQ_TASKDIST,197,5156
	STEP_REQ_USER_SEC,198,5176
	STEP_REQ_USER_USEC,199,5196
	STEP_REQ_SYS_SEC,200,5217
	STEP_REQ_SYS_USEC,201,5236
	STEP_REQ_MAX_DISK_READ,202,5256
	STEP_REQ_MAX_DISK_READ_TASK,203,5281
	STEP_REQ_MAX_DISK_READ_NODE,204,5311
	STEP_REQ_AVE_DISK_READ,205,5341
	STEP_REQ_MAX_DISK_WRITE,206,5366
	STEP_REQ_MAX_DISK_WRITE_TASK,207,5392
	STEP_REQ_MAX_DISK_WRITE_NODE,208,5423
	STEP_REQ_AVE_DISK_WRITE,209,5454
	STEP_REQ_MAX_VSIZE,210,5480
	STEP_REQ_MAX_VSIZE_TASK,211,5501
	STEP_REQ_MAX_VSIZE_NODE,212,5527
	STEP_REQ_AVE_VSIZE,213,5553
	STEP_REQ_MAX_RSS,214,5574
	STEP_REQ_MAX_RSS_TASK,215,5593
	STEP_REQ_MAX_RSS_NODE,216,5617
	STEP_REQ_AVE_RSS,217,5641
	STEP_REQ_MAX_PAGES,218,5660
	STEP_REQ_MAX_PAGES_TASK,219,5681
	STEP_REQ_MAX_PAGES_NODE,220,5707
	STEP_REQ_AVE_PAGES,221,5733
	STEP_REQ_MIN_CPU,222,5754
	STEP_REQ_MIN_CPU_TASK,223,5773
	STEP_REQ_MIN_CPU_NODE,224,5797
	STEP_REQ_AVE_CPU,225,5821
	STEP_REQ_ACT_CPUFREQ,226,5840
	STEP_REQ_CONSUMED_ENERGY,227,5863
	STEP_REQ_REQ_CPUFREQ,228,5890
	STEP_REQ_COUNT229,5913
static void _state_time_string(232,5933
static void _destroy_local_cluster(323,8059
static int _cluster_get_jobs(334,8337
extern List setup_cluster_list_with_inx(880,24254
extern int good_nodes_from_inx(1014,27968
extern int setup_job_cluster_cond_limits(1054,29052
extern int setup_job_cond_limits(1192,32563
extern List as_mysql_jobacct_process_get_jobs(1467,38917

src/plugins/accounting_storage/mysql/as_mysql_jobacct_process.h,49
#define _HAVE_MYSQL_JOBSLURMDB_PROCESS_H45,2416

src/plugins/accounting_storage/mysql/as_mysql_job.c,478
#define BUFFER_SIZE 49,2411
static int _get_db_index(54,2577
static char *_get_user_from_associd(_get_user_from_associd88,3517
static uint32_t _get_wckeyid(123,4359
extern int as_mysql_job_start(215,7115
extern List as_mysql_modify_job(594,18879
extern int as_mysql_job_complete(699,21757
extern int as_mysql_step_start(818,25065
extern int as_mysql_step_complete(969,29777
extern int as_mysql_suspend(1152,35327
extern int as_mysql_flush_jobs_on_cluster(1248,38061

src/plugins/accounting_storage/mysql/as_mysql_job.h,34
#define _HAVE_MYSQL_JOB_H41,2208

src/plugins/accounting_storage/mysql/as_mysql_problems.c,357
static int _setup_association_cond_limits(44,2281
extern int as_mysql_acct_no_assocs(108,3780
extern int as_mysql_acct_no_users(201,6059
		ASSOC_REQ_ID,228,6672
		ASSOC_REQ_USER,229,6688
		ASSOC_REQ_ACCT,230,6706
		ASSOC_REQ_PART,231,6724
		ASSOC_REQ_PARENT,232,6742
		ASSOC_REQ_COUNT233,6762
extern int as_mysql_user_no_assocs_or_no_uid(300,8503

src/plugins/accounting_storage/mysql/as_mysql_problems.h,39
#define _HAVE_MYSQL_PROBLEMS_H42,2252

src/plugins/accounting_storage/mysql/as_mysql_qos.c,985
static int _preemption_loop(42,2194
static int _setup_qos_limits(79,3201
extern int as_mysql_add_qos(480,16281
extern List as_mysql_modify_qos(587,18871
extern List as_mysql_remove_qos(811,24611
extern List as_mysql_get_qos(976,28757
		QOS_REQ_NAME,1021,29706
		QOS_REQ_DESC,1022,29722
		QOS_REQ_ID,1023,29738
		QOS_REQ_FLAGS,1024,29752
		QOS_REQ_GRACE,1025,29769
		QOS_REQ_GCM,1026,29786
		QOS_REQ_GCRM,1027,29801
		QOS_REQ_GC,1028,29817
		QOS_REQ_GJ,1029,29831
		QOS_REQ_GMEM,1030,29845
		QOS_REQ_GN,1031,29861
		QOS_REQ_GSJ,1032,29875
		QOS_REQ_GW,1033,29890
		QOS_REQ_MCMPJ,1034,29904
		QOS_REQ_MCRM,1035,29921
		QOS_REQ_MCPJ,1036,29937
		QOS_REQ_MCPU,1037,29953
		QOS_REQ_MJPU,1038,29969
		QOS_REQ_MNPJ,1039,29985
		QOS_REQ_MNPU,1040,30001
		QOS_REQ_MSJPU,1041,30017
		QOS_REQ_MWPJ,1042,30034
		QOS_REQ_PREE,1043,30050
		QOS_REQ_PREEM,1044,30066
		QOS_REQ_PRIO,1045,30083
		QOS_REQ_UF,1046,30099
		QOS_REQ_UT,1047,30113
		QOS_REQ_COUNT1048,30127

src/plugins/accounting_storage/mysql/as_mysql_qos.h,34
#define _HAVE_MYSQL_QOS_H41,2193

src/plugins/accounting_storage/mysql/as_mysql_resource.c,1013
static void _setup_res_cond(46,2239
static int _setup_clus_res_cond(159,4910
static int _setup_res_limits(210,6162
static uint32_t _get_res_used(286,8083
static int _fill_in_res_rec(330,9214
		RES_REQ_COUNT,349,9599
		RES_REQ_FLAGS,350,9616
		RES_REQ_ID,351,9633
		RES_REQ_NAME,352,9647
		RES_REQ_SERVER,353,9663
		RES_REQ_TYPE,354,9681
		RES_REQ_PU,355,9697
		RES_REQ_NUMBER,356,9711
static int _add_res(414,11263
static int _add_clus_res(495,13279
static List _get_clus_res(605,16554
		RES_REQ_CLUSTER,620,16884
		RES_REQ_PA,621,16903
		RES_REQ_NUMBER,622,16917
extern int as_mysql_add_res(665,17918
extern List as_mysql_get_res(721,19216
		RES_REQ_COUNT,746,19709
		RES_REQ_DESC,747,19726
		RES_REQ_FLAGS,748,19742
		RES_REQ_ID,749,19759
		RES_REQ_MANAGER,750,19773
		RES_REQ_NAME,751,19792
		RES_REQ_SERVER,752,19808
		RES_REQ_TYPE,753,19826
		RES_REQ_PU,754,19842
		RES_REQ_NUMBER,755,19856
extern List as_mysql_remove_res(823,21928
extern List as_mysql_modify_res(967,25720

src/plugins/accounting_storage/mysql/as_mysql_resource.h,39
#define _HAVE_MYSQL_RESOURCE_H40,2117

src/plugins/accounting_storage/mysql/as_mysql_resv.c,731
static int _setup_resv_limits(43,2243
static int _setup_resv_cond_limits(139,4698
extern int as_mysql_add_resv(211,6319
extern int as_mysql_modify_resv(255,7378
		RESV_ASSOCS,277,7836
		RESV_START,278,7851
		RESV_END,279,7865
		RESV_CPU,280,7877
		RESV_NAME,281,7889
		RESV_NODES,282,7902
		RESV_NODE_INX,283,7916
		RESV_FLAGS,284,7933
		RESV_COUNT285,7947
extern int as_mysql_remove_resv(452,12414
extern List as_mysql_get_resvs(496,13658
		RESV_REQ_ID,531,14463
		RESV_REQ_ASSOCS,532,14478
		RESV_REQ_CPUS,533,14497
		RESV_REQ_FLAGS,534,14514
		RESV_REQ_NODES,535,14532
		RESV_REQ_NODE_INX,536,14550
		RESV_REQ_NAME,537,14571
		RESV_REQ_START,538,14588
		RESV_REQ_END,539,14606
		RESV_REQ_COUNT540,14622

src/plugins/accounting_storage/mysql/as_mysql_resv.h,35
#define _HAVE_MYSQL_RESV_H40,2203

src/plugins/accounting_storage/mysql/as_mysql_rollup.c,1839
	int id;46,2402
	uint64_t a_cpu;47,2411
	uint64_t energy;48,2428
} local_id_usage_t;49,2446
	int id;52,2484
	uint64_t total_time;53,2527
	uint64_t a_cpu;54,2549
	int cpu_count;55,2566
	uint64_t d_cpu;56,2582
	uint64_t i_cpu;57,2599
	uint64_t o_cpu;58,2616
	uint64_t pd_cpu;59,2633
	uint64_t r_cpu;60,2651
	time_t start;61,2668
	time_t end;62,2683
	uint64_t energy;63,2696
} local_cluster_usage_t;64,2714
	uint64_t a_cpu;67,2757
	int id;68,2774
	List local_assocs;69,2783
	uint64_t total_time;71,2885
	time_t start;72,2907
	time_t end;73,2922
} local_resv_usage_t;74,2935
static void _destroy_local_id_usage(76,2958
static void _destroy_local_cluster_usage(84,3107
static void _destroy_local_resv_usage(92,3271
static int _process_purge(102,3495
static int _process_cluster_usage(158,5059
static local_cluster_usage_t *_setup_cluster_usage(_setup_cluster_usage315,10290
		EVENT_REQ_NAME,336,10737
		EVENT_REQ_CPU,337,10755
		EVENT_REQ_START,338,10772
		EVENT_REQ_END,339,10791
		EVENT_REQ_STATE,340,10808
		EVENT_REQ_COUNT341,10827
extern int as_mysql_hourly_rollup(460,14108
		JOB_REQ_DB_INX,501,15237
		JOB_REQ_JOBID,502,15255
		JOB_REQ_ASSOCID,503,15272
		JOB_REQ_WCKEYID,504,15291
		JOB_REQ_ELG,505,15310
		JOB_REQ_START,506,15325
		JOB_REQ_END,507,15342
		JOB_REQ_SUSPENDED,508,15357
		JOB_REQ_ACPU,509,15378
		JOB_REQ_RCPU,510,15394
		JOB_REQ_RESVID,511,15410
		JOB_REQ_ENERGY,512,15428
		JOB_REQ_COUNT513,15446
		SUSPEND_REQ_START,522,15564
		SUSPEND_REQ_END,523,15585
		SUSPEND_REQ_COUNT524,15604
		RESV_REQ_ID,537,15769
		RESV_REQ_ASSOCS,538,15784
		RESV_REQ_CPU,539,15803
		RESV_REQ_FLAGS,540,15819
		RESV_REQ_START,541,15837
		RESV_REQ_END,542,15855
		RESV_REQ_COUNT543,15871
extern int as_mysql_daily_rollup(1150,33685
extern int as_mysql_monthly_rollup(1276,37837

src/plugins/accounting_storage/mysql/as_mysql_rollup.h,37
#define _HAVE_MYSQL_ROLLUP_H43,2317

src/plugins/accounting_storage/mysql/as_mysql_txn.c,232
extern List as_mysql_get_txn(42,2203
		TXN_REQ_ID,71,2811
		TXN_REQ_TS,72,2825
		TXN_REQ_ACTION,73,2839
		TXN_REQ_NAME,74,2857
		TXN_REQ_ACTOR,75,2873
		TXN_REQ_INFO,76,2890
		TXN_REQ_CLUSTER,77,2906
		TXN_REQ_COUNT78,2925

src/plugins/accounting_storage/mysql/as_mysql_txn.h,34
#define _HAVE_MYSQL_TXN_H41,2202

src/plugins/accounting_storage/mysql/as_mysql_usage.c,1319
time_t global_last_rollup 43,2229
pthread_mutex_t rollup_lock 44,2260
static pthread_mutex_t usage_rollup_lock 46,2318
	uint16_t archive_data;49,2406
	char *cluster_name;cluster_name50,2430
	mysql_conn_t *mysql_conn;mysql_conn51,2451
	int *rc;rc52,2478
	int *rolledup;rolledup53,2488
	pthread_mutex_t *rolledup_lock;rolledup_lock54,2504
	pthread_cond_t *rolledup_cond;rolledup_cond55,2537
	time_t sent_end;56,2569
	time_t sent_start;57,2587
} local_rollup_t;58,2607
static void *_cluster_rollup_usage(_cluster_rollup_usage60,2626
		UPDATE_HOUR,90,3311
		UPDATE_DAY,91,3326
		UPDATE_MONTH,92,3340
		UPDATE_COUNT93,3356
static int _get_cluster_usage(408,11880
		CLUSTER_ACPU,433,12434
		CLUSTER_DCPU,434,12450
		CLUSTER_PDCPU,435,12466
		CLUSTER_ICPU,436,12483
		CLUSTER_RCPU,437,12499
		CLUSTER_OCPU,438,12515
		CLUSTER_CPU_COUNT,439,12531
		CLUSTER_START,440,12552
		CLUSTER_ENERGY,441,12569
		CLUSTER_COUNT442,12587
extern int get_usage_for_list(505,14449
		USAGE_ID,529,15148
		USAGE_START,530,15160
		USAGE_ACPU,531,15175
		USAGE_ENERGY,532,15189
		USAGE_COUNT533,15205
extern int as_mysql_get_usage(725,19816
		USAGE_ID,747,20399
		USAGE_START,748,20411
		USAGE_ACPU,749,20426
		USAGE_COUNT,750,20440
		USAGE_ENERGY751,20455
extern int as_mysql_roll_usage(921,24582

src/plugins/accounting_storage/mysql/as_mysql_usage.h,36
#define _HAVE_MYSQL_USAGE_H41,2199

src/plugins/accounting_storage/mysql/as_mysql_user.c,467
static int _change_user_name(44,2271
static List _get_other_user_names_to_mod(83,3420
static int _get_user_coords(160,5787
extern int as_mysql_add_users(268,8394
extern int as_mysql_add_coord(431,12784
extern List as_mysql_modify_users(527,15473
extern List as_mysql_remove_users(738,20949
extern List as_mysql_remove_coord(914,25786
extern List as_mysql_get_users(1087,30173
		USER_REQ_NAME,1109,30684
		USER_REQ_AL,1110,30701
		USER_REQ_COUNT1111,30716

src/plugins/accounting_storage/mysql/as_mysql_user.h,35
#define _HAVE_MYSQL_USER_H41,2214

src/plugins/accounting_storage/mysql/as_mysql_wckey.c,614
char *wckey_req_inx[wckey_req_inx44,2299
	WCKEY_REQ_ID,52,2384
	WCKEY_REQ_DEFAULT,53,2399
	WCKEY_REQ_NAME,54,2419
	WCKEY_REQ_USER,55,2436
	WCKEY_REQ_COUNT56,2453
static int _reset_default_wckey(59,2474
static int _make_sure_users_have_default(116,4108
static int _setup_wckey_cond_limits(198,6217
static int _cluster_remove_wckeys(265,7824
static int _cluster_modify_wckeys(333,9574
static int _cluster_get_wckeys(414,11838
extern int as_mysql_add_wckeys(484,13668
extern List as_mysql_modify_wckeys(629,17466
extern List as_mysql_remove_wckeys(715,19622
extern List as_mysql_get_wckeys(771,20967

src/plugins/accounting_storage/mysql/as_mysql_wckey.h,36
#define _HAVE_MYSQL_WCKEY_H41,2203

src/plugins/accounting_storage/none/accounting_storage_none.c,3217
const char plugin_name[plugin_name72,3672
const char plugin_type[plugin_type73,3740
const uint32_t plugin_version 74,3794
extern int init 80,3961
extern int fini 86,4050
extern void * acct_storage_p_get_connection(91,4103
extern int acct_storage_p_close_connection(98,4340
extern int acct_storage_p_commit(103,4427
extern int acct_storage_p_add_users(108,4516
extern int acct_storage_p_add_coord(114,4633
extern int acct_storage_p_add_accts(120,4779
extern int acct_storage_p_add_clusters(126,4896
extern int acct_storage_p_add_associations(132,5022
extern int acct_storage_p_add_qos(138,5153
extern int acct_storage_p_add_res(144,5265
extern int acct_storage_p_add_wckeys(150,5377
extern int acct_storage_p_add_reservation(156,5494
extern List acct_storage_p_modify_users(162,5619
extern List acct_storage_p_modify_accts(169,5793
extern List acct_storage_p_modify_clusters(176,5967
extern List acct_storage_p_modify_associations(183,6148
extern List acct_storage_p_modify_job(190,6345
extern List acct_storage_p_modify_qos(197,6521
extern List acct_storage_p_modify_res(204,6690
extern List acct_storage_p_modify_wckeys(211,6859
extern int acct_storage_p_modify_reservation(218,7039
extern List acct_storage_p_remove_users(224,7170
extern List acct_storage_p_remove_coord(230,7307
extern List acct_storage_p_remove_accts(237,7459
extern List acct_storage_p_remove_clusters(243,7599
extern List acct_storage_p_remove_associations(249,7741
extern List acct_storage_p_remove_qos(255,7893
extern List acct_storage_p_remove_res(261,8019
extern List acct_storage_p_remove_wckeys(267,8145
extern int acct_storage_p_remove_reservation(273,8278
extern List acct_storage_p_get_users(279,8409
extern List acct_storage_p_get_accts(285,8529
extern List acct_storage_p_get_clusters(291,8652
extern List acct_storage_p_get_config(297,8777
extern List acct_storage_p_get_associations(302,8868
extern List acct_storage_p_get_events(308,9003
extern List acct_storage_p_get_problems(314,9133
extern List acct_storage_p_get_qos(320,9260
extern List acct_storage_p_get_res(326,9377
extern List acct_storage_p_get_wckeys(332,9494
extern List acct_storage_p_get_reservations(338,9621
extern List acct_storage_p_get_txn(344,9761
extern int acct_storage_p_get_usage(350,9878
extern int acct_storage_p_roll_usage(359,10045
extern int clusteracct_storage_p_node_down(368,10217
extern int clusteracct_storage_p_node_up(375,10410
extern int clusteracct_storage_p_register_ctld(382,10555
extern int clusteracct_storage_p_register_disconn_ctld(387,10660
extern int clusteracct_storage_p_fini_ctld(393,10780
extern int clusteracct_storage_p_cluster_cpus(400,10928
extern int jobacct_storage_p_job_start(411,11156
extern int jobacct_storage_p_job_complete(420,11326
extern int jobacct_storage_p_step_start(429,11502
extern int jobacct_storage_p_step_complete(438,11674
extern int jobacct_storage_p_suspend(447,11852
extern List jobacct_storage_p_get_jobs_cond(458,12087
extern int jobacct_storage_p_archive(467,12244
extern int jobacct_storage_p_archive_load(476,12409
extern int acct_storage_p_update_shares_used(482,12534
extern int acct_storage_p_flush_jobs_on_cluster(488,12650

src/plugins/accounting_storage/slurmdbd/accounting_storage_slurmdbd.c,3999
#define BUFFER_SIZE 65,2718
slurm_ctl_conf_t slurmctld_conf 72,2955
List job_list 73,3017
slurm_ctl_conf_t slurmctld_conf;75,3074
List job_list 76,3107
const char plugin_name[plugin_name108,4520
const char plugin_type[plugin_type109,4585
const uint32_t plugin_version 110,4643
static char *slurmdbd_auth_info slurmdbd_auth_info112,4681
static pthread_t db_inx_handler_thread;114,4722
static pthread_t cleanup_handler_thread;115,4762
static pthread_mutex_t db_inx_lock 116,4803
static bool running_db_inx 117,4867
static void _partial_free_dbd_job_start(122,4995
static void _partial_destroy_dbd_job_start(139,5361
static int _setup_job_start_msg(148,5547
static void *_set_db_inx_thread(_set_db_inx_thread215,7651
static void *_cleanup_thread(_cleanup_thread378,12362
extern int init 388,12598
extern int fini 434,13920
extern void *acct_storage_p_get_connection(acct_storage_p_get_connection454,14353
extern int acct_storage_p_close_connection(468,14740
extern int acct_storage_p_commit(475,14874
extern int acct_storage_p_add_users(497,15320
extern int acct_storage_p_add_coord(518,15767
extern int acct_storage_p_add_accts(541,16304
extern int acct_storage_p_add_clusters(562,16754
extern int acct_storage_p_add_associations(584,17221
extern int acct_storage_p_add_qos(605,17690
extern int acct_storage_p_add_res(626,18129
extern int acct_storage_p_add_wckeys(647,18572
extern int acct_storage_p_add_reservation(668,19024
extern List acct_storage_p_modify_users(690,19468
extern List acct_storage_p_modify_accts(733,20605
extern List acct_storage_p_modify_clusters(776,21754
extern List acct_storage_p_modify_associations(821,22941
extern List acct_storage_p_modify_job(867,24116
extern List acct_storage_p_modify_qos(910,25258
extern List acct_storage_p_modify_res(953,26393
extern List acct_storage_p_modify_wckeys(996,27520
extern int acct_storage_p_modify_reservation(1039,28668
extern List acct_storage_p_remove_users(1060,29120
extern List acct_storage_p_remove_coord(1104,30260
extern List acct_storage_p_remove_accts(1148,31440
extern List acct_storage_p_remove_clusters(1192,32586
extern List acct_storage_p_remove_associations(1236,33747
extern List acct_storage_p_remove_qos(1282,34904
extern List acct_storage_p_remove_res(1326,35991
extern List acct_storage_p_remove_wckeys(1367,37075
extern int acct_storage_p_remove_reservation(1411,38177
extern List acct_storage_p_get_users(1433,38657
extern List acct_storage_p_get_accts(1474,39732
extern List acct_storage_p_get_clusters(1516,40823
extern List acct_storage_p_get_config(1558,41919
extern List acct_storage_p_get_associations(1594,42870
extern List acct_storage_p_get_events(1635,43958
extern List acct_storage_p_get_problems(1676,45045
extern List acct_storage_p_get_qos(1717,46128
extern List acct_storage_p_get_res(1765,47433
extern List acct_storage_p_get_wckeys(1813,48735
extern List acct_storage_p_get_reservations(1861,50064
extern List acct_storage_p_get_txn(1910,51395
extern int acct_storage_p_get_usage(1951,52455
extern int acct_storage_p_roll_usage(2037,54878
extern int clusteracct_storage_p_node_down(2064,55466
extern int clusteracct_storage_p_node_up(2101,56340
extern int clusteracct_storage_p_cluster_cpus(2122,56853
extern int clusteracct_storage_p_register_ctld(2144,57425
extern int clusteracct_storage_p_register_disconn_ctld(2166,58013
extern int clusteracct_storage_p_fini_ctld(2172,58133
extern int jobacct_storage_p_job_start(2182,58332
extern int jobacct_storage_p_job_complete(2244,60196
extern int jobacct_storage_p_step_start(2299,61673
extern int jobacct_storage_p_step_complete(2404,64840
extern int jobacct_storage_p_suspend(2469,66710
extern List jobacct_storage_p_get_jobs_cond(2502,67557
extern int jobacct_storage_p_archive(2548,68733
extern int jobacct_storage_p_archive_load(2588,69593
extern int acct_storage_p_update_shares_used(2620,70325
extern int acct_storage_p_flush_jobs_on_cluster(2626,70441

src/plugins/proctrack/sgi_job/proctrack_sgi_job.c,1430
const char plugin_name[plugin_name63,2551
const char plugin_type[plugin_type64,2622
const uint32_t plugin_version 65,2675
typedef uint64_t jid_t;72,2876
typedef jid_t (*create_f)create_f74,2901
typedef jid_t (*getjid_f)getjid_f75,2977
typedef jid_t (*waitjid_f)waitjid_f76,3019
typedef int   (*killjid_f)killjid_f77,3087
typedef jid_t (*detachpid_f)detachpid_f78,3138
typedef jid_t (*attachpid_f)attachpid_f79,3180
typedef int   (*getpidlist_f)getpidlist_f80,3243
typedef int   (*getpidcnt_f)getpidcnt_f81,3310
static void *libjob_handle libjob_handle86,3384
static struct job_operations 91,3475
	create_f     create;92,3506
	getjid_f     getjid;93,3528
	waitjid_f    waitjid;94,3550
	killjid_f    killjid;95,3573
	detachpid_f  detachpid;96,3596
	attachpid_f  attachpid;97,3621
	getpidlist_f getpidlist;98,3646
	getpidcnt_f  getpidcnt;99,3672
} job_ops;100,3697
int init 107,3839
int fini 149,5439
jid_t _job_create 155,5509
jid_t _job_getjid 160,5617
jid_t _job_waitjid 165,5687
int _job_killjid 170,5802
int _job_detachpid 175,5886
int _job_attachpid 180,5960
int _job_getpidlist 185,6050
int _job_getpidcnt 190,6165
int proctrack_p_create 195,6239
int proctrack_p_add 215,6863
int proctrack_p_signal 236,7259
int proctrack_p_destroy 244,7450
uint64_t proctrack_p_find 254,7696
bool proctrack_p_has_pid 264,7850
int proctrack_p_wait 276,8047
int proctrack_p_get_pids(285,8203

src/plugins/proctrack/cray/proctrack_cray.c,782
const char plugin_name[plugin_name65,2547
const char plugin_type[plugin_type66,2619
const uint32_t plugin_version 67,2669
static void *libjob_handle libjob_handle72,2737
static pthread_t threadid 73,2772
static pthread_cond_t notify 74,2803
static pthread_mutex_t notify_mutex 75,2860
static pthread_mutex_t thread_mutex 76,2925
static void *_create_container_thread(_create_container_thread78,2991
static void _end_container_thread(103,3647
extern int init(122,4132
extern int fini(128,4216
extern int proctrack_p_create(140,4427
int proctrack_p_add(195,6372
int proctrack_p_signal(207,6624
int proctrack_p_destroy(222,7052
uint64_t proctrack_p_find(237,7367
bool proctrack_p_has_pid 247,7518
int proctrack_p_wait(259,7713
int proctrack_p_get_pids(269,7880

src/plugins/proctrack/aix/proctrack_aix.c,451
const char plugin_name[plugin_name91,3952
const char plugin_type[plugin_type92,4036
const uint32_t plugin_version 93,4085
extern int init 99,4251
extern int fini 117,4610
extern int proctrack_p_create 122,4663
extern int proctrack_p_add 131,4865
extern int proctrack_p_signal 147,5191
extern int proctrack_p_destroy 156,5372
proctrack_p_find(170,5598
proctrack_p_has_pid(180,5791
proctrack_p_get_pids(192,6039
proctrack_p_wait(238,7006

src/plugins/proctrack/lua/proctrack_lua.c,881
const char plugin_name[plugin_name69,2615
const char plugin_type[plugin_type70,2677
const uint32_t plugin_version 71,2732
static const char lua_script_path[lua_script_path73,2775
static lua_State *L L74,2850
static pthread_mutex_t lua_lock 81,3019
static int l_log_msg 87,3136
static int l_log_error 125,3891
static const struct luaL_Reg slurm_functions 133,4064
static int lua_register_slurm_output_functions 139,4200
static int check_lua_script_function 178,5374
static int check_lua_script_functions 191,5628
int init 224,6297
int fini 274,7450
static int lua_job_table_create 284,7578
int proctrack_p_create 323,8774
int proctrack_p_add 366,9649
int proctrack_p_signal 394,10181
int proctrack_p_destroy 421,10671
uint64_t proctrack_p_find 448,11130
bool proctrack_p_has_pid 474,11597
int proctrack_p_wait 502,12090
int proctrack_p_get_pids 527,12527

src/plugins/proctrack/cgroup/proctrack_cgroup.c,1429
const char plugin_name[plugin_name103,4126
const char plugin_type[plugin_type105,4217
const uint32_t plugin_version 106,4269
#define PATH_MAX 109,4323
static slurm_cgroup_conf_t slurm_cgroup_conf;112,4352
static char user_cgroup_path[user_cgroup_path114,4399
static char job_cgroup_path[job_cgroup_path115,4439
static char jobstep_cgroup_path[jobstep_cgroup_path116,4478
static xcgroup_ns_t freezer_ns;118,4522
static bool slurm_freezer_init 120,4555
static xcgroup_t freezer_cg;121,4595
static xcgroup_t slurm_freezer_cg;122,4624
static xcgroup_t user_freezer_cg;123,4659
static xcgroup_t job_freezer_cg;124,4693
static xcgroup_t step_freezer_cg;125,4726
int _slurm_cgroup_init(127,4761
int _slurm_cgroup_create(153,5456
int _slurm_cgroup_destroy(282,9472
int _slurm_cgroup_add_pids(315,10149
int _slurm_cgroup_stick_stepd(323,10333
_slurm_cgroup_get_pids(332,10502
int _slurm_cgroup_suspend(340,10684
int _slurm_cgroup_resume(349,10863
_slurm_cgroup_has_pid(359,11046
_slurm_cgroup_is_pid_a_slurm_task(380,11366
extern int init 426,12396
extern int fini 448,12884
extern int proctrack_p_create 459,13097
extern int proctrack_p_add 490,13980
extern int proctrack_p_signal 495,14102
extern int proctrack_p_destroy 550,15533
extern uint64_t proctrack_p_find(555,15616
extern bool proctrack_p_has_pid(565,15778
extern int proctrack_p_wait(570,15880
extern int proctrack_p_get_pids(595,16410

src/plugins/proctrack/pgid/proctrack_pgid.c,521
#  define __USE_XOPEN_EXTENDED 51,2348
const char plugin_name[plugin_name98,4111
const char plugin_type[plugin_type99,4191
const uint32_t plugin_version 100,4241
extern int init 106,4407
extern int fini 111,4460
extern int proctrack_p_create 116,4513
extern int proctrack_p_add 124,4639
extern int proctrack_p_signal 130,4768
extern int proctrack_p_destroy 145,5088
extern uint64_t proctrack_p_find(150,5163
extern bool proctrack_p_has_pid(160,5307
proctrack_p_wait(171,5494
proctrack_p_get_pids(196,5952

src/plugins/proctrack/linuxproc/kill_tree.c,847
typedef struct xpid_s 63,2635
	pid_t pid;64,2659
	int is_usercmd;65,2671
	char *cmd;cmd66,2688
	struct xpid_s *next;next67,2700
} xpid_t;68,2722
typedef struct xppid_s 70,2733
	pid_t ppid;71,2758
	xpid_t *list;list72,2771
	struct xppid_s *next;next73,2786
} xppid_t;74,2809
#define HASH_LEN 76,2821
#define GET_HASH_IDX(78,2842
static xpid_t *_alloc_pid(_alloc_pid80,2888
static xppid_t *_alloc_ppid(_alloc_ppid92,3132
static void _push_to_hashtbl(104,3387
static int get_myname(125,3865
static xppid_t **_build_hashtbl(_build_hashtbl148,4346
static void _destroy_list(209,5816
static void _destroy_hashtbl(221,5964
static xpid_t *_get_list(_get_list239,6223
static int _kill_proclist(267,6787
extern int kill_proc_tree(297,7423
extern pid_t find_ancestor(318,7816
extern int proctrack_linuxproc_get_pids(358,8569

src/plugins/proctrack/linuxproc/kill_tree.h,34
#define _HAVE_KILL_TREE_H41,2216

src/plugins/proctrack/linuxproc/proctrack_linuxproc.c,480
const char plugin_name[plugin_name94,4074
const char plugin_type[plugin_type95,4142
const uint32_t plugin_version 96,4197
extern int init 103,4364
extern int fini 108,4417
extern int proctrack_p_create 116,4543
extern int proctrack_p_add 122,4668
extern int proctrack_p_signal 127,4760
extern int proctrack_p_destroy 132,4866
extern uint64_t proctrack_p_find(137,4941
extern bool proctrack_p_has_pid(142,5043
proctrack_p_wait(154,5243
proctrack_p_get_pids(178,5701

src/plugins/acct_gather_filesystem/none/acct_gather_filesystem_none.c,470
#define _DEBUG 55,2575
#define _DEBUG_INFINIBAND 56,2592
const char plugin_name[plugin_name87,4004
const char plugin_type[plugin_type88,4067
const uint32_t plugin_version 89,4125
extern int init(95,4292
extern int fini(101,4378
extern int acct_gather_filesystem_p_node_update(106,4428
extern void acct_gather_filesystem_p_conf_set(111,4510
extern void acct_gather_filesystem_p_conf_options(116,4590
extern void acct_gather_filesystem_p_conf_values(122,4753

src/plugins/acct_gather_filesystem/lustre/acct_gather_filesystem_lustre.c,1266
#define _DEBUG 65,2746
#define _DEBUG_FILESYSTEM 66,2763
#define FILESYSTEM_DEFAULT_PORT 67,2791
const char plugin_name[plugin_name99,4210
const char plugin_type[plugin_type100,4275
const uint32_t plugin_version 101,4335
	time_t last_update_time;105,4391
	time_t update_time;106,4417
	uint64_t lustre_nb_writes;107,4438
	uint64_t lustre_nb_reads;108,4466
	uint64_t all_lustre_nb_writes;109,4493
	uint64_t all_lustre_nb_reads;110,4525
	uint64_t lustre_write_bytes;111,4556
	uint64_t lustre_read_bytes;112,4586
	uint64_t all_lustre_write_bytes;113,4615
	uint64_t all_lustre_read_bytes;114,4649
} lustre_sens_t;115,4682
static lustre_sens_t lustre_se 117,4700
static uint32_t debug_flags 119,4753
static pthread_mutex_t lustre_lock 120,4786
const char proc_base_path[proc_base_path123,4886
static int _check_lustre_fs(128,4972
static int _read_lustre_counters(170,5945
static int _update_node_filesystem(276,8653
static bool _run_in_daemon(345,10701
extern int init(363,11000
extern int fini(370,11091
extern int acct_gather_filesystem_p_node_update(381,11258
extern void acct_gather_filesystem_p_conf_set(390,11435
extern void acct_gather_filesystem_p_conf_options(398,11577
extern void acct_gather_filesystem_p_conf_values(405,11703

src/plugins/task/cray/task_cray.c,978
#  define _GNU_SOURCE43,2116
#define LLI_STATUS_FILE	74,2874
#define LLI_STATUS_FILE_BUF_SIZE 77,3009
#define LLI_STATUS_OFFS_ENV 80,3116
static uint32_t debug_flags 81,3169
const char plugin_name[plugin_name110,4532
const char plugin_type[plugin_type111,4586
const uint32_t plugin_version 112,4633
extern int init 129,5152
extern int fini 140,5372
extern int task_p_slurmd_batch_request 148,5463
extern int task_p_slurmd_launch_request 158,5674
extern int task_p_slurmd_reserve_resources 170,5959
extern int task_p_slurmd_suspend_job 181,6222
extern int task_p_slurmd_resume_job 190,6391
extern int task_p_slurmd_release_resources 199,6565
extern int task_p_pre_setuid 210,6884
extern int task_p_pre_launch 223,7214
extern int task_p_pre_launch_priv 265,8309
extern int task_p_post_term 317,9659
extern int task_p_post_step 385,11380
static int _get_numa_nodes(513,14888
#define NUM_INTS_TO_HOLD_ALL_CPUS	613,17767
static int _get_cpu_masks(615,17863

src/plugins/task/none/task_none.c,673
const char plugin_name[plugin_name79,3798
const char plugin_type[plugin_type80,3852
const uint32_t plugin_version 81,3899
extern int init 87,4068
extern int fini 97,4247
extern int task_p_slurmd_batch_request 105,4338
extern int task_p_slurmd_launch_request 115,4549
extern int task_p_slurmd_reserve_resources 127,4834
extern int task_p_slurmd_suspend_job 138,5097
extern int task_p_slurmd_resume_job 147,5266
extern int task_p_slurmd_release_resources 156,5440
extern int task_p_pre_setuid 167,5759
extern int task_p_pre_launch 177,6020
extern int task_p_pre_launch_priv 188,6345
extern int task_p_post_term 200,6688
extern int task_p_post_step 211,6971

src/plugins/task/affinity/affinity.c,246
static int is_power 39,2079
void slurm_chkaffinity(41,2106
static int _bind_ldom(108,3814
int get_cpuset(135,4487
static bool _is_power_cpu(277,7740
void reset_cpuset(310,8631
int slurm_setaffinity(341,9428
int slurm_getaffinity(358,9807

src/plugins/task/affinity/affinity.h,86
#  define _GNU_SOURCE66,2531
#define   __USE_GNU69,2580
#define CPUSET_DIR 98,3294

src/plugins/task/affinity/cpuset.c,290
static bool cpuset_prefix_set 41,2189
static char *cpuset_prefix cpuset_prefix42,2228
static void _cpuset_to_cpustr(44,2262
int	slurm_build_cpuset(60,2541
int	slurm_set_cpuset(165,5140
int	slurm_get_cpuset(251,7312
int	slurm_memset_available(291,8196
int	slurm_set_memset(301,8395

src/plugins/task/affinity/dist_tasks.c,1133
#define BLOCK_MAP(77,3544
#define BLOCK_MAP_INV(78,3604
static uint16_t _block_map(88,3798
static void _task_layout_display_masks(103,4151
static void _lllp_free_masks(118,4521
static void _match_masks_to_ldom(138,4969
void batch_bind(167,5636
	char *str;str205,6685
	int t,206,6697
	int t, p;206,6697
	for (p = 0; p < (sockets * cores)212,6916
	str 217,7040
	for (p = 0; p < num_cpus;222,7177
		for (t = 0; t < conf->threads;threads228,7374
			uint16_t pos 229,7414
	slurm_cred_free_args(&arg)arg265,8455
void lllp_distribution(284,9006
static int _get_local_node_info(439,14439
static char *_alloc_mask(_alloc_mask469,15440
static bitstr_t *_get_avail_map(_get_avail_map557,17666
static void _blot_mask(637,20140
static void _blot_mask_sockets(660,20632
static void _expand_masks(690,21477
static int _task_layout_lllp_multi(726,22382
static int _task_layout_lllp_cyclic(822,25178
static int _task_layout_lllp_block(925,28137
static bitstr_t *_lllp_map_abstract_mask(_lllp_map_abstract_mask1055,31642
static void _lllp_map_abstract_masks(1085,32345
static void _lllp_generate_cpu_bind(1109,32918

src/plugins/task/affinity/dist_tasks.h,41
#define _SLURMSTEPD_DIST_TASKS_H37,1980

src/plugins/task/affinity/numa.c,271
static char * _memset_to_str(43,2272
static int _str_to_memset(72,2895
void slurm_chk_memset(103,3469
int get_memset(152,4652
static uint16_t *numa_array numa_array244,6565
static void _add_numa_mask_to_array(247,6624
extern uint16_t slurm_get_numa_node(267,7183

src/plugins/task/affinity/schedutils.c,122
inline int val_to_char(68,3218
inline int char_to_val(78,3367
int str_to_cpuset(91,3554
char * cpuset_to_str(122,4097

src/plugins/task/affinity/task_affinity.c,754
#define PURGE_CPUSET_DIRS 57,2640
const char plugin_name[plugin_name86,3998
const char plugin_type[plugin_type87,4056
const uint32_t plugin_version 88,4107
extern int init 94,4276
extern int fini 104,4455
static void _update_bind_type(112,4650
extern int task_p_slurmd_batch_request 169,6598
extern int task_p_slurmd_launch_request 180,6826
extern int task_p_slurmd_reserve_resources 211,7688
extern int task_p_slurmd_suspend_job 222,7939
extern int task_p_slurmd_resume_job 231,8108
extern int task_p_slurmd_release_resources 240,8282
extern int task_p_pre_setuid 327,10359
extern int task_p_pre_launch 369,11412
extern int task_p_pre_launch_priv 476,14553
extern int task_p_post_term 486,14823
extern int task_p_post_step 533,16105

src/plugins/task/cgroup/task_cgroup.c,876
const char plugin_name[plugin_name85,3904
const char plugin_type[plugin_type86,3978
const uint32_t plugin_version 87,4027
static bool use_cpuset 89,4067
static bool use_memory 90,4100
static bool use_devices 91,4133
static slurm_cgroup_conf_t slurm_cgroup_conf;93,4167
extern int init 99,4343
extern int fini 145,5499
extern int task_p_slurmd_batch_request 167,5875
extern int task_p_slurmd_launch_request 176,6035
extern int task_p_slurmd_reserve_resources 186,6228
extern int task_p_slurmd_suspend_job 196,6424
extern int task_p_slurmd_resume_job 204,6544
extern int task_p_slurmd_release_resources 212,6670
extern int task_p_pre_setuid 222,6934
extern int task_p_pre_launch_priv 247,7523
extern int task_p_pre_launch 273,8114
extern int task_p_post_term 290,8522
extern int task_p_post_step 308,8920
extern char* task_cgroup_create_slurm_cg 314,9009

src/plugins/task/cgroup/task_cgroup_cpuset.c,1577
#define _GNU_SOURCE44,2186
typedef hwloc_cpuset_t hwloc_bitmap_t;72,2995
static inline hwloc_bitmap_t hwloc_bitmap_alloc(74,3035
static inline void hwloc_bitmap_free(79,3124
static inline void hwloc_bitmap_or(84,3217
static inline int hwloc_bitmap_asprintf(90,3368
static inline int hwloc_bitmap_isequal(95,3492
static uint16_t bind_mode 103,3655
static uint16_t bind_mode_ldom 107,3828
#define PATH_MAX 114,3953
static bool cpuset_prefix_set 117,3982
static char *cpuset_prefix cpuset_prefix118,4021
static char user_cgroup_path[user_cgroup_path120,4055
static char job_cgroup_path[job_cgroup_path121,4095
static char jobstep_cgroup_path[jobstep_cgroup_path122,4134
static xcgroup_ns_t cpuset_ns;124,4178
static xcgroup_t user_cpuset_cg;126,4210
static xcgroup_t job_cpuset_cg;127,4243
static xcgroup_t step_cpuset_cg;128,4275
inline int val_to_char(134,4467
inline int char_to_val(144,4616
char *cpuset_to_str(cpuset_to_str157,4803
int str_to_cpuset(181,5269
static int _abs_to_mac(215,5866
static int _xcgroup_cpuset_init(278,7341
void slurm_chkaffinity(348,8948
static int _get_ldom_sched_cpuset(486,12923
int _get_sched_cpuset(504,13465
static void _add_hwloc_cpuset(649,16866
static int _task_cgroup_cpuset_dist_cyclic(686,17995
static int _task_cgroup_cpuset_dist_block(752,19659
extern int task_cgroup_cpuset_init(785,20638
extern int task_cgroup_cpuset_fini(802,21104
extern int task_cgroup_cpuset_create(821,21538
extern int task_cgroup_cpuset_attach_task(1076,29028
extern int task_cgroup_cpuset_set_task_affinity(1088,29375

src/plugins/task/cgroup/task_cgroup_cpuset.h,39
#define _TASK_CGROUP_CPUSET_H_42,2115

src/plugins/task/cgroup/task_cgroup_devices.c,748
#define _GNU_SOURCE41,2065
#define PATH_MAX 62,2556
static char user_cgroup_path[user_cgroup_path65,2585
static char job_cgroup_path[job_cgroup_path66,2625
static char jobstep_cgroup_path[jobstep_cgroup_path67,2664
static char cgroup_allowed_devices_file[cgroup_allowed_devices_file68,2707
static xcgroup_ns_t devices_ns;70,2759
static xcgroup_t user_devices_cg;72,2792
static xcgroup_t job_devices_cg;73,2826
static xcgroup_t step_devices_cg;74,2859
extern int task_cgroup_devices_init(82,3083
extern int task_cgroup_devices_fini(119,4024
extern int task_cgroup_devices_create(141,4537
extern int task_cgroup_devices_attach_task(411,12691
static void _calc_device_major(421,12907
static int read_allowed_devices_file(456,13741

src/plugins/task/cgroup/task_cgroup_devices.h,40
#define _TASK_CGROUP_DEVICES_H_42,2118

src/plugins/task/cgroup/task_cgroup.h,32
#define _TASK_CGROUP_H_42,2091

src/plugins/task/cgroup/task_cgroup_memory.c,1104
#define PATH_MAX 56,2430
static char user_cgroup_path[user_cgroup_path61,2488
static char job_cgroup_path[job_cgroup_path62,2528
static char jobstep_cgroup_path[jobstep_cgroup_path63,2567
static xcgroup_ns_t memory_ns;65,2611
static xcgroup_t user_memory_cg;67,2643
static xcgroup_t job_memory_cg;68,2676
static xcgroup_t step_memory_cg;69,2708
static bool constrain_ram_space;71,2742
static bool constrain_swap_space;72,2775
static float allowed_ram_space;74,2810
static float allowed_swap_space;75,2879
static uint64_t max_ram;77,2949
static uint64_t max_swap;78,3026
static uint64_t totalram;79,3103
static uint64_t min_ram_space;80,3180
static uint64_t percent_in_bytes 82,3262
extern int task_cgroup_memory_init(87,3379
extern int task_cgroup_memory_fini(156,5960
static uint64_t mem_limit_in_bytes 218,8252
static uint64_t swap_limit_in_bytes 243,8886
static int memcg_initialize 258,9239
extern int task_cgroup_memory_create(303,10612
extern int task_cgroup_memory_attach_task(435,14837
int failcnt_non_zero(455,15328
extern int task_cgroup_memory_check_oom(470,15617

src/plugins/task/cgroup/task_cgroup_memory.h,39
#define _TASK_CGROUP_MEMORY_H_42,2115

src/plugins/ext_sensors/rrd/ext_sensors_rrd.c,1357
enum ext_sensors_value_type 62,2593
	EXT_SENSORS_VALUE_ENERGY,63,2623
	EXT_SENSORS_VALUE_TEMPERATURE,64,2650
#define _WATT_MIN 67,2686
#define _WATT_MAX 68,2707
#define _TEMP_MIN 69,2729
#define _TEMP_MAX 70,2749
const char plugin_name[plugin_name100,4154
const char plugin_type[plugin_type101,4206
const uint32_t plugin_version 102,4252
static uint32_t debug_flags 104,4290
static ext_sensors_conf_t ext_sensors_conf;105,4323
static ext_sensors_conf_t *ext_sensors_cnf ext_sensors_cnf106,4367
static time_t last_valid_time;107,4431
static rrd_value_t last_valid_watt;108,4462
static rrd_value_t _get_additional_consumption(130,5245
static rrd_value_t _validate_watt(138,5470
static char* _get_node_rrd_path(148,5678
static uint32_t _rrd_get_last_one(187,6417
static uint32_t _rrd_consolidate_one(250,7795
extern uint32_t RRD_consolidate(411,11972
static int _update_node_data(442,12761
static int _update_switch_data(513,14731
static int _update_door_data(521,14977
extern int _ext_sensors_read_conf(529,15219
static void _ext_sensors_clear_free_conf(634,18483
extern int ext_sensors_p_update_component_data(647,18891
extern int ext_sensors_p_get_stepstartdata(661,19234
extern int ext_sensors_p_get_stependdata(668,19402
extern List ext_sensors_p_get_config(688,19990
extern int init(788,23121
extern int fini(799,23339

src/plugins/ext_sensors/rrd/ext_sensors_rrd.h,716
#define _EXT_SENSORS_RRD_H_41,2083
#define EXT_SENSORS_OPT_JOB_ENERGY	44,2159
#define EXT_SENSORS_OPT_NODE_ENERGY	45,2205
#define EXT_SENSORS_OPT_NODE_TEMP	46,2252
#define EXT_SENSORS_OPT_SWITCH_ENERGY	47,2297
#define EXT_SENSORS_OPT_SWITCH_TEMP	48,2346
#define EXT_SENSORS_OPT_COLDDOOR_TEMP	49,2393
typedef struct ext_sensors_config 52,2494
	uint64_t dataopts;53,2530
	uint32_t min_watt;54,2550
	uint32_t max_watt;55,2570
	uint32_t min_temp;56,2590
	uint32_t max_temp;57,2610
	char    *energy_rra_name;energy_rra_name58,2630
	char    *temp_rra_name;temp_rra_name59,2657
	char    *energy_rrd_file;energy_rrd_file60,2682
	char    *temp_rrd_file;temp_rrd_file61,2709
} ext_sensors_conf_t;62,2734

src/plugins/ext_sensors/none/ext_sensors_none.c,471
const char plugin_name[plugin_name87,3896
const char plugin_type[plugin_type88,3949
const uint32_t plugin_version 89,3996
extern int ext_sensors_read_conf(92,4035
extern int ext_sensors_free_conf(97,4102
extern int ext_sensors_p_update_component_data(102,4169
extern int ext_sensors_p_get_stepstartdata(107,4250
extern int ext_sensors_p_get_stependdata(112,4351
extern List ext_sensors_p_get_config(117,4450
extern int init(126,4650
extern int fini(132,4736

src/plugins/select/cray/select_cray.c,6135
#define _GNU_SOURCE 38,2056
struct select_jobinfo 75,2844
	bitstr_t               *blade_map;blade_map76,2868
	uint16_t                cleaning;77,2904
	uint16_t		magic;78,2939
	uint8_t                 npc;79,2957
	select_jobinfo_t       *other_jobinfo;other_jobinfo80,2987
	bitstr_t               *used_blades;used_blades81,3027
#define JOBINFO_MAGIC 83,3068
struct select_nodeinfo 90,3289
	uint32_t                blade_id;91,3314
	uint16_t		magic;92,3349
	uint32_t                nid;93,3367
	select_nodeinfo_t	*other_nodeinfo;other_nodeinfo94,3397
	uint64_t apid;98,3454
	uint32_t exit_code;99,3470
	uint32_t jobid;100,3491
	char *nodelist;nodelist101,3508
	bool step;102,3525
	uint32_t user_id;103,3537
} nhc_info_t;104,3556
	uint64_t id;107,3588
	uint32_t job_cnt;108,3602
	bitstr_t *node_bitmap;node_bitmap109,3621
} blade_info_t;110,3645
	NPC_NONE,113,3677
	NPC_SYS,114,3731
	NPC_BLADE,115,3794
} npc_type_t;116,3824
#define NODEINFO_MAGIC 118,3839
#define MAX_PTHREAD_RETRIES 119,3869
#define GET_BLADE_X(121,3901
#define GET_BLADE_Y(123,3971
#define GET_BLADE_Z(125,4041
slurm_ctl_conf_t slurmctld_conf 133,4316
int bg_recover 134,4378
slurmdb_cluster_rec_t *working_cluster_rec working_cluster_rec135,4445
struct node_record *node_record_table_ptr node_record_table_ptr136,4526
int node_record_count 137,4598
time_t last_node_update 138,4650
slurm_ctl_conf_t slurmctld_conf;140,4710
int bg_recover 141,4743
slurmdb_cluster_rec_t *working_cluster_rec working_cluster_rec142,4781
struct node_record *node_record_table_ptr;node_record_table_ptr143,4832
int node_record_count;144,4875
time_t last_node_update;145,4898
static blade_info_t *blade_array blade_array148,4931
static bitstr_t *blade_nodes_running_jobs blade_nodes_running_jobs149,4972
static bitstr_t *blade_nodes_running_npc blade_nodes_running_npc150,5022
static uint32_t blade_cnt 151,5071
static pthread_mutex_t blade_mutex 152,5102
static time_t last_npc_update;153,5166
alpsc_ev_app_t *app_list app_list159,5258
int32_t app_list_size 160,5325
size_t app_list_capacity 161,5389
alpsc_ev_app_t *event_list event_list162,5444
int32_t event_list_size 163,5508
size_t event_list_capacity 164,5558
volatile sig_atomic_t aeld_running 165,5617
pthread_mutex_t aeld_mutex 168,5773
#define AELD_SESSION_INTERVAL	170,5853
#define AELD_EVENT_INTERVAL	171,5921
static uint32_t debug_flags 192,6865
const char plugin_name[plugin_name222,8253
const char plugin_type[plugin_type223,8310
uint32_t plugin_id	224,8352
const uint32_t plugin_version	225,8379
static int _run_nhc(229,8486
static void _aeld_cleanup(345,11395
static void _handle_aeld_error(363,11766
static void _clear_event_list(384,12216
static void _start_session(398,12414
static void *_aeld_event_loop(_aeld_event_loop443,13400
static void _initialize_event(511,15086
static void _copy_event(568,16454
static void _free_event(590,17140
static void _add_to_app_list(601,17331
static void _update_app(625,17919
static void _remove_job_from_blades(719,19978
static void _remove_step_from_blades(754,20778
static void _free_blade(766,21142
static void _pack_blade(771,21241
static int _unpack_blade(779,21457
static void _set_job_running(795,21857
static void _set_job_running_restore(828,22739
static void *_job_fini(_job_fini852,23217
static void *_step_fini(_step_fini902,24405
static void _spawn_cleanup_thread(979,26502
static void _select_jobinfo_pack(1002,27119
static int _select_jobinfo_unpack(1018,27517
extern int init 1047,28196
extern int fini 1068,28717
extern int select_p_state_save(1091,29119
extern int select_p_state_restore(1170,31088
extern int select_p_job_init(1318,35094
extern bool select_p_node_ranking(1378,36618
extern int select_p_node_init(1383,36716
extern int select_p_block_init(1510,39952
extern int select_p_job_test(1547,41835
extern int select_p_job_begin(1588,43201
extern int select_p_job_ready(1616,43870
extern int select_p_job_resized(1623,43987
extern bool select_p_job_expand_allow(1629,44132
extern int select_p_job_expand(1634,44215
extern int select_p_job_signal(1640,44377
extern int select_p_job_fini(1647,44516
extern int select_p_job_suspend(1669,45033
extern int select_p_job_resume(1689,45519
extern bitstr_t *select_p_step_pick_nodes(select_p_step_pick_nodes1709,46002
extern int select_p_step_start(1743,46750
extern int select_p_step_finish(1784,47749
extern int select_p_pack_select_info(1828,49122
extern select_nodeinfo_t *select_p_select_nodeinfo_alloc(select_p_select_nodeinfo_alloc1836,49372
extern int select_p_select_nodeinfo_free(1847,49653
extern int select_p_select_nodeinfo_pack(1856,49846
extern int select_p_select_nodeinfo_unpack(1866,50093
extern int select_p_select_nodeinfo_set_all(1891,50662
extern int select_p_select_nodeinfo_set(1924,51554
extern int select_p_select_nodeinfo_get(1929,51671
extern select_jobinfo_t *select_p_select_jobinfo_alloc(select_p_select_jobinfo_alloc1959,52381
extern int select_p_select_jobinfo_set(1973,52687
extern int select_p_select_jobinfo_get(2011,53605
extern select_jobinfo_t *select_p_select_jobinfo_copy(select_p_select_jobinfo_copy2062,54725
extern int select_p_select_jobinfo_free(2077,55071
extern int select_p_select_jobinfo_pack(2097,55497
extern int select_p_select_jobinfo_unpack(2111,55889
extern char *select_p_select_jobinfo_sprint(select_p_select_jobinfo_sprint2139,56471
extern char *select_p_select_jobinfo_xstrdup(select_p_select_jobinfo_xstrdup2175,57243
extern int select_p_update_block(2208,57979
extern int select_p_update_sub_node(2213,58097
extern int select_p_fail_cnode(2218,58221
extern int select_p_get_info_from_plugin(2223,58323
extern int select_p_update_node_config(2230,58509
extern int select_p_update_node_state(2235,58605
extern int select_p_alter_node_cnt(2240,58721
extern int select_p_reconfigure(2255,59141
extern bitstr_t * select_p_resv_test(2261,59253
extern void select_p_ba_init(2269,59505
extern int *select_p_ba_get_dims(select_p_ba_get_dims2274,59635
extern void select_p_ba_fini(2279,59693

src/plugins/select/other/other_select.c,2579
const char *node_select_syms[node_select_syms65,3140
static slurm_select_ops_t ops;117,4553
static plugin_context_t *g_context g_context118,4584
static pthread_mutex_t	g_context_lock 119,4627
static bool init_run 120,4694
extern int other_select_init(125,4780
extern int other_select_fini(167,5780
extern int other_state_save(187,6153
extern int other_state_restore(200,6456
extern int other_job_init(212,6728
extern int other_node_init(225,7004
extern int other_block_init(238,7291
extern int other_job_test(266,8554
extern int other_job_begin(288,9186
extern int other_job_ready(302,9541
extern bool other_job_expand_allow(313,9729
extern int other_job_expand(327,10072
extern int other_job_resized(341,10444
extern int other_job_signal(355,10754
extern int other_job_fini(367,11037
extern int other_job_suspend(382,11454
extern int other_job_resume(397,11908
extern bitstr_t *other_step_pick_nodes(other_step_pick_nodes419,12703
extern int other_step_start(431,13008
extern int other_step_finish(444,13288
extern int other_pack_select_info(453,13448
extern int other_select_nodeinfo_pack(463,13724
extern int other_select_nodeinfo_unpack(473,13976
extern select_nodeinfo_t *other_select_nodeinfo_alloc(other_select_nodeinfo_alloc483,14223
extern int other_select_nodeinfo_free(491,14369
extern int other_select_nodeinfo_set_all(499,14536
extern int other_select_nodeinfo_set(507,14678
extern int other_select_nodeinfo_get(515,14841
extern select_jobinfo_t *other_select_jobinfo_alloc(other_select_jobinfo_alloc526,15110
extern int other_select_jobinfo_free(537,15378
extern int other_select_jobinfo_set(544,15539
extern int other_select_jobinfo_get(559,15993
extern select_jobinfo_t *other_select_jobinfo_copy(other_select_jobinfo_copy574,16438
extern int other_select_jobinfo_pack(588,16832
extern int other_select_jobinfo_unpack(604,17351
extern char *other_select_jobinfo_sprint(other_select_jobinfo_sprint621,17878
extern char *other_select_jobinfo_xstrdup(other_select_jobinfo_xstrdup634,18286
extern int other_update_block 647,18585
extern int other_update_sub_node 659,18879
extern int other_fail_cnode 672,19192
extern int other_get_info_from_plugin 686,19550
extern int other_update_node_config 702,20048
extern int other_update_node_state 718,20479
extern int other_alter_node_cnt 730,20764
extern int other_reconfigure 741,21007
extern bitstr_t * other_resv_test(761,21710
extern void other_ba_init(772,21998
extern void other_ba_fini(780,22169
extern int *other_ba_get_dims(other_ba_get_dims788,22268

src/plugins/select/other/other_select.h,37
#define _CRAY_OTHER_SELECT_H41,2231

src/plugins/select/cons_res/dist_tasks.c,572
#define ALLOCATE_FULL_SOCKET 50,2578
#define MAX_BOARDS 56,2764
#define _DEBUG 59,2826
uint32_t comb_counts[comb_counts67,2987
static int *sockets_cpu_cnt sockets_cpu_cnt77,3226
void _gen_combs(88,3512
static inline void _log_select_maps(121,4139
static int _compute_c_b_task_dist(154,5237
static int _compute_plane_dist(229,7617
static int _cmp_int_ascend(298,9705
static int _cmp_int_descend(304,9851
static int _cmp_sock(312,10068
static void _block_sync_core_bitmap(332,10787
static int _cyclic_sync_core_bitmap(690,21187
extern int cr_dist(898,27793

src/plugins/select/cons_res/dist_tasks.h,39
#define _CONS_RES_DIST_TASKS_H41,2176

src/plugins/select/cons_res/job_test.c,747
#define _DEBUG 110,4688
uint16_t _allocate_sockets(140,6021
uint16_t _allocate_cores(157,6832
static uint16_t _allocate_sc(176,7724
uint16_t _can_job_run_on_node(467,17311
static int _is_node_busy(588,21213
static int _verify_node_state(632,22557
bitstr_t *_make_core_bitmap(_make_core_bitmap762,26457
static int _get_cpu_cnt(813,27850
static void _get_res_usage(842,28788
static bool _enough_nodes(862,29370
static void _cpus_to_use(875,29652
static int _eval_nodes(894,30207
static int _eval_nodes_lln(1276,42069
static int _eval_nodes_topo(1367,44681
static int _choose_nodes(1819,59227
static inline void _log_select_maps(1899,61556
static uint16_t *_select_nodes(_select_nodes1930,62667
extern int cr_job_test(2023,65727

src/plugins/select/cons_res/job_test.h,31
#define _CR_JOB_TEST_H41,2141

src/plugins/select/cons_res/select_cons_res.c,6215
#define NODEINFO_MAGIC 111,4712
slurm_ctl_conf_t slurmctld_conf 118,4955
struct node_record *node_record_table_ptr node_record_table_ptr119,5017
List part_list 120,5089
List job_list 121,5134
int node_record_count 122,5178
time_t last_node_update 123,5230
struct switch_record *switch_record_table switch_record_table124,5284
int switch_record_cnt 125,5356
bitstr_t *avail_node_bitmap avail_node_bitmap126,5408
bitstr_t *idle_node_bitmap idle_node_bitmap127,5466
uint16_t *cr_node_num_cores cr_node_num_cores128,5523
uint32_t *cr_node_cores_offset cr_node_cores_offset129,5581
slurm_ctl_conf_t slurmctld_conf;131,5648
struct node_record *node_record_table_ptr;node_record_table_ptr132,5681
List part_list;133,5724
List job_list;134,5740
int node_record_count;135,5755
time_t last_node_update;136,5778
struct switch_record *switch_record_table;switch_record_table137,5803
int switch_record_cnt;138,5846
bitstr_t *avail_node_bitmap;avail_node_bitmap139,5869
bitstr_t *idle_node_bitmap;idle_node_bitmap140,5898
uint16_t *cr_node_num_cores;cr_node_num_cores141,5926
uint32_t *cr_node_cores_offset;cr_node_cores_offset142,5955
const char plugin_name[plugin_name173,7349
const char plugin_type[plugin_type174,7427
const uint32_t plugin_id 175,7473
const uint32_t plugin_version 176,7510
const uint32_t pstate_version 177,7547
uint16_t cr_type 179,7620
uint32_t select_debug_flags;181,7687
uint16_t select_fast_schedule;182,7716
struct part_res_record *select_part_record select_part_record184,7748
struct node_res_record *select_node_record select_node_record185,7799
struct node_use_record *select_node_usage select_node_usage186,7850
static bool select_state_initializing 187,7901
static int select_node_cnt 188,7947
static int preempt_reorder_cnt 189,7979
static bool preempt_strict_order 190,8015
struct select_nodeinfo 192,8058
	uint16_t magic;193,8083
	uint16_t alloc_cpus;194,8120
	uint32_t alloc_memory;195,8142
struct sort_support 226,9489
	int jstart;227,9511
	struct job_resources *tmpjobs;tmpjobs228,9524
static void _dump_job_res(232,9617
static void _dump_nodes(242,9874
static void _dump_part(269,10613
static void _dump_state(289,11142
static struct part_row_data *_dup_row_data(_dup_row_data301,11398
static struct part_res_record *_dup_part_data(_dup_part_data330,12256
static struct node_use_record *_dup_node_usage(_dup_node_usage356,12911
static void _destroy_row_data(381,13606
static void _destroy_part_data(391,13861
static void _create_part_data(408,14207
static int _cr_job_list_sort(450,15396
static void _destroy_node_data(460,15707
static void _add_job_to_row(477,16024
static int _can_job_fit_in_row(499,16715
static void _swap_rows(510,16998
extern void cr_sort_part_rows(534,17647
static void _build_row_bitmaps(567,18491
static int _add_job_to_res(783,24971
static job_resources_t *_create_job_resources(_create_job_resources895,28182
static int _job_expand(911,28850
static int _rm_job_from_res(1122,36492
static int _rm_job_from_one_node(1270,40427
static struct multi_core_data * _create_default_mc(1392,44051
static uint16_t _get_job_node_req(1411,44749
static int _find_job 1429,45217
static bool _is_preemptable(1437,45385
static int _test_only(1448,45656
static int _sort_usable_nodes_dec(1478,46541
static int _run_now(1492,46937
static int _will_run_test(1658,52357
_compare_support(1817,57507
extern int init(1836,57934
extern int fini(1846,58154
extern int select_p_state_save(1866,58572
extern int select_p_state_restore(1876,58815
extern int select_p_job_init(1886,59064
extern bool select_p_node_ranking(1893,59226
extern int select_p_node_init(1910,60038
extern int select_p_block_init(1987,62676
extern int select_p_job_test(2023,64470
extern int select_p_job_begin(2095,66771
extern int select_p_job_ready(2101,66916
extern int select_p_job_resized(2127,67577
extern bool select_p_job_expand_allow(2137,67801
extern int select_p_job_expand(2142,67864
extern int select_p_job_signal(2153,68154
extern int select_p_job_fini(2161,68312
extern int select_p_job_suspend(2174,68732
extern int select_p_job_resume(2186,69003
extern bitstr_t *select_p_step_pick_nodes(select_p_step_pick_nodes2197,69183
extern int select_p_step_start(2205,69365
extern int select_p_step_finish(2210,69454
extern int select_p_pack_select_info(2215,69544
extern int select_p_select_nodeinfo_pack(2223,69778
extern int select_p_select_nodeinfo_unpack(2237,70118
extern select_nodeinfo_t *select_p_select_nodeinfo_alloc(select_p_select_nodeinfo_alloc2263,70779
extern int select_p_select_nodeinfo_free(2272,70974
extern int select_p_select_nodeinfo_set_all(2286,71274
extern int select_p_select_nodeinfo_set(2362,73484
extern int select_p_select_nodeinfo_get(2377,73824
extern int select_p_select_jobinfo_alloc(2426,74958
extern int select_p_select_jobinfo_free(2431,75033
extern int select_p_select_jobinfo_set(2436,75128
extern int select_p_select_jobinfo_get(2443,75292
extern select_jobinfo_t *select_p_select_jobinfo_copy(select_p_select_jobinfo_copy2450,75454
extern int select_p_select_jobinfo_pack(2456,75556
extern int select_p_select_jobinfo_unpack(2462,75695
extern char *select_p_select_jobinfo_sprint(select_p_select_jobinfo_sprint2469,75845
extern char *select_p_select_jobinfo_xstrdup(select_p_select_jobinfo_xstrdup2479,76038
extern int select_p_update_block 2485,76141
extern int select_p_update_sub_node 2490,76237
extern int select_p_fail_cnode(2495,76336
extern int select_p_get_info_from_plugin(2500,76425
extern int select_p_update_node_config 2526,77057
extern int select_p_update_node_state(2542,77435
extern int select_p_alter_node_cnt(2547,77531
extern int select_p_reconfigure(2552,77633
bitstr_t *_make_core_bitmap_filtered(_make_core_bitmap_filtered2585,78581
bitstr_t *_sequential_pick(_sequential_pick2614,79214
bitstr_t *_pick_first_cores(_pick_first_cores2776,83415
static int _get_avail_core_in_node(2838,85154
extern bitstr_t * select_p_resv_test(2871,86104
extern void select_p_ba_init(3181,95296
extern void select_p_ba_fini(3185,95389
extern int *select_p_ba_get_dims(select_p_ba_get_dims3190,95438

src/plugins/select/cons_res/select_cons_res.h,762
#define _CONS_RES_H42,2204
struct part_row_data 69,2908
	bitstr_t *row_bitmap;row_bitmap70,2931
	uint32_t num_jobs;71,2992
	struct job_resources **job_list;job_list72,3046
	uint32_t job_list_size;73,3110
struct part_res_record 77,3205
	struct part_res_record *next;next78,3230
	uint16_t num_rows;79,3295
	struct part_record *part_ptr;part_ptr80,3344
	struct part_row_data *row;row81,3414
struct node_res_record 85,3511
	struct node_record *node_ptr;node_ptr86,3536
	uint16_t cpus;87,3596
	uint16_t boards;88,3651
	uint16_t sockets;89,3704
	uint16_t cores;90,3758
	uint16_t vpus;91,3809
	uint32_t real_memory;93,3898
struct node_use_record 97,3998
	uint32_t alloc_memory;98,4023
	List gres_list;100,4109
	uint16_t node_state;102,4186

src/plugins/select/serial/dist_tasks.c,116
static int _compute_c_b_task_dist(40,2054
static void _block_sync_core_bitmap(62,2612
extern int cr_dist(77,3012

src/plugins/select/serial/dist_tasks.h,37
#define _SERIAL_DIST_TASKS_H39,2111

src/plugins/select/serial/job_test.c,332
uint16_t _allocate_cores(62,2765
uint16_t _can_job_run_on_node(97,4073
static int _is_node_busy(176,6617
static int _verify_node_state(220,7955
bitstr_t *_make_core_bitmap(_make_core_bitmap337,11492
static int _get_res_usage(374,12522
static uint16_t *_select_nodes(_select_nodes446,14691
extern int cr_job_test(498,16282

src/plugins/select/serial/job_test.h,35
#define _SERIAL_JOB_TEST_H39,2068

src/plugins/select/serial/select_serial.c,5696
#define NODEINFO_MAGIC 52,2277
slurm_ctl_conf_t slurmctld_conf 59,2520
struct node_record *node_record_table_ptr node_record_table_ptr60,2582
List part_list 61,2654
List job_list 62,2699
int node_record_count 63,2743
time_t last_node_update 64,2795
struct switch_record *switch_record_table switch_record_table65,2849
int switch_record_cnt 66,2921
bitstr_t *avail_node_bitmap avail_node_bitmap67,2973
bitstr_t *idle_node_bitmap idle_node_bitmap68,3031
uint16_t *cr_node_num_cores cr_node_num_cores69,3088
uint32_t *cr_node_cores_offset cr_node_cores_offset70,3146
slurm_ctl_conf_t slurmctld_conf;72,3213
struct node_record *node_record_table_ptr;node_record_table_ptr73,3246
List part_list;74,3289
List job_list;75,3305
int node_record_count;76,3320
time_t last_node_update;77,3343
struct switch_record *switch_record_table;switch_record_table78,3368
int switch_record_cnt;79,3411
bitstr_t *avail_node_bitmap;avail_node_bitmap80,3434
bitstr_t *idle_node_bitmap;idle_node_bitmap81,3463
uint16_t *cr_node_num_cores;cr_node_num_cores82,3491
uint32_t *cr_node_cores_offset;cr_node_cores_offset83,3520
const char plugin_name[plugin_name114,4914
const char plugin_type[plugin_type115,4981
const uint32_t plugin_id 116,5025
const uint32_t plugin_version 117,5062
const uint32_t pstate_version 118,5099
uint16_t cr_type 120,5172
uint32_t select_debug_flags;122,5239
uint16_t select_fast_schedule;123,5268
struct part_res_record *select_part_record select_part_record125,5300
struct node_res_record *select_node_record select_node_record126,5351
struct node_use_record *select_node_usage select_node_usage127,5402
static bool select_state_initializing 128,5453
static int select_core_cnt 129,5499
static int select_node_cnt 130,5531
static bool job_preemption_enabled 131,5563
static bool job_preemption_killing 132,5607
static bool job_preemption_tested 133,5651
struct select_nodeinfo 135,5696
	uint16_t magic;136,5721
	uint16_t alloc_cpus;137,5758
static void _dump_job_res(159,6689
static void _dump_nodes(169,6946
static void _dump_part(196,7685
static void _dump_state(216,8214
static struct part_row_data *_dup_row_data(_dup_row_data228,8470
static struct part_res_record *_dup_part_data(_dup_part_data258,9302
static struct node_use_record *_dup_node_usage(_dup_node_usage284,9957
static void _destroy_row_data(309,10652
static void _destroy_part_data(324,11024
static void _create_part_data(341,11370
static int _cr_job_list_sort(383,12559
static void _destroy_node_data(392,12869
static void _add_job_to_row(409,13186
static int _can_job_fit_in_row(431,13877
static void _swap_rows(442,14160
extern void cr_sort_part_rows(466,14809
static void _build_row_bitmaps(499,15653
static int _add_job_to_res(729,22439
static int _rm_job_from_res(856,26164
static uint16_t _get_job_node_share(1012,30415
static int _find_job 1030,30885
static bool _is_preemptable(1038,31053
static int _test_only(1049,31324
static int _sort_usable_nodes_dec(1065,31691
static int _run_now(1077,32014
static int _will_run_test(1213,36338
extern int init(1358,40932
extern int fini(1368,41152
extern int select_p_state_save(1388,41570
extern int select_p_state_restore(1398,41813
extern int select_p_job_init(1408,42062
extern bool select_p_node_ranking(1415,42224
extern int select_p_node_init(1432,43036
extern int select_p_block_init(1496,45151
static bool _is_job_spec_serial(1501,45226
extern int select_p_job_test(1590,48751
extern int select_p_job_begin(1656,50710
extern int select_p_job_ready(1662,50855
extern int select_p_job_resized(1688,51516
extern bool select_p_job_expand_allow(1694,51636
extern int select_p_job_expand(1699,51700
extern int select_p_job_signal(1705,51831
extern int select_p_job_fini(1713,51989
extern int select_p_job_suspend(1726,52409
extern int select_p_job_resume(1738,52680
extern bitstr_t *select_p_step_pick_nodes(select_p_step_pick_nodes1749,52860
extern int select_p_step_start(1757,53042
extern int select_p_step_finish(1762,53131
extern int select_p_pack_select_info(1767,53221
extern int select_p_select_nodeinfo_pack(1775,53455
extern int select_p_select_nodeinfo_unpack(1784,53644
extern select_nodeinfo_t *select_p_select_nodeinfo_alloc(select_p_select_nodeinfo_alloc1805,54130
extern int select_p_select_nodeinfo_free(1814,54325
extern int select_p_select_nodeinfo_set_all(1828,54625
extern int select_p_select_nodeinfo_set(1905,56686
extern int select_p_select_nodeinfo_get(1920,57026
extern int select_p_select_jobinfo_alloc(1969,58139
extern int select_p_select_jobinfo_free(1974,58214
extern int select_p_select_jobinfo_set(1979,58309
extern int select_p_select_jobinfo_get(1986,58473
extern select_jobinfo_t *select_p_select_jobinfo_copy(select_p_select_jobinfo_copy1993,58635
extern int select_p_select_jobinfo_pack(1999,58737
extern int select_p_select_jobinfo_unpack(2005,58876
extern char *select_p_select_jobinfo_sprint(select_p_select_jobinfo_sprint2012,59026
extern char *select_p_select_jobinfo_xstrdup(select_p_select_jobinfo_xstrdup2022,59219
extern int select_p_update_block(2028,59330
extern int select_p_update_sub_node(2033,59425
extern int select_p_fail_cnode(2038,59523
extern int select_p_get_info_from_plugin(2043,59612
extern int select_p_update_node_config(2070,60318
extern int select_p_update_node_state(2086,60699
extern int select_p_alter_node_cnt(2091,60795
extern int select_p_reconfigure(2096,60897
extern bitstr_t * select_p_resv_test(2142,62403
extern void select_p_ba_init(2211,64148
extern void select_p_ba_fini(2215,64241
extern int *select_p_ba_get_dims(select_p_ba_get_dims2220,64290

src/plugins/select/serial/select_serial.h,740
#define _SELECT_SERIAL_H41,2216
struct part_row_data 68,2925
	bitstr_t *row_bitmap;row_bitmap69,2948
	uint32_t num_jobs;70,3009
	struct job_resources **job_list;job_list71,3063
	uint32_t job_list_size;72,3127
struct part_res_record 76,3222
	struct part_res_record *next;next77,3247
	uint16_t num_rows;78,3312
	struct part_record *part_ptr;part_ptr79,3361
	struct part_row_data *row;row80,3431
struct node_res_record 84,3528
	struct node_record *node_ptr;node_ptr85,3553
	uint16_t cpus;86,3613
	uint16_t sockets;87,3668
	uint16_t cores;88,3722
	uint16_t vpus;89,3773
	uint32_t real_memory;91,3862
struct node_use_record 95,3962
	uint32_t alloc_memory;96,3987
	List gres_list;98,4073
	uint16_t node_state;100,4150

src/plugins/select/bluegene/ba_common.c,3037
#define DISPLAY_FULL_DIM 42,2106
int cluster_dims 45,2163
int cluster_base 46,2185
int cluster_dims 48,2214
int cluster_base 49,2236
uint32_t cluster_flags 51,2266
uint16_t ba_deny_pass 52,2294
ba_geo_combos_t geo_combos[geo_combos54,2322
bool ba_initialized 56,2372
uint32_t ba_debug_flags 57,2401
int DIM_SIZE[DIM_SIZE58,2430
bitstr_t *ba_main_mp_bitmap ba_main_mp_bitmap59,2464
pthread_mutex_t ba_system_mutex 60,2500
static void _pack_ba_connection(62,2562
static int _unpack_ba_connection(72,2853
static void _pack_ba_switch(87,3230
static int _unpack_ba_switch(104,3680
static bool _incr_geo(133,4387
static void _ba_node_xlate_from_1d(152,4833
static int _ba_node_map_set_range_internal(166,5178
static ba_geo_combos_t *_build_geo_bitmap_arrays(_build_geo_bitmap_arrays194,5882
static void _free_geo_bitmap_arrays(283,8311
static int _find_next_geo_inx(305,8929
static bitstr_t * _test_geo(320,9503
static int _geo_test_maps(365,10925
static void _internal_removable_set_mps(448,13375
static void _internal_reset_ba_system(492,14477
static ba_mp_t *_internal_loc2ba_mp(_internal_loc2ba_mp522,15231
extern void ba_init(561,16060
extern void ba_fini(745,20850
extern void ba_setup_wires(764,21153
extern void free_internal_ba_mp(787,21542
extern void destroy_ba_mp(804,21923
extern void pack_ba_mp(813,22062
extern int unpack_ba_mp(848,23028
extern ba_mp_t *str2ba_mp(str2ba_mp906,24655
extern ba_mp_t *loc2ba_mp(loc2ba_mp944,25551
extern void ba_setup_mp(998,26726
extern ba_mp_t *ba_copy_mp(ba_copy_mp1047,27950
extern int ba_geo_list_print(1073,28779
extern void ba_print_geo_table(1097,29391
extern void ba_create_geo_table(1112,29740
extern void ba_free_geo_table(1185,31907
extern bitstr_t *ba_node_map_alloc(ba_node_map_alloc1208,32499
extern void ba_node_map_free(1219,32816
extern void ba_node_map_set(1232,33244
extern void ba_node_map_set_range(1245,33755
extern int ba_node_map_test(1261,34277
extern void ba_node_map_add(1275,34747
extern void ba_node_map_rm(1290,35310
extern void ba_node_map_print(1308,35985
	int i,1320,36221
	int i, j,1320,36221
	int i, j, offset[offset1320,36221
	for (i = 0; i < my_geo_system->total_size;total_size1325,36353
extern char *ba_node_map_ranged_hostlist(ba_node_map_ranged_hostlist1352,37178
	int i,1364,37426
	int i, j,1364,37426
	int i, j, offset[offset1364,37426
	hostlist_t hl 1365,37471
	char *ret_str ret_str1366,37494
	for (i = 0; i < my_geo_system->total_size;total_size1371,37604
extern int ba_geo_test_all(1429,39781
extern int ba_node_xlate_to_1d(1453,40444
extern int ba_set_removable_mps(1479,41131
extern int ba_reset_all_removed_mps(1501,41632
extern void ba_update_mp_state(1514,41981
extern int validate_coord(1539,42632
extern char *ba_switch_usage_str(ba_switch_usage_str1565,43192
extern void set_ba_debug_flags(1618,44381
extern void reset_ba_system(1627,44622
extern char *ba_passthroughs_string(ba_passthroughs_string1634,44769
extern char *give_geo(give_geo1667,45494

src/plugins/select/bluegene/ba_common.h,2394
#define _BLOCK_ALLOCATOR_COMMON_H_40,2091
#define BIG_MAX 45,2191
#define BUFSIZE 46,2212
#define SWAP(48,2234
#define NUM_PORTS_PER_NODE 56,2397
#define PASS_DENY_A 61,2521
#define PASS_DENY_X 62,2551
#define PASS_DENY_Y 63,2581
#define PASS_DENY_Z 64,2611
#define PASS_DENY_ALL 65,2641
#define PASS_FOUND_A 67,2672
#define PASS_FOUND_X 68,2702
#define PASS_FOUND_Y 69,2732
#define PASS_FOUND_Z 70,2762
#define PASS_FOUND_ANY 71,2792
#define BA_MP_USED_FALSE 73,2823
#define BA_MP_USED_TRUE 74,2864
#define BA_MP_USED_TEMP 75,2905
#define BA_MP_USED_ALTERED 76,2946
#define BA_MP_USED_PASS_BIT 77,2987
#define BA_MP_USED_ALTERED_PASS 78,3028
#define LONGEST_BGQ_DIM_LEN 87,3450
typedef struct ba_geo_table 90,3488
	uint16_t size;91,3518
	uint16_t *geometry;geometry92,3561
	uint16_t full_dim_cnt;93,3612
	uint16_t passthru_cnt;94,3674
	struct ba_geo_table *next_ptr;next_ptr95,3738
} ba_geo_table_t;96,3803
	uint16_t dim_count;99,3839
	int *dim_size;dim_size100,3895
	uint32_t total_size;101,3956
	ba_geo_table_t **geo_table_ptr;geo_table_ptr103,4018
	uint16_t geo_table_size;105,4120
} ba_geo_system_t;106,4185
	uint16_t mp_tar[mp_tar122,4733
	uint16_t port_tar;124,4790
	uint16_t used;125,4810
} ba_connection_t;126,4826
	ba_connection_t int_wire[int_wire138,5148
	ba_connection_t ext_wire[ext_wire139,5195
	uint16_t usage;140,5242
} ba_switch_t;141,5259
typedef struct block_allocator_mp 146,5327
	ba_switch_t alter_switch[alter_switch148,5398
	ba_switch_t axis_switch[axis_switch150,5481
	uint32_t ba_geo_index;153,5630
	bitstr_t *cnode_bitmap;cnode_bitmap155,5688
	bitstr_t *cnode_err_bitmap;cnode_err_bitmap157,5775
	bitstr_t *cnode_usable_bitmap;cnode_usable_bitmap159,5862
	uint16_t coord[coord161,5925
	char coord_str[coord_str163,6007
	uint32_t index;166,6146
	char *loc;loc168,6194
	struct block_allocator_mp *next_mp[next_mp169,6206
	char **nodecard_loc;nodecard_loc170,6263
	struct block_allocator_mp *prev_mp[prev_mp171,6285
	int state;172,6342
	uint16_t used;174,6399
} ba_mp_t;175,6415
	int elem_count;178,6444
	int *gap_count;gap_count180,6529
	bool *has_wrap;has_wrap181,6583
	int *set_count_array;set_count_array183,6673
	bitstr_t **set_bits_array;set_bits_array184,6736
	uint16_t *start_coord;start_coord185,6789
	uint16_t *block_size;block_size186,6851
} ba_geo_combos_t;187,6905

src/plugins/select/bluegene/bg_core.c,670
#define MAX_FREE_RETRIES 47,2335
#define FREE_SLEEP_INTERVAL 53,2510
#define HUGE_BUF_SIZE 57,2654
#define _DEBUG 59,2687
	List track_list;62,2722
	uint32_t job_id;63,2740
	bool destroy;64,2758
} bg_free_block_list_t;65,2773
static int _post_block_free(71,2975
static void *_track_freeing_blocks(_track_freeing_blocks179,6614
extern bool blocks_overlap(270,9240
extern bool block_mp_passthrough(302,10202
extern void bg_requeue_job(324,10736
extern void sort_bg_record_inc_size(356,11655
extern int bg_free_block(363,11823
extern void free_block_list(550,17421
extern int node_already_down(673,21038
extern const char *bg_err_str(bg_err_str694,21446

src/plugins/select/bluegene/bg_core.h,65
#define _BG_CORE_H_41,2179
#define BLOCK_STATE_VERSION 57,2551

src/plugins/select/bluegene/bg_defined_block.c,88
extern int create_defined_blocks(50,2500
extern int create_full_system_block(271,8370

src/plugins/select/bluegene/bg_defined_block.h,43
#define _BLUEGENE_DEFINED_BLOCK_H_41,2206

src/plugins/select/bluegene/bg_dynamic_block.c,186
extern List create_dynamic_block(54,2637
extern bg_record_t *create_small_record(create_small_record480,14124
static int _split_block(595,17562
static int _breakup_blocks(784,21448

src/plugins/select/bluegene/bg_dynamic_block.h,43
#define _BLUEGENE_DYNAMIC_BLOCK_H_41,2207

src/plugins/select/bluegene/bg_enums.h,3075
#define ATTACH_BGL_H	41,2265
#define ATTACH_BG_H	42,2328
	const char * host_name;52,2501
	const char * executable_name;53,2574
	int    pid;54,2634
} MPIR_PROCDESC;55,2695
typedef char *   pm_partition_id_t;62,2789
typedef int      rm_connection_type_t;63,2825
typedef int      rm_partition_mode_t;64,2864
typedef int      rm_partition_state_t;65,2902
typedef void *   rm_partition_t;66,2941
typedef char *   rm_BGL_t;67,2974
typedef char *   rm_BG_t;68,3001
typedef char *   rm_component_id_t;69,3027
typedef rm_component_id_t rm_bp_id_t;70,3063
typedef int      rm_BP_state_t;71,3101
typedef char *   rm_job_list_t;72,3133
typedef rm_BGL_t my_bluegene_t;76,3189
#define PARTITION_ALREADY_DEFINED 77,3221
typedef rm_BG_t my_bluegene_t;79,3281
typedef void * my_bluegene_t;81,3318
typedef enum bg_layout_type 84,3356
	LAYOUT_STATIC,85,3386
	LAYOUT_OVERLAP,87,3477
	LAYOUT_DYNAMIC	89,3564
} bg_layout_t;90,3613
	BG_BLOCK_FREE 93,3644
	BG_BLOCK_ALLOCATED,94,3682
	BG_BLOCK_BUSY,96,3794
	BG_BLOCK_BOOTING,97,3832
	BG_BLOCK_INITED,98,3873
	BG_BLOCK_REBOOTING,99,3918
	BG_BLOCK_TERM,100,3961
	BG_BLOCK_NAV,101,4006
} bg_block_status_t;102,4055
        BG_JOB_SETUP 105,4092
        BG_JOB_LOADING,106,4144
        BG_JOB_STARTING,107,4193
        BG_JOB_RUNNING,108,4243
        BG_JOB_CLEANUP,109,4292
        BG_JOB_TERMINATED,110,4340
        BG_JOB_ERROR 111,4392
} bg_job_status_t;112,4449
	BG_BLOCK_ACTION_NAV 115,4484
	BG_BLOCK_ACTION_NONE,116,4510
	BG_BLOCK_ACTION_BOOT,117,4533
	BG_BLOCK_ACTION_FREE118,4556
} bg_block_action_t;119,4578
#define BG_BLOCK_ERROR_FLAG 121,4600
#define BG_SWITCH_NONE 124,4662
#define BG_SWITCH_OUT 125,4700
#define BG_SWITCH_IN 126,4738
#define BG_SWITCH_OUT_PASS 127,4776
#define BG_SWITCH_IN_PASS 128,4814
#define BG_SWITCH_WRAPPED 129,4852
#define BG_SWITCH_PASS_FLAG 130,4911
#define BG_SWITCH_PASS_USED 132,5019
#define BG_SWITCH_PASS 133,5085
#define BG_SWITCH_WRAPPED_PASS 134,5150
#define BG_SWITCH_TORUS 135,5229
#define BG_SWITCH_CABLE_ERROR 137,5306
#define BG_SWITCH_CABLE_ERROR_SET 140,5414
#define BG_SWITCH_CABLE_ERROR_FULL 148,5687
#define BG_FREE_PREVIOUS_BLOCK 162,6164
#define BG_MIN_BLOCK_BOOT 163,6222
#define BG_INCR_BLOCK_BOOT 164,6276
#define MAX_PTHREAD_RETRIES 166,6337
#define BLOCK_ERROR_STATE 167,6368
#define ADMIN_ERROR_STATE 168,6400
#define BUFSIZE 169,6432
#define BITSIZE 170,6453
#define BLOCK_MAGIC 172,6474
#define REMOVE_USER_ERR 174,6502
#define REMOVE_USER_NONE 175,6530
#define REMOVE_USER_FOUND 176,6558
	BG_ERROR_INVALID_STATE 179,6602
	BG_ERROR_BLOCK_NOT_FOUND,180,6633
	BG_ERROR_BOOT_ERROR,181,6660
	BG_ERROR_JOB_NOT_FOUND,182,6682
	BG_ERROR_MP_NOT_FOUND,183,6707
	BG_ERROR_SWITCH_NOT_FOUND,184,6731
	BG_ERROR_BLOCK_ALREADY_DEFINED,185,6759
	BG_ERROR_JOB_ALREADY_DEFINED,186,6792
	BG_ERROR_CONNECTION_ERROR,187,6823
	BG_ERROR_INTERNAL_ERROR,188,6851
	BG_ERROR_INVALID_INPUT,189,6877
	BG_ERROR_INCONSISTENT_DATA,190,6902
	BG_ERROR_NO_IOBLOCK_CONNECTED,191,6931
	BG_ERROR_FREE,192,6963
} bg_errno_t;193,6979

src/plugins/select/bluegene/bg_job_info.c,549
static char *_yes_no_string(_yes_no_string45,2314
extern select_jobinfo_t *alloc_select_jobinfo(alloc_select_jobinfo60,2666
extern int free_select_jobinfo(87,3504
extern int set_select_jobinfo(118,4385
extern int get_select_jobinfo(268,8724
extern select_jobinfo_t *copy_select_jobinfo(copy_select_jobinfo400,12176
extern int  pack_select_jobinfo(447,13847
extern int unpack_select_jobinfo(591,18233
extern char *sprint_select_jobinfo(sprint_select_jobinfo714,22193
extern char *xstrdup_select_jobinfo(xstrdup_select_jobinfo856,25768

src/plugins/select/bluegene/bg_job_info.h,872
#define _HAVE_SELECT_JOBINFO_H41,2225
#define JOBINFO_MAGIC 45,2294
struct select_jobinfo 47,2324
	uint16_t altered;48,2348
	bg_record_t *bg_record;bg_record50,2429
	char *bg_block_id;bg_block_id51,2494
	char *blrtsimage;blrtsimage52,2539
	uint32_t block_cnode_cnt;53,2596
	uint16_t cleaning;56,2728
	uint32_t cnode_cnt;57,2789
	uint16_t conn_type[conn_type58,2860
	uint16_t dim_cnt;59,2932
	uint16_t geometry[geometry67,3250
	char *ionode_str;ionode_str69,3349
	char *linuximage;linuximage71,3452
	uint16_t magic;72,3509
	char *mp_str;mp_str73,3546
	char *mloaderimage;mloaderimage74,3617
	char *ramdiskimage;ramdiskimage75,3676
	uint16_t reboot;76,3735
	uint16_t rotate;77,3792
	uint16_t start_loc[start_loc78,3848
	bitstr_t *units_avail;units_avail80,3940
	bitstr_t *units_used;units_used83,4068
	char *user_name;user_name84,4138

src/plugins/select/bluegene/bg_job_place.c,755
#define _DEBUG 51,2506
#define MAX_GROUPS 52,2523
pthread_mutex_t create_dynamic_mutex 55,2548
static int _get_user_groups(98,4123
static int _test_image_perms(121,4623
static bool _check_rotate_geo(176,5912
static int _check_images(206,6456
static bg_record_t *_find_matching_block(_find_matching_block279,8354
static List _handle_jobs_unusable_block(731,21394
static int _check_for_booted_overlapping_blocks(773,22875
static int _dynamically_request(989,28919
static struct job_record *_get_last_job(_get_last_job1113,32498
static int _find_best_block_match(1141,33160
static int _sync_block_lists(1579,44854
static void _build_job_resources_struct(1610,45710
static List _get_preemptables(1648,47039
extern int submit_job(1742,50010

src/plugins/select/bluegene/bg_job_place.h,33
#define _BG_JOB_PLACE_H_40,2187

src/plugins/select/bluegene/bg_job_run.c,883
bool deleting_old_blocks_flag 68,2748
enum update_op 70,2784
enum update_op {START_OP,START_OP70,2784
enum update_op {START_OP, TERM_OP}TERM_OP70,2784
	char *bg_block_id;bg_block_id73,2838
	char *blrtsimage;blrtsimage74,2858
	uint16_t conn_type[conn_type75,2915
	struct job_record *job_ptr;job_ptr78,3029
	char *linuximage;linuximage80,3122
	char *mloaderimage;mloaderimage81,3179
	enum update_op op;82,3238
	char *ramdiskimage;ramdiskimage83,3289
	uint16_t reboot;84,3348
} bg_action_t;85,3405
static int _make_sure_block_still_exists(97,3855
static void _destroy_bg_action(121,4597
static void _sync_agent(137,5029
static void _start_agent(192,6675
static void *_block_agent(_block_agent588,18521
static void _block_op(604,18949
int term_jobs_on_block(635,19836
extern int start_job(657,20442
int term_job(779,24283
extern int sync_jobs(802,24924

src/plugins/select/bluegene/bg_job_run.h,31
#define _BG_JOB_RUN_H_40,2175

src/plugins/select/bluegene/bg_list_functions.c,476
extern bg_record_t *block_exist_in_list(block_exist_in_list44,2297
extern int block_ptr_exist_in_list(92,3616
extern bg_record_t *find_bg_record_in_list(find_bg_record_in_list115,4097
extern int remove_from_bg_list(142,4677
extern bg_record_t *find_and_remove_org_from_bg_list(find_and_remove_org_from_bg_list170,5402
extern bg_record_t *find_org_in_bg_list(find_org_in_bg_list200,6268
extern struct job_record *find_job_in_bg_record(find_job_in_bg_record228,7078

src/plugins/select/bluegene/bg_list_functions.h,45
#define _BRIDGE_BG_LIST_FUNCTIONS_H_42,2249

src/plugins/select/bluegene/bg_node_info.c,569
static uint32_t g_bitmap_size 44,2288
static void _free_node_subgrp(46,2324
static node_subgrp_t *_create_subgrp(_create_subgrp57,2538
static node_subgrp_t *_find_subgrp(_find_subgrp68,2814
static int _pack_node_subgrp(87,3227
static int _unpack_node_subgrp(99,3523
extern int select_nodeinfo_pack(137,4405
extern int select_nodeinfo_unpack(176,5337
extern select_nodeinfo_t *select_nodeinfo_alloc(select_nodeinfo_alloc224,6628
extern int select_nodeinfo_free(247,7225
extern int select_nodeinfo_set_all(265,7650
extern int select_nodeinfo_get(430,12508

src/plugins/select/bluegene/bg_node_info.h,504
#define _HAVE_SELECT_NODEINFO_H41,2228
#define NODEINFO_MAGIC 45,2320
	bitstr_t *bitmap;bitmap48,2368
	uint16_t cnode_cnt;49,2387
	int32_t *inx;inx50,2408
	enum node_states state;51,2423
	char *str;str52,2448
} node_subgrp_t;53,2460
struct select_nodeinfo 55,2478
	ba_mp_t *ba_mp;ba_mp56,2503
	uint16_t bitmap_size;57,2520
	char *extra_info;extra_info58,2543
	char *failed_cnodes;failed_cnodes61,2641
	uint16_t magic;64,2744
	char *rack_mp;rack_mp65,2781
	List subgrp_list;67,2862

src/plugins/select/bluegene/bg_read_config.c,400
static s_p_options_t bg_conf_file_options[bg_conf_file_options50,2353
static int _reopen_bridge_log(89,3728
static void _destroy_bitmap(106,4153
extern void destroy_image_group_list(115,4287
extern void destroy_image(124,4465
extern int parse_blockreq(137,4652
extern int parse_image(261,8096
extern int read_bg_conf(322,9760
extern s_p_hashtbl_t *config_make_tbl(config_make_tbl912,28704

src/plugins/select/bluegene/bg_read_config.h,192
#define _BG_READ_CONFIG_H_40,2088
	bool def;50,2349
	List groups;52,2436
	char *name;name55,2550
} image_t;56,2602
	char *name;name59,2631
	gid_t gid;60,2644
} image_group_t;61,2656

src/plugins/select/bluegene/bg_record_functions.c,1068
extern void print_bg_record(55,2683
extern void destroy_bg_record(95,3762
extern void process_nodes(126,4480
extern List copy_bg_list(292,9441
extern void copy_bg_record(323,10236
extern int bg_record_cmpf_inc(459,14253
extern int bg_record_sort_aval_inc(504,15262
extern void setup_subblock_structs(561,16889
extern void requeue_and_error(599,17970
extern int add_bg_record(649,19327
extern int handle_small_record_request(901,27239
extern int format_node_name(988,29868
extern int down_nodecard(1005,30364
extern int up_nodecard(1450,42830
extern int put_block_in_error_state(1501,44107
extern int resume_block(1573,46438
extern int bg_reset_block(1621,47847
extern void bg_record_hw_failure(1717,50667
extern void bg_record_post_hw_failure(1801,52857
static int _check_all_blocks_error(1852,54255
static int _set_block_nodes_accounting(1924,56297
static void _append_ba_mps(1939,56604
static void _addto_mp_list(1966,57200
static int _coord_cmpf_inc(2019,58843
static int _ba_mp_cmpf_inc(2032,59120
static void _set_block_avail(2046,59399

src/plugins/select/bluegene/bg_record_functions.h,49
#define _BLUEGENE_BG_RECORD_FUNCTIONS_H_41,2224

src/plugins/select/bluegene/bg_status.c,392
#define RETRY_BOOT_COUNT 44,2186
static void _destroy_kill_struct(48,2263
static int _block_is_deallocating(57,2409
extern int bg_status_update_block_state(126,4408
extern List bg_status_create_kill_job_list(362,11476
extern void bg_status_process_kill_job_list(367,11573
extern void bg_status_add_job_kill_list(385,12043
extern void bg_status_remove_jobs_from_failed_block(417,12880

src/plugins/select/bluegene/bg_status.h,84
#define _BG_STATUS_H_39,2077
	uint32_t jobid;44,2139
} kill_job_struct_t;45,2156

src/plugins/select/bluegene/bg_structs.h,2932
#define _BG_STRUCTS_H_40,2080
	uint32_t actual_cnodes_per_mp;53,2275
	List blrts_list;54,2341
	char *bridge_api_file;bridge_api_file55,2359
	uint16_t bridge_api_verb;56,2383
	uint16_t cpu_ratio;57,2410
	uint32_t cpus_per_mp;58,2431
	char *default_blrtsimage;default_blrtsimage59,2454
	char *default_linuximage;default_linuximage60,2481
	char *default_mloaderimage;default_mloaderimage61,2508
	char *default_ramdiskimage;default_ramdiskimage62,2537
	uint16_t default_conn_type[default_conn_type63,2566
	uint16_t deny_pass;64,2614
	double io_ratio;65,2635
	uint16_t ionode_cnode_cnt;66,2653
	uint16_t ionodes_per_mp;67,2681
	bg_layout_t layout_mode;68,2707
	List linux_list;69,2733
	uint16_t max_block_err;70,2751
	List mloader_list;71,2776
	uint16_t mp_cnode_cnt;72,2796
	uint16_t mp_nodecard_cnt;73,2820
	double nc_ratio;74,2847
	uint16_t nodecard_cnode_cnt;75,2865
	uint16_t nodecard_ionode_cnt;76,2895
	uint16_t quarter_cnode_cnt;77,2926
	uint16_t quarter_ionode_cnt;78,2955
	List ramdisk_list;79,2985
	bitstr_t *reboot_qos_bitmap;reboot_qos_bitmap80,3005
	uint32_t slurm_debug_flags;81,3035
	uint32_t slurm_debug_level;82,3064
	char *slurm_node_prefix;slurm_node_prefix83,3093
	char *slurm_user_name;slurm_user_name84,3119
	uint32_t smallest_block;85,3143
	uint16_t sub_blocks;86,3169
	uint16_t sub_mp_sys;87,3191
} bg_config_t;88,3213
	List booted;91,3246
	List job_running;92,3297
	List main;93,3354
	List valid_small32;94,3405
	List valid_small64;95,3426
	List valid_small128;96,3447
	List valid_small256;97,3469
} bg_lists_t;98,3491
typedef struct bg_record 100,3506
	uint16_t action;101,3533
	bool avail_set;104,3655
	uint32_t avail_cnode_cnt;106,3739
	time_t avail_job_end;108,3823
	void *bg_block;bg_block110,3907
	char *bg_block_id;bg_block_id111,3969
	List ba_mp_list;112,4030
	char *blrtsimage;blrtsimage113,4096
	int boot_count;114,4161
	int boot_state;115,4232
	uint32_t cnode_cnt;119,4364
	uint32_t cnode_err_cnt;120,4429
	uint16_t conn_type[conn_type122,4510
	uint32_t cpu_cnt;123,4578
	int destroy;124,4641
	uint16_t err_ratio;125,4712
	int free_cnt;128,4846
	bool full_block;131,4957
	uint16_t geo[geo133,5043
	bitstr_t *ionode_bitmap;ionode_bitmap134,5093
	char *ionode_str;ionode_str137,5237
	List job_list;139,5336
	struct job_record *job_ptr;job_ptr141,5448
	int job_running;143,5541
	char *linuximage;linuximage146,5669
	uint16_t magic;148,5754
	char *mloaderimage;mloaderimage149,5799
	int modifying;150,5866
	bitstr_t *mp_bitmap;mp_bitmap153,5990
	int mp_count;155,6076
	char *mp_str;mp_str156,6120
	uint16_t node_use;157,6174
	struct bg_record *original;original158,6236
	char *ramdiskimage;ramdiskimage160,6335
	char *reason;reason162,6420
	uint16_t state;163,6490
	uint16_t start[start164,6556
	uint16_t start_small[start_small165,6610
	uint32_t switch_count;171,6802
} bg_record_t;173,6881

src/plugins/select/bluegene/bridge_linker.h,129
#define _BRIDGE_LINKER_H_40,2086
#  define _GNU_SOURCE46,2215
#define MAX_POLL_RETRIES 72,2778
#define POLL_INTERVAL 73,2810

src/plugins/select/bluegene/configure_api.c,2259
	void (*ba_init)ba_init45,2149
	void (*ba_fini)ba_fini47,2238
	void (*ba_setup_wires)ba_setup_wires48,2278
	void (*reset_ba_system)reset_ba_system49,2318
	void (*destroy_ba_mp)destroy_ba_mp50,2373
	char *(*ba_passthroughs_string)ba_passthroughs_string51,2418
	void (*ba_update_mp_state)ba_update_mp_state52,2474
	int (*ba_set_removable_mps)ba_set_removable_mps53,2540
	int (*ba_reset_all_removed_mps)ba_reset_all_removed_mps54,2605
	int (*new_ba_request)new_ba_request55,2645
	int (*allocate_block)allocate_block56,2712
	int (*remove_block)remove_block58,2805
	ba_mp_t *(*str2ba_mp)str2ba_mp59,2864
	ba_mp_t *(*loc2ba_mp)loc2ba_mp60,2918
	ba_mp_t *(*coord2ba_mp)coord2ba_mp61,2971
	char *(*give_geo)give_geo62,3028
	s_p_hashtbl_t *(*config_make_tbl)config_make_tbl64,3111
	void (*set_ba_debug_flags)set_ba_debug_flags65,3163
} bg_configure_api_ops_t;66,3219
static const char *syms[syms71,3312
static bg_configure_api_ops_t ops;92,3686
static plugin_context_t *g_context g_context93,3721
static pthread_mutex_t g_context_lock 94,3764
static bool init_run 95,3831
extern int bg_configure_init(97,3862
extern int bg_configure_fini(125,4380
extern void bg_configure_ba_init(141,4648
extern void bg_configure_ba_fini(150,4826
extern void bg_configure_ba_setup_wires(158,4932
extern void bg_configure_reset_ba_system(166,5052
extern void bg_configure_destroy_ba_mp(174,5203
extern char *bg_configure_ba_passthroughs_string(bg_configure_ba_passthroughs_string182,5329
extern void bg_configure_ba_update_mp_state(191,5508
extern int bg_configure_ba_set_removable_mps(199,5674
extern int bg_configure_ba_reset_all_removed_mps(208,5866
extern int bg_configure_new_ba_request(217,6025
extern int bg_configure_allocate_block(225,6200
extern int bg_configure_remove_block(235,6403
extern ba_mp_t *bg_configure_str2ba_mp(bg_configure_str2ba_mp243,6569
extern ba_mp_t *bg_configure_loc2ba_mp(bg_configure_loc2ba_mp251,6715
extern ba_mp_t *bg_configure_coord2ba_mp(bg_configure_coord2ba_mp259,6859
extern char *bg_configure_give_geo(bg_configure_give_geo267,7011
extern s_p_hashtbl_t *bg_configure_config_make_tbl(bg_configure_config_make_tbl275,7193
extern void ba_configure_set_ba_debug_flags(283,7355

src/plugins/select/bluegene/configure_api.h,37
#define _BG_CONFIGURE_API_H_39,1994

src/plugins/select/bluegene/libsched_if64.c,54
int get_parameters(47,2433
void mpirun_done(66,2889

src/plugins/select/bluegene/select_bluegene.c,4829
#define HUGE_BUF_SIZE 54,2534
slurmctld_config_t slurmctld_config 61,2779
slurm_ctl_conf_t slurmctld_conf 62,2845
struct node_record *node_record_table_ptr node_record_table_ptr63,2907
int bg_recover 64,2987
List part_list 65,3054
int node_record_count 66,3107
time_t last_node_update 67,3159
time_t last_job_update 68,3213
char *alpha_num alpha_num69,3266
void *acct_db_conn acct_db_conn71,3355
char *slurmctld_cluster_name slurmctld_cluster_name72,3412
slurmdb_cluster_rec_t *working_cluster_rec working_cluster_rec73,3479
uint32_t g_qos_count 74,3560
List assoc_mgr_qos_list 75,3611
slurmctld_config_t slurmctld_config;77,3678
slurm_ctl_conf_t slurmctld_conf;78,3715
struct node_record *node_record_table_ptr node_record_table_ptr79,3748
int bg_recover 80,3798
List part_list 81,3836
int node_record_count;82,3859
time_t last_node_update;83,3882
time_t last_job_update;84,3907
char *alpha_num alpha_num85,3931
void *acct_db_conn acct_db_conn86,3989
char *slurmctld_cluster_name slurmctld_cluster_name87,4016
slurmdb_cluster_rec_t *working_cluster_rec working_cluster_rec88,4053
uint32_t g_qos_count;89,4104
List assoc_mgr_qos_list 90,4126
const char plugin_name[plugin_name121,5520
const char plugin_type[plugin_type122,5588
const uint32_t plugin_id	123,5641
const uint32_t plugin_version	124,5673
bg_config_t *bg_conf bg_conf127,5734
bg_lists_t *bg_lists bg_lists128,5763
time_t last_bg_update;129,5792
pthread_mutex_t block_state_mutex 130,5815
int blocks_are_created 131,5878
int num_unused_cpus 132,5906
int num_possible_unused_cpus 133,5931
slurmctld_lock_t job_read_lock 134,5965
static void _destroy_bg_config(139,6118
static void _destroy_bg_lists(176,6950
static int _delete_old_blocks(217,7839
static void _set_bg_lists(328,11129
static bg_record_t *_translate_info_2_record(_translate_info_2_record351,11616
static void _local_pack_block_job_info(451,14721
static void _pack_block(477,15673
static void _pack_block_ext(547,17747
static int _unpack_block_ext(582,18646
static int _load_state_file(638,20011
static void _handle_existing_block(868,26257
static int _validate_config_blocks(924,28261
static List _get_config(1073,32312
extern int init(1215,36864
extern int fini 1303,39707
extern int select_p_state_save(1321,39998
extern int select_p_state_restore(1424,42931
extern int select_p_job_init(1482,44583
extern bool select_p_node_ranking(1497,44824
extern int select_p_node_init(1503,44970
extern int select_p_block_init(1578,46690
extern int select_p_job_test(1663,49498
extern int select_p_job_begin(1688,50242
extern int select_p_job_ready(1697,50382
extern int select_p_job_resized(1778,52598
extern bool select_p_job_expand_allow(1784,52727
extern int select_p_job_expand(1789,52791
extern int select_p_job_signal(1795,52931
extern int select_p_job_fini(1800,53030
extern int select_p_job_suspend(1832,53688
extern int select_p_job_resume(1837,53799
extern bitstr_t *select_p_step_pick_nodes(select_p_step_pick_nodes1842,53909
extern int select_p_step_start(2067,61392
extern int select_p_step_finish(2072,61481
extern int select_p_pack_select_info(2146,64006
extern int select_p_select_nodeinfo_pack(2210,65749
extern int select_p_select_nodeinfo_unpack(2217,65941
extern select_nodeinfo_t *select_p_select_nodeinfo_alloc(select_p_select_nodeinfo_alloc2224,66142
extern int select_p_select_nodeinfo_free(2229,66244
extern int select_p_select_nodeinfo_set_all(2234,66359
extern int select_p_select_nodeinfo_set(2242,66535
extern int select_p_select_nodeinfo_get(2247,66631
extern select_jobinfo_t *select_p_select_jobinfo_alloc(select_p_select_jobinfo_alloc2255,66848
extern int select_p_select_jobinfo_set(2260,66946
extern int select_p_select_jobinfo_get(2267,67141
extern select_jobinfo_t *select_p_select_jobinfo_copy(select_p_select_jobinfo_copy2274,67336
extern int select_p_select_jobinfo_free(2279,67460
extern int  select_p_select_jobinfo_pack(2284,67570
extern int  select_p_select_jobinfo_unpack(2290,67752
extern char *select_p_select_jobinfo_sprint(select_p_select_jobinfo_sprint2297,67949
extern char *select_p_select_jobinfo_xstrdup(select_p_select_jobinfo_xstrdup2303,68125
extern int select_p_update_block(2309,68269
extern int select_p_update_sub_node 2690,80226
extern int select_p_fail_cnode(2837,83969
extern int select_p_get_info_from_plugin 2982,88147
extern int select_p_update_node_config 3019,88880
extern int select_p_update_node_state(3028,89008
extern int select_p_alter_node_cnt(3048,89407
extern int select_p_reconfigure(3337,97232
extern bitstr_t *select_p_resv_test(select_p_resv_test3366,98322
extern void select_p_ba_init(3433,100467
extern void select_p_ba_fini(3438,100591
extern int *select_p_ba_get_dims(select_p_ba_get_dims3443,100643

src/plugins/select/bluegene/slurm_epilog.c,112
#define _DEBUG 57,2546
#define POLL_SLEEP 63,2661
int main(67,2770
static void _wait_part_not_ready(88,3176

src/plugins/select/bluegene/slurm_prolog.c,229
#define _DEBUG 59,2636
#define POLL_SLEEP 60,2653
int max_delay 62,2710
int cur_delay 63,2770
int main(69,2917
static int _wait_part_ready(93,3488
static int _get_job_size(142,4544
static int _partitions_dealloc(180,5396

src/plugins/select/bluegene/bl_bgq/bridge_helper.h,135
#define _BRIDGE_HELPER_H_40,2086
using namespace std;68,2857
using namespace bgsched;69,2878
using namespace bgsched::core;70,2903

src/plugins/select/bluegene/bl_bgq/bridge_status.h,34
#define _BRIDGE_STATUS_H_40,2086

src/plugins/select/bluegene/ba/block_allocator.c,2582
	int dim;64,2762
	uint16_t geometry[geometry65,2772
	int in;66,2812
	int out;67,2821
} ba_path_switch_t;68,2831
#define DEBUG_PA71,2853
#define BEST_COUNT_INIT 72,2870
bool _initialized 75,2911
bool _wires_initialized 76,2938
bool _mp_map_initialized 77,2971
List path 81,3084
List best_path 82,3102
int best_count;83,3125
uint16_t *deny_pass deny_pass84,3141
char *p p85,3169
my_bluegene_t *bg bg88,3206
ba_mp_t ***ba_main_grid ba_main_grid89,3232
	BLOCK_ALGO_FIRST,92,3280
	BLOCK_ALGO_SECOND93,3299
} block_algo_t;94,3318
extern void destroy_ba_node(175,5380
extern int new_ba_request(218,7276
extern void print_ba_request(560,15768
extern void init_wires(584,16463
extern int copy_node_path(624,17318
extern ba_mp_t *coord2ba_mp(coord2ba_mp683,18837
extern int allocate_block(704,19434
extern int remove_block(730,19973
extern int check_and_set_mp_list(776,21478
extern char *set_bg_block(set_bg_block899,25110
extern void ba_rotate_geo(1018,27964
static int _check_for_options(1042,28545
static int _append_geo(1111,30309
static int _fill_in_coords(1174,32147
static int _copy_the_path(1292,35299
static int _find_yz_path(1404,38717
static int _emulate_ext_wiring(1616,44226
static int _reset_the_path(1667,45233
extern void ba_create_system(1747,47630
extern void ba_destroy_system(1799,48858
extern bool ba_sub_block_in_bitmap(1831,49351
extern int ba_sub_block_in_bitmap_clear(1839,49522
extern ba_mp_t *ba_sub_block_in_record(ba_sub_block_in_record1846,49700
extern int ba_sub_block_in_record_clear(1855,49881
extern void ba_sync_job_to_block(1862,50058
extern bitstr_t *ba_create_ba_mp_cnode_bitmap(ba_create_ba_mp_cnode_bitmap1873,50269
extern void ba_set_ionode_str(1878,50358
extern struct job_record *ba_remove_job_in_block_job_list(ba_remove_job_in_block_job_list1888,50594
static void _delete_path_list(1894,50728
static int _find_match(1907,50932
static bool _node_used(2023,53852
static void _switch_config(2061,55067
static int _set_external_wires(2087,55839
#define UNDER_POS 2094,55975
#define NODE_LEN 2095,55996
#define VAL_NAME_LEN 2096,56015
#define UNDER_POS 2100,56047
#define NODE_LEN 2101,56068
#define VAL_NAME_LEN 2102,56087
static char *_set_internal_wires(_set_internal_wires2500,65074
static int _find_x_path(2566,66913
static int _remove_node(2929,76824
static int _find_next_free_using_port_2(2963,77601
static int _finish_torus(3117,81543
static uint16_t *_set_best_path(_set_best_path3302,86403
static int _set_one_dim(3345,87615
static void _destroy_geo(3367,88159

src/plugins/select/bluegene/ba/block_allocator.h,186
#define _BLOCK_ALLOCATOR_H_40,2126
#define BIG_MAX 47,2268
#define BUFSIZE 48,2289
#define NUM_PORTS_PER_NODE 50,2311
enum {X,X52,2341
enum {X, Y,52,2341
enum {X, Y, Z}Z52,2341

src/plugins/select/bluegene/ba/wire_test.c,563
time_t last_job_update;55,2476
time_t last_bg_update;56,2500
bg_config_t *bg_conf bg_conf57,2523
bg_lists_t *bg_lists bg_lists58,2552
pthread_mutex_t block_state_mutex 59,2581
int blocks_are_created 60,2644
int bg_recover 61,2672
bool have_db2 62,2692
extern int bridge_init(64,2716
extern int bridge_fini(69,2788
extern int bridge_get_size(74,2839
extern int bridge_setup_system(79,2903
extern int bridge_free_bg(84,2962
extern int bridge_get_bg(89,3033
extern int bridge_get_data(95,3125
extern int bridge_get_data(101,3253
int main(109,3364

src/plugins/select/bluegene/sfree/opts.c,90
void parse_command_line(50,2347
static void _usage(107,3614
static void _help(112,3693

src/plugins/select/bluegene/sfree/sfree.c,193
int all_blocks 45,2184
int remove_blocks 46,2204
List block_list 47,2227
bool wait_full 48,2251
static int _get_new_info_block(53,2320
static int _check_status(84,3110
int main(123,4046

src/plugins/select/bluegene/sfree/sfree.h,169
#define _SFREE_H40,2158
#define OPT_LONG_HELP	63,2599
#define OPT_LONG_USAGE	64,2627
#define OPT_LONG_HIDE	65,2656
typedef void (*sighandler_t)sighandler_t67,2685

src/plugins/select/bluegene/ba_bgq/block_allocator.c,2147
#define DEBUG_PA55,2532
#define BEST_COUNT_INIT 56,2549
	int start[start60,2655
	int end[end61,2670
} ba_nc_coords_t;62,2683
#define mp_strip_unaltered(64,2702
ba_mp_t ****ba_main_grid ba_main_grid68,2848
ba_geo_system_t *ba_mp_geo_system ba_mp_geo_system69,2881
static ba_geo_system_t *ba_main_geo_system ba_main_geo_system71,2924
static uint16_t *deny_pass deny_pass72,2975
static ba_nc_coords_t g_nc_coords[g_nc_coords73,3010
static ba_mp_t **ba_main_grid_array ba_main_grid_array74,3049
static int ba_nc_dim_order[ba_nc_dim_order77,3165
extern void ba_create_system(122,4318
extern void ba_destroy_system(284,9466
extern int new_ba_request(360,12104
extern void print_ba_request(406,13189
extern ba_mp_t *coord2ba_mp(coord2ba_mp429,13797
extern int allocate_block(451,14447
extern int remove_block(479,15071
extern int check_and_set_mp_list(581,18445
extern char *set_bg_block(set_bg_block720,22911
extern void ba_rotate_geo(933,28524
extern bool ba_sub_block_in_bitmap(981,29690
extern int ba_sub_block_in_bitmap_clear(1081,32620
extern ba_mp_t *ba_sub_block_in_record(ba_sub_block_in_record1116,33592
extern int ba_sub_block_in_record_clear(1233,37076
extern void ba_sync_job_to_block(1323,39911
extern bitstr_t *ba_create_ba_mp_cnode_bitmap(ba_create_ba_mp_cnode_bitmap1444,43554
extern void ba_set_ionode_str(1487,44852
extern struct job_record *ba_remove_job_in_block_job_list(ba_remove_job_in_block_job_list1541,46128
extern int ba_translate_coord2nc(1715,51174
extern ba_mp_t *ba_inx2ba_mp(ba_inx2ba_mp1736,51691
static char *_copy_from_main(_copy_from_main1741,51767
static char *_reset_altered_mps(_reset_altered_mps1816,53921
static int _check_deny_pass(1868,55215
static int _fill_in_wires(1910,55959
static void _setup_next_mps(2069,60713
static void _increment_nc_coords(2112,61845
static bool _mp_used(2130,62311
static bool _mp_out_used(2157,63060
static uint16_t _find_distance(2175,63607
static int _ba_set_ionode_str_internal(2187,63937
static bitstr_t *_find_sub_block(_find_sub_block2221,64691
static ba_geo_table_t *_find_geo_table(_find_geo_table2273,66036

src/plugins/select/bluegene/ba_bgq/block_allocator.h,155
#define _BLOCK_ALLOCATOR_H_41,2197
enum {A,A50,2368
enum {A, X,50,2368
enum {A, X, Y,50,2368
enum {A, X, Y, Z,50,2368
enum {A, X, Y, Z, E}E50,2368

src/plugins/select/bluegene/ba_bgq/wire_test.c,517
time_t last_job_update;55,2476
time_t last_bg_update;56,2500
bg_config_t *bg_conf;bg_conf57,2523
bg_lists_t *bg_lists;bg_lists58,2545
pthread_mutex_t block_state_mutex 59,2567
int bg_recover 60,2630
int num_unused_cpus 61,2650
extern int bridge_init(63,2676
extern int bridge_fini(68,2748
extern int bridge_get_size(73,2799
extern int bridge_setup_system(78,2863
extern struct job_record *find_job_in_bg_record(find_job_in_bg_record83,2922
extern int bridge_check_nodeboards(89,3036
int main(95,3108

src/plugins/select/bluegene/bl/bridge_linker.c,4043
#define MAX_ADD_RETRY 46,2257
	status_t (*set_serial)set_serial51,2353
	status_t (*get_bg)get_bg52,2404
	status_t (*free_bg)free_bg53,2445
	status_t (*new_ionode)new_ionode55,2502
	status_t (*free_ionode)free_ionode56,2549
	status_t (*add_partition)add_partition58,2603
	status_t (*get_partition)get_partition59,2658
	status_t (*get_partition_info)get_partition_info61,2743
	status_t (*modify_partition)modify_partition63,2838
	status_t (*set_part_owner)set_part_owner65,2941
	status_t (*add_part_user)add_part_user66,3011
	status_t (*remove_part_user)remove_part_user67,3080
	status_t (*remove_partition)remove_partition68,3152
	status_t (*get_partitions)get_partitions69,3206
	status_t (*get_partitions_info)get_partitions_info71,3307
	status_t (*get_job)get_job73,3411
	status_t (*get_jobs)get_jobs74,3470
	status_t (*get_nodecards)get_nodecards75,3541
	status_t (*new_nodecard)new_nodecard77,3622
	status_t (*free_nodecard)free_nodecard78,3675
	status_t (*new_partition)new_partition79,3728
	status_t (*free_partition)free_partition80,3784
	status_t (*free_job)free_job81,3840
	status_t (*free_partition_list)free_partition_list82,3878
	status_t (*free_job_list)free_job_list83,3944
	status_t (*free_nodecard_list)free_nodecard_list84,3997
	status_t (*get_data)get_data85,4059
	status_t (*set_data)set_data87,4154
	status_t (*signal_job)signal_job91,4278
	status_t (*create_partition)create_partition94,4366
	status_t (*destroy_partition)destroy_partition95,4420
	void (*set_log_params)set_log_params98,4505
} bridge_api_t;100,4566
pthread_mutex_t api_file_mutex 102,4583
bridge_api_t bridge_api;103,4643
static bool initialized 106,4676
bool have_db2 107,4709
void *handle handle108,4731
static int _port_enum(112,4837
static int _bg_errtrans(138,5150
static status_t _get_job(173,5969
static status_t _get_jobs(186,6258
static status_t _free_job(198,6557
static status_t _free_job_list(211,6817
static status_t _signal_job(224,7102
static status_t _remove_block_user(237,7390
static status_t _new_block(251,7706
static status_t _add_block(263,7990
static int _remove_job(277,8323
static void _remove_jobs_on_block_and_reset(403,12021
static void _pre_allocate(527,15120
static int _post_allocate(606,17853
static int _set_ionodes(682,19801
static int _get_syms(697,20259
static int _block_get_and_set_mps(738,21112
static bg_record_t *_translate_object_to_block(_translate_object_to_block935,26193
extern int bridge_init(1357,36487
extern int bridge_fini(1424,37835
extern int bridge_get_size(1435,37967
extern int bridge_setup_system(1457,38353
extern int bridge_block_create(1558,40439
extern int bridge_block_boot(1578,40853
extern int bridge_block_free(1615,41854
extern int bridge_block_remove(1632,42221
extern int bridge_block_add_user(1649,42589
extern int bridge_block_remove_user(1666,42990
extern int bridge_block_sync_users(1684,43405
extern int bridge_blocks_load_curr(1804,46545
extern void bridge_block_post_job(1927,49646
extern status_t bridge_get_bg(1981,51014
extern status_t bridge_free_bg(1993,51279
extern uint16_t bridge_block_get_action(2006,51546
extern int bridge_check_nodeboards(2011,51640
extern int bridge_set_log_params(2016,51705
extern status_t bridge_get_data(2052,52448
extern status_t bridge_set_data(2156,54559
extern status_t bridge_free_nodecard_list(2170,54895
extern status_t bridge_free_block(2183,55199
extern status_t bridge_block_modify(2196,55491
extern status_t bridge_get_block(2211,55831
extern status_t bridge_get_block_info(2226,56165
extern status_t bridge_get_blocks(2252,56830
extern status_t bridge_get_blocks_info(2266,57172
extern status_t bridge_free_block_list(2280,57529
extern status_t bridge_new_nodecard(2293,57836
extern status_t bridge_free_nodecard(2306,58126
extern status_t bridge_get_nodecards(2319,58417
extern status_t bridge_new_ionode(2334,58760
extern status_t bridge_free_ionode(2347,59040
extern int bridge_find_nodecard_num(2360,59326

src/plugins/select/bluegene/bl/bridge_status.c,926
static List kill_job_list 55,2409
static bool bridge_status_inited 56,2443
#define MMCS_POLL_TIME 58,2486
#define BG_POLL_TIME 60,2582
static pthread_t block_thread 63,2677
static pthread_t state_thread 64,2712
static pthread_mutex_t thread_flag_mutex 65,2747
static void _configure_node_down(70,2911
static char *_get_bp_node_name(_get_bp_node_name164,5166
static int _test_nodecard_state(200,6141
static int _test_down_nodecards(299,9024
static void _test_down_nodes(440,12905
static void _test_down_switches(473,13748
static void _test_mmcs_failures(536,15316
static int _do_block_poll(556,15714
static void *_block_state_agent(_block_state_agent719,19612
static void *_mp_state_agent(_mp_state_agent750,20250
extern int bridge_status_init(776,20837
extern int bridge_status_fini(809,21775
extern int bridge_status_update_block_list_state(828,22233
extern int bridge_block_check_mp_states(924,24722

src/plugins/select/bluegene/bl/bridge_status.h,34
#define _BRIDGE_STATUS_H_40,2086

src/plugins/select/bluegene/bl/bridge_switch_connections.c,248
static int _get_mp_by_location(62,2856
static int _get_switches_by_mpid(112,4021
static int _add_switch_conns(173,5443
static int _used_switches(287,8122
extern int configure_small_block(335,9269
extern int configure_block_switches(659,16718

src/plugins/select/bluegene/bl/bridge_switch_connections.h,39
#define _BRIDGE_SWITCH_CONN_H_42,2260

src/plugins/select/linear/select_linear.c,5651
#define NO_SHARE_LIMIT	79,3320
#define NODEINFO_MAGIC	80,3350
#define RUN_JOB_INCR	81,3380
#define SELECT_DEBUG	82,3404
slurm_ctl_conf_t slurmctld_conf 89,3640
struct node_record *node_record_table_ptr node_record_table_ptr90,3702
List part_list 91,3774
List job_list 92,3819
int node_record_count 93,3863
time_t last_node_update 94,3915
struct switch_record *switch_record_table switch_record_table95,3969
int switch_record_cnt 96,4041
slurm_ctl_conf_t slurmctld_conf;98,4099
struct node_record *node_record_table_ptr;node_record_table_ptr99,4132
List part_list;100,4175
List job_list;101,4191
int node_record_count;102,4206
time_t last_node_update;103,4229
struct switch_record *switch_record_table;switch_record_table104,4254
int switch_record_cnt;105,4297
struct select_nodeinfo 108,4328
	uint16_t magic;109,4353
	uint16_t alloc_cpus;110,4390
	uint32_t alloc_memory;111,4412
const char plugin_name[plugin_name200,8689
const char plugin_type[plugin_type201,8755
const uint32_t plugin_id	202,8806
const uint32_t plugin_version	203,8838
static struct node_record *select_node_ptr select_node_ptr205,8876
static int select_node_cnt 206,8927
static uint16_t select_fast_schedule;207,8959
static uint16_t cr_type;208,8997
static struct cr_record *cr_ptr cr_ptr211,9093
static pthread_mutex_t cr_mutex 212,9133
#define XCPU_POLL_TIME 215,9212
static pthread_t xcpu_thread 216,9239
static pthread_mutex_t thread_flag_mutex 217,9273
static int agent_fini 218,9343
static void *xcpu_agent(xcpu_agent220,9371
static int _init_status_pthread(267,10508
static int _fini_status_pthread(287,11015
static void _add_run_job(312,11500
static void _add_tot_job(339,12214
static bool _ck_run_job(365,12859
static bool _rem_run_job(386,13334
static bool _test_run_job(393,13559
static bool _ck_tot_job(398,13677
static bool _rem_tot_job(418,14162
static bool _test_tot_job(425,14398
static bool _enough_nodes(430,14516
static int _get_avail_cpus(451,15165
static uint16_t _get_total_cpus(531,17908
static uint16_t _get_total_threads(540,18110
static uint16_t _get_ntasks_per_core(555,18522
static job_resources_t *_create_job_resources(_create_job_resources562,18681
static void _build_select_struct(579,19444
static int _job_count_bitmap(660,22029
static int _find_job_mate(790,25705
static int _job_test(832,27131
static int _job_test_topo(1100,35783
static int _rm_job_from_nodes(1464,46764
static int _job_expand(1619,51267
static int _decr_node_job_cnt(1814,58286
static int _rm_job_from_one_node(1875,60037
static int _add_job_to_nodes(1965,62782
static void _free_cr(2065,65535
static void _dump_node_cr(2089,66065
static struct cr_record *_dup_cr(_dup_cr2134,67226
static void _init_node_cr(2187,68901
static int _find_job 2337,73233
static bool _is_preemptable(2345,73401
static int _test_only(2356,73672
static int _sort_usable_nodes_dec(2386,74480
static int _run_now(2400,74876
static int _will_run_test(2544,79347
static int  _cr_job_list_sort(2680,83580
extern int init 2691,83948
extern int fini 2704,84192
extern int select_p_state_save(2723,84530
extern int select_p_state_restore(2728,84605
extern int select_p_job_init(2737,84808
extern bool select_p_node_ranking(2742,84884
extern int select_p_node_init(2747,84982
extern int select_p_block_init(2775,85716
extern int select_p_job_test(2812,87587
extern int select_p_job_begin(2879,89508
extern int select_p_job_ready(2920,90569
extern bool select_p_job_expand_allow(2947,91235
extern int select_p_job_expand(2952,91298
extern int select_p_job_resized(2970,91719
extern int select_p_job_signal(2997,92414
extern int select_p_job_fini(3006,92633
extern int select_p_job_suspend(3043,93632
extern int select_p_job_resume(3065,94226
extern bitstr_t *select_p_step_pick_nodes(select_p_step_pick_nodes3080,94540
extern int select_p_step_start(3088,94722
extern int select_p_step_finish(3093,94811
extern int select_p_pack_select_info(3098,94901
extern int select_p_select_nodeinfo_pack(3106,95135
extern int select_p_select_nodeinfo_unpack(3120,95475
extern select_nodeinfo_t *select_p_select_nodeinfo_alloc(select_p_select_nodeinfo_alloc3146,96136
extern int select_p_select_nodeinfo_free(3155,96331
extern int select_p_select_nodeinfo_set_all(3169,96631
extern int select_p_select_nodeinfo_set(3217,98042
extern int select_p_select_nodeinfo_get(3229,98261
extern select_jobinfo_t *select_p_select_jobinfo_alloc(select_p_select_jobinfo_alloc3283,99569
extern int select_p_select_jobinfo_set(3294,99874
extern int select_p_select_jobinfo_get 3308,100315
extern select_jobinfo_t *select_p_select_jobinfo_copy(select_p_select_jobinfo_copy3321,100677
extern int select_p_select_jobinfo_free 3332,100940
extern int  select_p_select_jobinfo_pack(3344,101321
extern int  select_p_select_jobinfo_unpack(3358,101807
extern char *select_p_select_jobinfo_sprint(select_p_select_jobinfo_sprint3365,101961
extern char *select_p_select_jobinfo_xstrdup(select_p_select_jobinfo_xstrdup3375,102154
extern int select_p_update_block 3381,102265
extern int select_p_update_sub_node 3386,102363
extern int select_p_fail_cnode(3391,102464
extern int select_p_get_info_from_plugin 3396,102553
extern int select_p_update_node_config 3403,102712
extern int select_p_update_node_state 3408,102791
extern int select_p_alter_node_cnt(3413,102888
extern int select_p_reconfigure(3418,102990
extern bitstr_t * select_p_resv_test(3441,103767
extern void select_p_ba_init(3583,108465
extern void select_p_ba_fini(3587,108513
extern int *select_p_ba_get_dims(select_p_ba_get_dims3592,108562

src/plugins/select/linear/select_linear.h,604
#define _SELECT_LINEAR_H39,2076
struct part_cr_record 51,2435
	struct part_record *part_ptr;part_ptr52,2459
	uint16_t run_job_cnt;53,2530
	uint16_t tot_job_cnt;55,2623
	struct part_cr_record *next;next58,2749
struct node_cr_record 65,2939
	struct part_cr_record *parts;parts66,2963
	uint32_t alloc_memory;68,3079
	uint16_t exclusive_cnt;70,3165
	List gres_list;73,3287
struct cr_record 77,3368
	struct node_cr_record *nodes;nodes78,3387
	uint32_t *run_job_ids;run_job_ids79,3453
	uint16_t run_job_len;80,3509
	uint32_t *tot_job_ids;tot_job_ids81,3567
	uint16_t tot_job_len;83,3655

src/plugins/select/alps/basil_alps.h,8692
#define __BASIL_ALPS_H__8,190
#define TAG_DEPTH_MAX	44,774
#define BASIL_STRING_SHORT	45,832
#define BASIL_STRING_MEDIUM	46,862
#define BASIL_STRING_LONG	47,893
#define BASIL_ERROR_BUFFER_SIZE	48,922
enum basil_version 53,984
	BV_1_0 54,1005
	BV_1_1,55,1065
	BV_1_2,56,1122
	BV_3_1,57,1179
	BV_4_0,58,1236
	BV_4_1,59,1301
	BV_5_0,60,1366
	BV_5_1,61,1431
	BV_MAX62,1496
enum basil_method 65,1508
	BM_none 66,1528
	BM_reserve,67,1542
	BM_confirm,68,1585
	BM_release,69,1628
	BM_engine,70,1671
	BM_inventory,71,1713
	BM_switch,72,1758
	BM_MAX,73,1800
	BM_UNKNOWN74,1809
enum basil_element 85,2199
	BT_MESSAGE 86,2220
	BT_RESPONSE,87,2237
	BT_RESPDATA,88,2251
	BT_RESERVED,90,2266
	BT_CONFIRMED,91,2295
	BT_RELEASED,92,2325
	BT_ENGINE,93,2354
	BT_INVENTORY,95,2392
	BT_NODEARRAY,96,2432
	BT_NODE,97,2472
	BT_PROCARRAY,98,2507
	BT_PROCESSOR,99,2547
	BT_PROCALLOC,100,2587
	BT_MEMARRAY,101,2627
	BT_MEMORY,102,2666
	BT_MEMALLOC,103,2703
	BT_LABELARRAY,104,2742
	BT_LABEL,105,2783
	BT_RESARRAY,106,2819
	BT_RESVN,107,2858
#define BT_1_0_MAX	108,2894
	BT_SEGMARRAY,110,2954
	BT_SEGMENT,111,3001
	BT_APPARRAY,112,3046
	BT_APPLICATION,113,3099
	BT_CMDARRAY,114,3155
	BT_COMMAND,115,3208
#define BT_1_1_MAX	116,3260
	BT_RESVDNODEARRAY,118,3321
	BT_RESVDNODE,119,3374
#define BT_3_1_MAX	120,3423
	BT_ACCELARRAY,122,3486
	BT_ACCEL,123,3534
	BT_ACCELALLOC,124,3577
	BT_SWITCH,125,3625
	BT_SWITCHRES,126,3663
	BT_SWITCHAPP,127,3719
	BT_SWITCHRESARRAY,128,3775
	BT_SWITCHAPPARRAY,129,3839
#define BT_4_0_MAX 130,3903
#define BT_4_1_MAX 132,4042
	BT_SOCKARRAY,133,4121
	BT_SOCKET,134,4188
	BT_COMUARRAY,135,4250
	BT_COMPUNIT,136,4322
#define	BT_5_1_MAX 137,4389
	BT_MAX	138,4468
enum basil_error 142,4524
	BE_NONE 144,4605
	BE_INTERNAL,145,4619
	BE_SYSTEM,146,4633
	BE_PARSER,147,4645
	BE_SYNTAX,148,4657
	BE_BACKEND,149,4669
	BE_UNKNOWN,150,4682
	BE_NO_RESID,152,4727
	BE_MAX,153,4741
	BE_ERROR_TYPE_MASK 155,4798
	BE_ERROR_TYPE_MASK = 0x00FF,x00FF155,4798
	BE_TRANSIENT	156,4828
	BE_TRANSIENT	   = 0x0100x0100156,4828
static inline enum basil_error decode_basil_error(160,4913
static inline bool is_transient_error(168,5149
enum basil_node_arch 178,5321
	BNA_NONE 179,5344
	BNA_X2,180,5359
	BNA_XT,181,5368
	BNA_UNKNOWN,182,5377
	BNA_MAX183,5391
enum basil_memory_type 186,5404
	BMT_NONE 187,5429
	BMT_OS,188,5444
	BMT_HUGEPAGE,189,5453
	BMT_VIRTUAL,190,5468
	BMT_UNKNOWN,191,5482
	BMT_MAX192,5496
enum basil_label_type 195,5509
	BLT_NONE 196,5533
	BLT_HARD,197,5548
	BLT_SOFT,198,5559
	BLT_UNKNOWN,199,5570
	BLT_MAX200,5584
enum basil_label_disp 203,5597
	BLD_NONE 204,5621
	BLD_ATTRACT,205,5636
	BLD_REPEL,206,5650
	BLD_UNKNOWN,207,5662
	BLD_MAX208,5676
enum basil_node_state 214,5719
	BNS_NONE 215,5743
	BNS_UP,216,5758
	BNS_DOWN,217,5767
	BNS_UNAVAIL,218,5778
	BNS_ROUTE,219,5792
	BNS_SUSPECT,220,5804
	BNS_ADMINDOWN,221,5818
	BNS_UNKNOWN,222,5834
	BNS_MAX223,5848
enum basil_node_role 226,5861
	BNR_NONE 227,5884
	BNR_INTER,228,5899
	BNR_BATCH,229,5911
	BNR_UNKNOWN,230,5923
	BNR_MAX231,5937
enum basil_proc_type 234,5950
	BPT_NONE 235,5973
	BPT_CRAY_X2,236,5988
	BPT_X86_64,237,6002
	BPT_UNKNOWN,238,6015
	BPT_MAX239,6029
enum basil_rsvn_mode 242,6042
	BRM_NONE 243,6081
	BRM_EXCLUSIVE,244,6096
	BRM_SHARE,245,6112
	BRM_UNKNOWN,246,6124
	BRM_MAX247,6138
enum basil_gpc_mode 250,6151
	BGM_NONE 251,6189
	BRM_PROCESSOR,252,6204
	BRM_LOCAL,253,6220
	BRM_GLOBAL,254,6232
	BGM_UNKNOWN,255,6245
	BGM_MAX256,6259
enum basil_acceltype 259,6272
	BA_NONE 260,6322
	BA_GPU,261,6336
	BA_UNKNOWN,262,6345
	BA_MAX263,6358
enum basil_accelstate 266,6370
	BAS_NONE 267,6421
	BAS_UP,268,6436
	BAS_DOWN,269,6445
	BAS_UNKNOWN,270,6456
	BAS_MAX271,6470
struct basil_node_processor 277,6511
	uint32_t		ordinal;278,6541
	uint32_t		clock_mhz;279,6561
	enum basil_proc_type	arch;280,6583
	uint32_t		rsvn_id;286,6756
	struct basil_node_processor *next;next288,6777
struct basil_mem_alloc 291,6817
	uint32_t		rsvn_id;292,6842
	uint32_t		page_count;293,6862
	struct basil_mem_alloc	*next;next295,6886
struct basil_node_memory 298,6921
	enum basil_memory_type	type;299,6948
	uint32_t		page_size_kb;300,6978
	uint32_t		page_count;301,7003
	struct basil_mem_alloc	*a_head;a_head302,7026
	struct basil_node_memory *next;next304,7060
struct basil_label 307,7097
	enum basil_label_type	type;308,7118
	enum basil_label_disp	disp;309,7147
	char			name[name310,7176
	struct basil_label *next;next312,7212
struct basil_segment 315,7243
	uint8_t	ordinal;316,7266
	struct basil_node_processor	*proc_head;proc_head318,7285
	struct basil_node_memory	*mem_head;mem_head319,7326
	struct basil_label		*lbl_head;lbl_head320,7363
	struct basil_segment *next;next322,7396
struct basil_accel_alloc 325,7429
	uint32_t	rsvn_id;326,7483
struct basil_node_accelerator 330,7608
	uint32_t		  ordinal;331,7667
	enum basil_acceltype	  type;332,7718
	enum basil_accelstate	  state;333,7783
	char 			  family[family334,7815
	uint32_t		  memory_mb;335,7853
	uint32_t		  clock_mhz;336,7877
	struct basil_accel_alloc *allocation;allocation337,7901
	struct basil_node_accelerator *next;next339,7941
struct basil_node 342,7983
	uint32_t cpu_count;343,8003
	uint32_t mem_size;344,8024
	uint32_t node_id;345,8044
	uint32_t router_id;346,8063
	char	 name[name347,8103
	enum basil_node_arch	arch;348,8136
	enum basil_node_role	role;349,8164
	enum basil_node_state	state;350,8192
	struct basil_segment		*seg_head;seg_head352,8223
	struct basil_node_accelerator	*accel_head;accel_head353,8273
	struct basil_node *next;next355,8334
struct basil_rsvn_app_cmd 359,8426
	uint32_t		width,360,8454
				depth,361,8472
				nppn,362,8483
				memory;363,8493
	enum basil_node_arch	arch;364,8505
	char			cmd[cmd366,8534
	struct basil_rsvn_app_cmd *next;next368,8569
struct basil_rsvn_app 371,8607
	uint64_t	apid;372,8631
	uint32_t	user_id;373,8647
	uint32_t	group_id;374,8666
	time_t		timestamp;375,8686
	struct basil_rsvn_app_cmd *cmd_head;cmd_head377,8707
	struct basil_rsvn_app *next;next379,8746
struct basil_rsvn 382,8780
	uint32_t	rsvn_id;383,8800
	time_t		timestamp;384,8819
	char		user_name[user_name385,8857
	char		account_name[account_name386,8896
	char		batch_id[batch_id387,8938
	enum basil_rsvn_mode	rsvn_mode;389,8991
	enum basil_gpc_mode	gpc_mode;390,9041
	struct basil_rsvn_app	*app_head;app_head392,9090
	struct basil_rsvn *next;next394,9142
struct basil_full_inventory 400,9209
	struct basil_node *node_head;node_head401,9239
	struct basil_rsvn *rsvn_head;rsvn_head402,9270
struct basil_inventory 415,9743
	char		mpp_host[mpp_host416,9768
	time_t		timestamp;417,9805
	bool		is_gemini;418,9825
	uint64_t        change_count,419,9843
	                sched_change_count;420,9874
	uint32_t	batch_avail,421,9911
			batch_total,422,9934
			nodes_total;423,9950
	struct basil_full_inventory *f;f425,9967
struct basil_memory_param 431,10042
	enum basil_memory_type	type;432,10070
	uint32_t		size_mb;433,10100
	struct basil_memory_param *next;next435,10121
struct basil_accel_param 438,10159
	enum basil_acceltype	type;439,10186
	char 			family[family440,10214
	uint32_t		memory_mb;441,10250
	struct basil_accel_param *next;next443,10273
struct basil_rsvn_param 446,10310
	enum basil_node_arch	arch;447,10336
	long			width,448,10401
				depth,450,10506
				nppn,451,10547
				npps,452,10587
				nspn,453,10627
				nppcu;454,10667
	char				*nodes;nodes456,10725
	struct basil_label		*labels;labels457,10766
	struct basil_memory_param	*memory;memory458,10819
	struct basil_accel_param	*accel;accel459,10878
	struct basil_rsvn_param		*next;next461,10937
struct basil_reservation 476,11572
	uint32_t	rsvn_id;480,11640
	uint64_t	pagg_id;481,11659
	uint32_t        claims;482,11678
	bool            suspended;483,11703
	struct nodespec *rsvd_nodes;rsvd_nodes485,11732
	char		user_name[user_name489,11798
			account_name[account_name490,11837
			batch_id[batch_id491,11875
	struct basil_rsvn_param *params;params493,11908
struct basil_parse_data 509,12415
	enum basil_version	version;510,12441
	enum basil_method	method;511,12470
		struct basil_inventory	 *inv;inv514,12507
		struct basil_reservation *res;res515,12539
		uint8_t			 *raw;raw516,12572
	} mdata;517,12591
	char msg[msg519,12602
struct nodespec 552,13514
	uint32_t	start;553,13532
	uint32_t	end;554,13549
	struct nodespec *next;next556,13565
enum query_columns 600,14926
	COL_X,602,14967
	COL_Y,603,14996
	COL_Z,604,15025
	COL_TYPE,606,15073
	COLUMN_COUNT	607,15111

src/plugins/select/alps/basil_interface.c,833
#define _DEBUG 12,305
int dim_size[dim_size14,323
typedef struct args_sig_basil 16,353
	uint32_t resv_id;17,385
	int      signal;18,404
	uint16_t delay;19,422
} args_sig_basil_t;20,439
static int _set_select_jobinfo(25,543
static int _get_select_jobinfo(55,1250
static struct node_record *_find_node_by_basil_id(_find_node_by_basil_id90,2130
extern int basil_node_ranking(99,2315
extern int basil_inventory(220,6643
static char _enc_coord(420,13070
extern int basil_geometry(439,13869
struct basil_accel_param* build_accel_param(680,21347
extern int do_basil_reserve(715,22244
extern int do_basil_confirm(894,27796
extern int do_basil_signal(969,30400
void *_sig_basil(_sig_basil986,30870
extern void queue_basil_signal(1009,31505
extern int do_basil_release(1061,33027
extern int do_basil_switch(1088,34007

src/plugins/select/alps/basil_interface.h,831
#define __CRAY_BASIL_INTERFACE_H8,214
struct select_jobinfo 39,1106
	uint16_t		magic;40,1130
	uint8_t			confirmed;41,1148
	uint32_t		reservation_id;42,1170
	uint64_t		confirm_cookie;43,1197
	select_jobinfo_t	*other_jobinfo;other_jobinfo44,1224
#define JOBINFO_MAGIC	46,1261
struct select_nodeinfo 53,1483
	uint16_t		magic;54,1508
	select_nodeinfo_t	*other_nodeinfo;other_nodeinfo55,1526
#define NODEINFO_MAGIC	57,1565
static inline int basil_node_ranking(71,2242
static inline int basil_inventory(76,2341
static inline int basil_geometry(81,2409
static inline int do_basil_reserve(86,2504
static inline int do_basil_confirm(91,2595
static inline int do_basil_signal(96,2686
static inline void queue_basil_signal(101,2788
static inline int do_basil_release(107,2906
static inline int do_basil_switch(112,2997

src/plugins/select/alps/cray_config.c,183
cray_config_t *cray_conf cray_conf52,2373
s_p_options_t cray_conf_file_options[cray_conf_file_options54,2407
extern int create_config(69,2848
extern int destroy_config(164,6250

src/plugins/select/alps/cray_config.h,772
#define _CRAY_CONFIG_H_40,2092
#define DEFAULT_APBASIL 49,2258
#define DEFAULT_APBASIL_TIMEOUT 52,2427
#define DEFAULT_APKILL 54,2545
#define DEFAULT_CRAY_SDB_DB 56,2625
#define DEFAULT_CRAY_SDB_HOST 58,2696
#define DEFAULT_CRAY_SDB_PASS 60,2773
#define DEFAULT_CRAY_SDB_PORT 62,2849
#define DEFAULT_CRAY_SDB_USER 64,2922
#define DEFAULT_CRAY_SYNC_TIMEOUT 67,3103
	char		*alps_engine;alps_engine84,3716
	char		*apbasil;apbasil85,3737
	uint16_t	apbasil_timeout;86,3754
	char		*apkill;apkill87,3781
	char		*sdb_host;sdb_host89,3798
	char		*sdb_db;sdb_db90,3816
	char		*sdb_user;sdb_user91,3832
	char		*sdb_pass;sdb_pass92,3850
	uint32_t	sdb_port;93,3868
	uint32_t	slurm_debug_flags;94,3888
	uint32_t	sync_timeout;95,3917
} cray_config_t;96,3941

src/plugins/select/alps/nodespec.c,266
#define CRAY_MAX_DIGITS	13,453
static struct nodespec *_ns_new(_ns_new16,528
static int _ns_add_range(38,1234
extern int ns_add_node(95,2476
static int ns_count_nodes(101,2664
static ssize_t ns_ranged_string(119,3123
char *ns_to_string(ns_to_string146,3776

src/plugins/select/alps/parser_common.h,758
#define __PARSER_COMMON_H__8,205
const char *bv_names[bv_names17,328
const char *bv_names_long[bv_names_long28,545
const char *bm_names[bm_names40,784
const char *be_names[be_names51,1017
const char *be_names_long[be_names_long62,1291
const char *nam_arch[nam_arch76,1731
const char *nam_memtype[nam_memtype83,1859
const char *nam_labeltype[nam_labeltype91,2030
const char *nam_ldisp[nam_ldisp98,2171
const char *nam_noderole[nam_noderole108,2346
const char *nam_nodestate[nam_nodestate115,2496
const char *nam_proc[nam_proc126,2747
const char *nam_rsvn_mode[nam_rsvn_mode136,2955
const char *nam_gpc_mode[nam_gpc_mode143,3120
const char *nam_acceltype[nam_acceltype154,3370
const char *nam_accelstate[nam_accelstate160,3483

src/plugins/select/alps/select_alps.c,4231
slurm_ctl_conf_t slurmctld_conf 66,2887
struct node_record *node_record_table_ptr node_record_table_ptr67,2949
List part_list 68,3021
List job_list 69,3066
int node_record_count 70,3110
time_t last_node_update 71,3162
struct switch_record *switch_record_table switch_record_table72,3216
int switch_record_cnt 73,3288
slurmdb_cluster_rec_t *working_cluster_rec working_cluster_rec74,3340
void *acct_db_conn acct_db_conn75,3421
bitstr_t *avail_node_bitmap avail_node_bitmap76,3477
int bg_recover 77,3542
slurm_ctl_conf_t slurmctld_conf;79,3615
struct node_record *node_record_table_ptr;node_record_table_ptr80,3648
List part_list;81,3691
List job_list;82,3707
int node_record_count;83,3722
time_t last_node_update;84,3745
struct switch_record *switch_record_table;switch_record_table85,3770
int switch_record_cnt;86,3813
slurmdb_cluster_rec_t *working_cluster_rec working_cluster_rec87,3836
void *acct_db_conn acct_db_conn88,3887
bitstr_t *avail_node_bitmap avail_node_bitmap89,3914
int bg_recover 90,3950
int clusteracct_storage_g_node_down(92,3989
int clusteracct_storage_g_node_up(95,4144
struct node_record *find_node_record find_node_record97,4259
uint32_t gres_plugin_get_job_value_by_type(98,4326
void make_node_idle(100,4428
int select_char2coord(102,4515
void set_node_down_ptr 103,4563
char *uid_to_string uid_to_string104,4637
#  define SIGRTMIN 109,4786
#  define SIGRTMIN 115,4953
static int select_cray_dim_size[select_cray_dim_size123,5329
const char plugin_name[plugin_name153,6727
const char plugin_type[plugin_type154,6784
uint32_t plugin_id	155,6826
const uint32_t plugin_version	156,6853
static bool _zero_size_job 158,6891
extern int init 172,7242
extern int fini 196,8067
extern int select_p_state_save(207,8230
extern int select_p_state_restore(212,8318
extern int select_p_job_init(217,8412
extern bool select_p_node_ranking(225,8566
extern int select_p_node_init(232,8772
extern int select_p_block_init(241,9012
extern int select_p_job_test(278,10895
extern int select_p_job_begin(305,11669
extern int select_p_job_ready(318,11971
extern int select_p_job_resized(339,12713
extern bool select_p_job_expand_allow(346,12894
extern int select_p_job_expand(351,12958
extern int select_p_job_signal(357,13098
extern int select_p_job_fini(401,14436
extern int select_p_job_suspend(418,14955
extern int select_p_job_resume(430,15241
extern bitstr_t *select_p_step_pick_nodes(select_p_step_pick_nodes442,15525
extern int select_p_step_start(450,15767
extern int select_p_step_finish(455,15869
extern int select_p_pack_select_info(460,15973
extern select_nodeinfo_t *select_p_select_nodeinfo_alloc(select_p_select_nodeinfo_alloc468,16223
extern int select_p_select_nodeinfo_free(478,16477
extern int select_p_select_nodeinfo_pack(487,16670
extern int select_p_select_nodeinfo_unpack(498,16976
extern int select_p_select_nodeinfo_set_all(525,17605
extern int select_p_select_nodeinfo_set(530,17701
extern int select_p_select_nodeinfo_get(535,17818
extern select_jobinfo_t *select_p_select_jobinfo_alloc(select_p_select_jobinfo_alloc565,18528
extern int select_p_select_jobinfo_set(574,18770
extern int select_p_select_jobinfo_get(606,19506
extern select_jobinfo_t *select_p_select_jobinfo_copy(select_p_select_jobinfo_copy642,20386
extern int select_p_select_jobinfo_free(659,20828
extern int select_p_select_jobinfo_pack(676,21119
extern int select_p_select_jobinfo_unpack(700,21778
extern char *select_p_select_jobinfo_sprint(select_p_select_jobinfo_sprint732,22648
extern char *select_p_select_jobinfo_xstrdup(select_p_select_jobinfo_xstrdup788,24023
extern int select_p_update_block(835,25116
extern int select_p_update_sub_node(840,25234
extern int select_p_fail_cnode(845,25358
extern int select_p_get_info_from_plugin(850,25460
extern int select_p_update_node_config(857,25646
extern int select_p_update_node_state(862,25742
extern int select_p_alter_node_cnt(867,25858
extern int select_p_reconfigure(872,25979
extern bitstr_t * select_p_resv_test(879,26097
extern void select_p_ba_init(887,26349
extern int *select_p_ba_get_dims(select_p_ba_get_dims934,27813
extern void select_p_ba_fini(943,28040

src/plugins/select/alps/libalps/atoul.c,90
#define _ISOC99_SOURCE	7,132
int atou64(18,363
int atou32(32,706
int atotime_t(46,971

src/plugins/select/alps/libalps/basil_mysql_routines.c,425
static int cray_get_options_from_default_conf(10,265
extern MYSQL *cray_connect_sdb(cray_connect_sdb34,842
int cray_is_gemini_system(71,1784
static bool validate_stmt_column_count(125,3494
MYSQL_STMT *prepare_stmt(prepare_stmt166,4825
static int store_stmt_results(223,6306
int exec_stmt(267,7368
int fetch_stmt(282,7758
my_bool free_stmt_result(287,7828
my_bool stmt_close(292,7914
void cray_close_sdb(297,7988

src/plugins/select/alps/libalps/basil_request.c,369
int   log_sel 13,332
char *xml_log_loc xml_log_loc14,352
char  xml_log_file_name[xml_log_file_name15,378
pthread_cond_t  timer_cond 17,414
pthread_mutex_t timer_lock 18,469
static int _write_xml(33,1112
static void _init_log_config(73,2012
static void _rsvn_write_reserve_xml(88,2368
static void *_timer_func(_timer_func189,5466
int basil_request(219,6350

src/plugins/select/alps/libalps/do_confirm.c,58
static int rsvn_confirm(9,207
int basil_confirm(38,1066

src/plugins/select/alps/libalps/do_query.c,432
static const char *_get_alps_engine(_get_alps_engine14,353
static bool _segment_is_allocated(34,830
extern enum basil_version get_basil_version(73,2579
extern struct basil_inventory *get_full_inventory(get_full_inventory118,4012
extern bool node_is_allocated(150,4678
extern const struct basil_rsvn *basil_rsvn_by_id(basil_rsvn_by_id161,4959
extern uint64_t *basil_get_rsvn_aprun_apids(basil_get_rsvn_aprun_apids180,5592

src/plugins/select/alps/libalps/do_release.c,121
static int rsvn_release(9,207
int basil_release(26,626
int basil_signal_apids(41,1032
int basil_safe_release(84,2250

src/plugins/select/alps/libalps/do_reserve.c,167
static int _rsvn_add_mem_param(14,368
static int _rsvn_add_params(45,1224
static struct basil_reservation *_rsvn_new(_rsvn_new89,2524
long basil_reserve(129,3659

src/plugins/select/alps/libalps/do_switch.c,26
int basil_switch(46,2229

src/plugins/select/alps/libalps/memory_handling.c,595
static void _free_basil_processor(9,166
static void _free_basil_mem_alloc(18,336
static void _free_basil_memory(26,461
static void _free_basil_label(35,618
static void _free_basil_accel(43,731
static void _free_basil_segment(51,878
static void _free_basil_node(62,1105
static void _free_basil_rsvn_cmd(72,1287
static void _free_basil_rsvn_app(80,1413
static void _free_basil_rsvn(89,1572
static void _rsvn_free_param_mem(101,1752
static void _rsvn_free_param_accel(109,1878
void free_inv(117,2007
void free_nodespec(132,2233
void rsvn_free_param(140,2332
void free_rsvn(152,2561

src/plugins/select/alps/libalps/memory_handling.h,43
#define __CRAY_MEMORY_HANDLING_H__37,2023

src/plugins/select/alps/libalps/parser_basil_1.0.c,74
const struct element_handler basil_1_0_elements[basil_1_0_elements9,185

src/plugins/select/alps/libalps/parser_basil_1.1.c,100
void eh_resv_1_1(10,298
const struct element_handler basil_1_1_elements[basil_1_1_elements26,733

src/plugins/select/alps/libalps/parser_basil_3.1.c,272
void eh_resvd_node(10,268
void eh_confirmed(24,687
void eh_released_3_1(43,1283
void eh_engine_3_1(57,1686
void eh_inventory_3_1(66,1918
void eh_node_3_1(79,2340
void eh_resv_3_1(101,3010
const struct element_handler basil_3_1_elements[basil_3_1_elements122,3614

src/plugins/select/alps/libalps/parser_basil_4.0.c,249
void eh_released_4_0(10,242
void eh_node_array_4_0(27,789
void eh_accel(61,2487
void eh_accel_alloc(106,4051
void eh_switch_resv(129,4687
void eh_switch_app(138,4929
const struct element_handler basil_4_0_elements[basil_4_0_elements148,5170

src/plugins/select/alps/libalps/parser_basil_5.1.c,164
void eh_node_array_5_1(10,243
void eh_socket_5_1(35,1157
void eh_compute_5_1(48,1548
const struct element_handler basil_5_1_elements[basil_5_1_elements63,2003

src/plugins/select/alps/libalps/parser_common.c,1512
const char *bv_names[bv_names10,233
const char *bv_names_long[bv_names_long11,263
const char *bm_names[bm_names12,298
const char *be_names[be_names13,328
const char *nam_arch[nam_arch15,359
const char *nam_memtype[nam_memtype16,390
const char *nam_labeltype[nam_labeltype17,424
const char *nam_ldisp[nam_ldisp18,460
const char *nam_noderole[nam_noderole20,493
const char *nam_nodestate[nam_nodestate21,528
const char *nam_proc[nam_proc22,564
const char *nam_rsvn_mode[nam_rsvn_mode23,595
const char *nam_gpc_mode[nam_gpc_mode24,631
const char *nam_gpc_mode[nam_gpc_mode26,667
const char *nam_rsvn_mode[nam_rsvn_mode27,702
const char *nam_acceltype[nam_acceltype29,739
const char *nam_accelstate[nam_accelstate30,774
bool node_rank_inv 32,812
const char *basil_strerror(basil_strerror38,936
void extract_attributes(47,1137
void eh_message(72,1661
void eh_response(84,2016
void eh_resp_data(99,2535
void eh_reserved(133,3562
void eh_engine(149,4047
void eh_node(164,4525
void eh_segment(218,6025
void eh_proc(250,6819
void eh_proc_alloc(290,7966
void eh_mem(314,8625
void eh_mem_alloc(353,9783
void eh_label(384,10727
void eh_resv(417,11712
void eh_application(444,12458
void eh_command(473,13401
static const struct element_handler *basil_tables[basil_tables509,14541
static enum basil_method _tag_to_method(524,15022
static void _start_handler(555,16031
static void _end_handler(621,17978
static void _cdata_handler(683,19966
int parse_basil(706,20579

src/plugins/select/alps/libalps/parser_internal.h,475
#define __PARSER_INTERNAL_H__8,204
struct ud 22,526
	uint8_t			depth;23,538
	enum basil_element	stack[stack24,556
	uint8_t			counter[counter25,598
	uint32_t		error;26,626
		bool	available;29,655
		bool	reserved;30,713
	} current_node;31,772
	struct basil_parse_data		*bp;bp33,790
#define ud_inventory	34,821
struct element_handler 45,1092
	char	*tag;tag46,1117
	uint8_t	depth;47,1129
	bool	uniq;48,1145
	void	(*hnd)hnd49,1157
#define ARRAY_SIZE(54,1259

src/plugins/select/alps/libalps/popen2.c,133
static int dup_devnull(26,1034
static int fd_no_clobber_stdio(36,1242
pid_t popen2(56,1728
unsigned char wait_for_child(130,3214

src/plugins/select/alps/libemulate/alps_emulate.c,2487
const char *bv_names[bv_names58,2512
const char *bv_names_long[bv_names_long59,2542
const char *bm_names[bm_names60,2577
const char *be_names[be_names61,2607
const char *nam_arch[nam_arch63,2638
const char *nam_memtype[nam_memtype64,2669
const char *nam_labeltype[nam_labeltype65,2703
const char *nam_ldisp[nam_ldisp66,2739
const char *nam_noderole[nam_noderole68,2772
const char *nam_nodestate[nam_nodestate69,2807
const char *nam_proc[nam_proc70,2843
const char *nam_rsvn_mode[nam_rsvn_mode71,2874
const char *nam_gpc_mode[nam_gpc_mode72,2910
const char *nam_acceltype[nam_acceltype74,2946
const char *nam_accelstate[nam_accelstate75,2981
bool node_rank_inv 77,3019
#define _ADD_DELAYS 81,3156
#define _DEBUG 82,3179
#define MAX_RESV_CNT 83,3202
#define NODES_PER_COORDINATE 84,3227
static MYSQL *mysql_handle mysql_handle86,3259
static MYSQL_BIND *my_bind_col my_bind_col87,3294
static struct node_record *my_node_ptr my_node_ptr88,3333
static int my_node_inx 89,3380
static int hw_cabinet,91,3409
static int hw_cabinet, hw_row,91,3409
static int hw_cabinet, hw_row, hw_cage,91,3409
static int hw_cabinet, hw_row, hw_cage, hw_slot,91,3409
static int hw_cabinet, hw_row, hw_cage, hw_slot, hw_cpu;91,3409
static int coord[coord92,3466
static int coord[3], max_dim[max_dim92,3466
static int sys_spur_cnt 94,3500
static int *sys_coords sys_coords95,3548
static coord_t *sys_hilbert;sys_hilbert96,3579
static int last_resv_id 98,3609
static uint32_t resv_jobid[resv_jobid99,3638
static void _get_dims(109,4101
static void _incr_dims(203,6732
static void _init_hw_recs(218,7041
static void _incr_hw_recs(240,7499
extern void free_nodespec(267,7922
static void _rsvn_free_param_accel(280,8121
extern MYSQL *cray_connect_sdb(cray_connect_sdb292,8373
extern MYSQL_STMT *prepare_stmt(prepare_stmt309,8682
extern int exec_stmt(324,9079
extern int fetch_stmt(338,9305
my_bool free_stmt_result(364,9903
my_bool stmt_close(372,10017
void cray_close_sdb(384,10180
extern int cray_is_gemini_system(394,10357
extern enum basil_version get_basil_version(410,10629
extern int basil_request(418,10760
extern struct basil_inventory *get_full_inventory(get_full_inventory426,10872
extern void   free_inv(475,12424
extern long basil_reserve(500,13046
extern int basil_confirm(540,14076
extern int basil_release(561,14557
int basil_signal_apids(575,14749
extern bool node_is_allocated(587,14971
int basil_switch(600,15266

src/plugins/select/alps/libemulate/hilbert.c,74
extern void TransposetoAxes(36,1483
extern void AxestoTranspose(61,2173

src/plugins/select/alps/libemulate/hilbert.h,38
typedef unsigned int coord_t;34,1431

src/plugins/acct_gather_energy/rapl/acct_gather_energy_rapl.c,1829
typedef unsigned long int	ulong;71,2935
#define MAX_PKGS 74,2976
#define MSR_RAPL_POWER_UNIT 76,3005
#define MSR_PKG_RAPL_POWER_LIMIT 79,3078
#define MSR_PKG_ENERGY_STATUS 80,3124
#define MSR_PKG_PERF_STATUS 81,3170
#define MSR_PKG_POWER_INFO 82,3216
#define MSR_DRAM_POWER_LIMIT 85,3286
#define MSR_DRAM_ENERGY_STATUS 86,3332
#define MSR_DRAM_PERF_STATUS 87,3378
#define MSR_DRAM_POWER_INFO 88,3424
	uint64_t val;91,3479
		uint32_t low;93,3504
		uint32_t high;94,3520
	} i;95,3537
} package_energy[package_energy96,3543
} package_energy[MAX_PKGS], dram_energy[dram_energy96,3543
#define _DEBUG 98,3595
#define _DEBUG_ENERGY 99,3612
const char plugin_name[plugin_name130,5020
const char plugin_type[plugin_type131,5079
const uint32_t plugin_version 132,5133
static acct_gather_energy_t *local_energy local_energy134,5171
static uint32_t debug_flags 135,5221
static int pkg2cpu[pkg2cpu138,5284
static int pkg_fd[pkg_fd139,5340
static char hostname[hostname140,5395
static int nb_pkg 142,5434
static char *_msr_string(_msr_string144,5458
static uint64_t _read_msr(153,5640
static uint64_t _get_package_energy(176,6250
static uint64_t _get_dram_energy(193,6732
static int _open_msr(210,7201
static void _hardware(235,7740
static bool _run_in_daemon(270,8650
_send_drain_request(286,8867
static void _get_joules_task(308,9399
static int _running_profile(379,11581
static int _send_profile(394,11917
extern int acct_gather_energy_p_update_node_energy(417,12480
extern int init(435,12830
extern int fini(448,13058
extern int acct_gather_energy_p_get_data(467,13336
extern int acct_gather_energy_p_set_data(498,14074
extern void acct_gather_energy_p_conf_options(522,14547
extern void acct_gather_energy_p_conf_set(528,14671
extern void acct_gather_energy_p_conf_values(551,15085

src/plugins/acct_gather_energy/none/acct_gather_energy_none.c,559
#define _DEBUG 56,2606
#define _DEBUG_ENERGY 57,2623
const char plugin_name[plugin_name88,4031
const char plugin_type[plugin_type89,4090
const uint32_t plugin_version 90,4144
extern int init(96,4311
extern int fini(102,4397
extern int acct_gather_energy_p_update_node_energy(107,4447
extern int acct_gather_energy_p_get_data(114,4547
extern int acct_gather_energy_p_set_data(120,4685
extern void acct_gather_energy_p_conf_options(126,4823
extern void acct_gather_energy_p_conf_set(132,4947
extern void acct_gather_energy_p_conf_values(137,5023

src/plugins/acct_gather_energy/ipmi/acct_gather_energy_ipmi.c,2276
slurmd_conf_t *conf conf78,3325
slurmd_conf_t *conf conf80,3388
#define _DEBUG 83,3424
#define _DEBUG_ENERGY 84,3441
#define IPMI_VERSION 85,3465
#define NBFIRSTREAD 86,3525
const char plugin_name[plugin_name118,4932
const char plugin_type[plugin_type119,4991
const uint32_t plugin_version 120,5045
struct ipmi_monitoring_ipmi_config ipmi_config;126,5146
ipmi_monitoring_ctx_t ipmi_ctx 127,5194
unsigned int sensor_reading_flags 128,5233
char *hostname hostname130,5344
char *sdr_cache_directory sdr_cache_directory132,5416
char *sensor_config_file sensor_config_file133,5452
static uint32_t last_update_watt 137,5514
static time_t last_update_time 138,5552
static time_t previous_update_time 139,5588
static acct_gather_energy_t *local_energy local_energy140,5628
static slurm_ipmi_conf_t slurm_ipmi_conf;141,5678
static uint32_t debug_flags 142,5720
static bool flag_energy_accounting_shutdown 143,5753
static bool flag_thread_started 144,5806
static bool flag_init 145,5847
static pthread_mutex_t ipmi_mutex 146,5878
static pthread_t cleanup_handler_thread 147,5941
pthread_t thread_ipmi_id_launcher 148,5986
pthread_t thread_ipmi_id_run 149,6025
static bool _is_thread_launcher(151,6060
static bool _run_in_daemon(164,6230
static void _task_sleep(177,6406
static int _running_profile(183,6500
static uint32_t _get_additional_consumption(202,6953
static int _init_ipmi_config 214,7251
static int _check_power_sensor(309,10895
static int _find_power_sensor(364,12488
static int _read_ipmi_values(436,14248
static int _thread_update_node_energy(477,15480
static int _thread_init(528,16936
static int _ipmi_send_profile(571,18001
static void *_thread_ipmi_run(_thread_ipmi_run598,18662
static void *_cleanup_thread(_cleanup_thread639,19679
static void *_thread_launcher(_thread_launcher651,19909
static int _get_joules_task(704,21263
extern int init(766,22953
extern int fini(776,23139
extern int acct_gather_energy_p_update_node_energy(795,23550
extern int acct_gather_energy_p_get_data(803,23678
extern int acct_gather_energy_p_set_data(850,24947
extern void acct_gather_energy_p_conf_options(877,25514
extern void acct_gather_energy_p_conf_set(918,27135
extern void acct_gather_energy_p_conf_values(1048,31681

src/plugins/acct_gather_energy/ipmi/acct_gather_energy_ipmi_config.c,68
#define TIMEOUT 57,2469
extern void reset_slurm_ipmi_conf(60,2511

src/plugins/acct_gather_energy/ipmi/acct_gather_energy_ipmi_config.h,1260
#define _IPMI_READ_CONFIG_H38,2022
#define DEFAULT_IPMI_FREQ 42,2081
#define DEFAULT_IPMI_USER 43,2110
#define DEFAULT_IPMI_VARIABLE 44,2150
typedef struct slurm_ipmi_conf 46,2216
	bool adjustment;49,2346
	bool assume_bmc_owner;53,2554
	uint32_t authentication_type;60,2967
	bool bridge_sensors;62,3051
	uint32_t cipher_suite_id;82,3979
	bool discrete_reading;88,4283
	char *driver_device;driver_device90,4357
	uint32_t driver_type;98,4721
	uint32_t disable_auto_probe;101,4834
	uint32_t driver_address;103,4929
	bool entity_sensor_names;106,5052
	uint32_t freq;108,5109
	bool ignore_non_interpretable_sensors;110,5179
	bool ignore_scanning_disabled;114,5376
	bool interpret_oem_data;116,5453
	unsigned char *k_g;k_g121,5700
	uint32_t k_g_len;124,5830
	char *password;password128,5995
	uint32_t privilege_level;135,6261
	uint32_t power_sensor_num;138,6359
	uint32_t protocol_version;144,6637
	uint32_t register_spacing;146,6722
	bool reread_sdr_cache;148,6778
	uint32_t retransmission_timeout;151,6921
	uint32_t session_timeout;154,7061
	bool shared_sensors;156,7134
	uint32_t timeout;158,7190
	char *username;username162,7355
	uint32_t workaround_flags;168,7658
	uint32_t variable;169,7686
} slurm_ipmi_conf_t;170,7706

src/plugins/auth/authd/auth_authd.c,918
#define UNIX_PATH_MAX 61,2636
const char plugin_name[plugin_name93,3961
const char plugin_type[plugin_type94,4039
const uint32_t plugin_version 95,4087
const uint32_t min_plug_version 96,4126
static const int AUTHD_TTL 99,4188
typedef struct _slurm_auth_credential 101,4221
	credentials cred;102,4261
	signature sig;103,4280
	int cr_errno;104,4296
} slurm_auth_credential_t;105,4311
static int plugin_errno 108,4366
	SLURM_AUTH_UNPACK 115,4546
	SLURM_AUTH_UNPACK = SLURM_AUTH_FIRST_LOCAL_ERROR,115,4546
	SLURM_AUTH_EXPIRED116,4597
int init(120,4622
extern int fini 127,4724
slurm_auth_create(133,4803
slurm_auth_destroy(182,5765
slurm_auth_verify(193,5949
slurm_auth_get_uid(221,6511
slurm_auth_get_gid(232,6706
slurm_auth_pack(243,6899
slurm_auth_unpack(271,7623
slurm_auth_print(321,8714
slurm_auth_errno(343,9335
slurm_auth_errstr(353,9479
		int err;356,9535
		char *msg;msg357,9546

src/plugins/auth/none/auth_none.c,762
const char plugin_name[plugin_name96,4064
const char plugin_type[plugin_type97,4128
const uint32_t plugin_version 98,4175
const uint32_t min_plug_version 99,4214
typedef struct _slurm_auth_credential 132,5885
	uid_t uid;133,5925
	gid_t gid;134,5937
	int cr_errno;135,5949
} slurm_auth_credential_t;136,5964
static int plugin_errno 139,6021
	SLURM_AUTH_UNPACK147,6235
extern int init 154,6387
extern int fini 160,6476
slurm_auth_create(175,6768
slurm_auth_destroy(192,7141
slurm_auth_verify(208,7458
slurm_auth_get_uid(218,7707
slurm_auth_get_gid(233,8027
slurm_auth_pack(248,8338
slurm_auth_unpack(275,9020
slurm_auth_print(335,10532
slurm_auth_errno(357,11124
slurm_auth_errstr(372,11462
		int err;375,11518
		char *msg;msg376,11529

src/plugins/auth/munge/auth_munge.c,1677
#define MUNGE_ERRNO_OFFSET	75,2939
#define RETRY_COUNT	76,2971
#define RETRY_USEC	77,2995
const char plugin_name[plugin_name105,4214
const char plugin_type[plugin_type107,4316
const uint32_t plugin_version 108,4364
const uint32_t min_plug_version 109,4402
static int plugin_errno 111,4472
static int bad_cred_test 112,4513
	SLURM_AUTH_UNPACK 116,4553
	SLURM_AUTH_UNPACK = SLURM_AUTH_FIRST_LOCAL_ERROR116,4553
typedef struct _slurm_auth_credential 122,4671
#       define MUNGE_MAGIC 124,4726
	int  magic;125,4760
	char   *m_str;m_str127,4840
	void   *buf;buf128,4913
	bool    verified;129,4986
	int     len;130,5059
	uid_t   uid;131,5132
	gid_t   gid;132,5205
	int cr_errno;133,5278
} slurm_auth_credential_t;134,5293
typedef struct munge_info 139,5372
	time_t         encoded;140,5400
	time_t         decoded;141,5425
	munge_cipher_t cipher;142,5450
	munge_mac_t    mac;143,5474
	munge_zip_t    zip;144,5495
} munge_info_t;145,5516
int init 161,5947
slurm_auth_create(180,6409
	cred 218,7478
	cred->verified verified219,7510
	cred->m_str m_str220,7535
	cred->buf buf221,7559
	cred->len len222,7583
	cred->cr_errno cr_errno223,7604
	ohandler 233,7890
	err 236,7954
slurm_auth_destroy(266,8781
slurm_auth_verify(294,9310
slurm_auth_get_uid(317,9762
slurm_auth_get_gid(338,10238
slurm_auth_pack(359,10705
slurm_auth_unpack(391,11402
slurm_auth_print(444,12520
slurm_auth_errno(462,12941
slurm_auth_errstr(472,13085
		int err;475,13141
		char *msg;msg476,13152
_decode_cred(501,13641
cred_info_alloc(582,15462
cred_info_destroy(593,15626
cred_info_create(602,15765
_print_cred_info(640,16846
_print_cred(658,17141

src/plugins/job_container/none/job_container_none.c,423
const char plugin_name[plugin_name75,3573
const char plugin_type[plugin_type76,3636
const uint32_t plugin_version 77,3692
extern void container_p_reconfig(79,3732
extern int init(88,3914
extern int fini(99,4091
extern int container_p_restore(104,4141
extern int container_p_create(109,4230
extern int container_p_add_cont(115,4361
extern int container_p_add_pid(121,4534
extern int container_p_delete(126,4632

src/plugins/job_container/cncu/job_container_cncu.c,903
#define ADD_FLAGS	54,2356
#define CREATE_FLAGS	55,2376
#define DELETE_FLAGS	56,2399
#define JOB_BUF_SIZE 58,2423
const char plugin_name[plugin_name87,3778
const char plugin_type[plugin_type88,3841
const uint32_t plugin_version 89,3897
static uint32_t *job_id_array job_id_array91,3937
static uint32_t  job_id_count 92,3975
static pthread_mutex_t context_lock 93,4010
static char *state_dir state_dir94,4075
static bool enable_debug 95,4106
static int _save_state(97,4141
static int _restore_state(139,5036
static void _stat_reservation(189,6252
static bool _get_debug_flag(204,6659
extern void container_p_reconfig(211,6780
extern int init(226,7166
extern int fini(241,7438
extern int container_p_restore(247,7507
extern int container_p_create(271,8012
extern int container_p_add_cont(325,9379
extern int container_p_add_pid(376,10896
extern int container_p_delete(397,11397

src/plugins/gres/mic/gres_mic.c,492
const char	plugin_name[plugin_name109,4275
const char	plugin_type[plugin_type110,4322
const uint32_t	plugin_version	111,4362
static char	gres_name[gres_name113,4401
static int *mic_devices mic_devices115,4436
static int nb_available_files;116,4468
extern int node_config_load(123,4713
extern void job_set_env(183,6377
extern void step_set_env(223,7525
extern void send_stepd(260,8639
extern void recv_stepd(273,8959
extern int job_info(287,9289
extern int step_info(293,9435

src/plugins/gres/nic/gres_nic.c,406
const char	plugin_name[plugin_name104,4088
const char	plugin_type[plugin_type105,4135
const uint32_t	plugin_version	106,4175
static char	gres_name[gres_name108,4214
extern int node_config_load(115,4462
extern void job_set_env(139,5045
extern void step_set_env(148,5243
extern void send_stepd(154,5397
extern void recv_stepd(160,5521
extern int job_info(165,5570
extern int step_info(171,5717

src/plugins/gres/gpu/gres_gpu.c,547
const char	plugin_name[plugin_name107,4167
const char	plugin_type[plugin_type108,4214
const uint32_t	plugin_version	109,4254
static char	gres_name[gres_name111,4293
static int *gpu_devices gpu_devices113,4328
static int nb_available_files;114,4360
extern int init(116,4392
extern int fini(122,4490
extern int node_config_load(134,4825
extern void job_set_env(217,7057
extern void step_set_env(263,8432
extern void send_stepd(306,9775
extern void recv_stepd(319,10095
extern int job_info(333,10425
extern int step_info(339,10572

src/plugins/acct_gather_profile/none/acct_gather_profile_none.c,727
#define _DEBUG 54,2481
#define _DEBUG_STATS 55,2498
const char plugin_name[plugin_name86,3905
const char plugin_type[plugin_type87,3965
const uint32_t plugin_version 88,4020
extern int init(94,4187
extern int fini(100,4273
extern void acct_gather_profile_p_conf_set(105,4323
extern void acct_gather_profile_p_conf_options(110,4400
extern void acct_gather_profile_p_get(116,4526
extern int acct_gather_profile_p_node_step_start(133,4843
extern int acct_gather_profile_p_node_step_end(138,4943
extern int acct_gather_profile_p_task_start(143,5020
extern int acct_gather_profile_p_task_end(148,5109
extern int acct_gather_profile_p_add_sample_data(153,5194
extern void acct_gather_profile_p_conf_values(158,5298

src/plugins/acct_gather_profile/hdf5/acct_gather_profile_hdf5.c,1433
const char plugin_name[plugin_name93,4230
const char plugin_type[plugin_type94,4290
const uint32_t plugin_version 95,4345
hid_t typTOD;97,4383
	char *dir;dir100,4415
	uint32_t def;101,4427
} slurm_hdf5_conf_t;102,4442
static hid_t 	 file_id 109,4728
static hid_t     gid_node 110,4765
static hid_t     gid_tasks 111,4797
static hid_t     gid_samples 112,4830
static hid_t     gid_totals 113,4865
static char      group_node[group_node114,4899
static slurm_hdf5_conf_t hdf5_conf;115,4946
static uint32_t debug_flags 116,4982
static uint32_t g_profile_running 117,5015
static stepd_step_rec_t *g_job g_job118,5080
static void _reset_slurm_profile_conf(120,5120
static uint32_t _determine_profile(126,5231
static int _get_taskid_from_pid(142,5529
static int _create_directories(158,5788
static bool _do_profile(202,7052
static bool _run_in_daemon(213,7296
extern int init(230,7594
extern int fini(240,7734
extern void acct_gather_profile_p_conf_options(246,7807
extern void acct_gather_profile_p_conf_set(258,8111
extern void acct_gather_profile_p_get(282,8785
extern int acct_gather_profile_p_node_step_start(304,9305
extern int acct_gather_profile_p_node_step_end(381,11318
extern int acct_gather_profile_p_task_start(418,12040
extern int acct_gather_profile_p_task_end(439,12432
extern int acct_gather_profile_p_add_sample_data(487,13666
extern void acct_gather_profile_p_conf_values(620,17569

src/plugins/acct_gather_profile/hdf5/hdf5_api.c,3981
static time_t seriesStart;49,2291
static hid_t typTOD;50,2318
static int i;51,2339
static int moffset;52,2391
#define MEM_ADD_DATE_TIME(63,2666
#define FILE_ADD_DATE_TIME(77,3065
#define MEM_ADD_UINT64(93,3473
#define FILE_ADD_UINT64(106,3841
#define MEM_ADD_DBL(123,4273
#define FILE_ADD_DBL(136,4639
#define INCR_DIF_SAMPLE(156,5184
#define INCR_RT_SAMPLE(179,5819
#define PUT_UINT_SUM(197,6333
#define PUT_DBL_SUM(207,6634
static int _energy_dataset_size(216,6963
static hid_t _energy_create_memory_datatype(221,7040
static hid_t _energy_create_file_datatype(237,7572
static hid_t _energy_s_create_memory_datatype(253,8007
static hid_t _energy_s_create_file_datatype(282,9133
static void *_energy_init_job_series(_energy_init_job_series304,9881
static char** _energy_get_series_tod(316,10168
static double* _energy_get_series_values(332,10583
static void _energy_merge_step_series(366,11538
static void *_energy_series_total(_energy_series_total387,12098
static void _energy_extract_series(407,12725
static void _energy_extract_total(427,13323
static hdf5_api_ops_t* _energy_profile_factory(446,13983
static int _io_dataset_size(469,14953
static hid_t _io_create_memory_datatype(474,15022
static hid_t _io_create_file_datatype(492,15629
static hid_t _io_s_create_memory_datatype(512,16120
static hid_t _io_s_create_file_datatype(551,17728
static void *_io_init_job_series(_io_init_job_series583,18777
static char** _io_get_series_tod(594,19040
static double* _io_get_series_values(610,19431
static void _io_merge_step_series(656,20623
static void *_io_series_total(_io_series_total690,21679
static void _io_extract_series(713,22421
static void _io_extract_total(734,23064
static hdf5_api_ops_t* _io_profile_factory(758,23926
static int _network_dataset_size(781,24848
static hid_t _network_create_memory_datatype(786,24927
static hid_t _network_create_file_datatype(806,25645
static hid_t _network_s_create_memory_datatype(824,26181
static hid_t _network_s_create_file_datatype(873,28138
static void *_network_init_job_series(_network_init_job_series903,29310
static char** _network_get_series_tod(915,29605
static double* _network_get_series_values(931,30026
static void _network_merge_step_series(979,31365
static void *_network_series_total(_network_series_total1001,32023
static void _network_extract_series(1024,32845
static void _network_extract_total(1047,33558
static hdf5_api_ops_t *_network_profile_factory(_network_profile_factory1073,34512
static int _task_dataset_size(1095,35495
static hid_t _task_create_memory_datatype(1100,35568
static hid_t _task_create_file_datatype(1122,36474
static hid_t _task_s_create_memory_datatype(1144,37140
static hid_t _task_s_create_file_datatype(1212,40199
static void *_task_init_job_series(_task_init_job_series1258,42026
static char** _task_get_series_tod(1269,42305
static double* _task_get_series_values(1285,42708
static void _task_merge_step_series(1355,44624
static void *_task_series_total(_task_series_total1393,45796
static void _task_extract_series(1416,46657
static void _task_extract_total(1442,47509
static hdf5_api_ops_t *_task_profile_factory(_task_profile_factory1478,48860
extern hdf5_api_ops_t* profile_factory(1500,49793
extern void profile_init(1522,50264
extern void profile_fini(1530,50410
extern char *get_data_set_name(get_data_set_name1538,50529
static char* _H5O_type_t2str(1548,50703
extern void hdf5_obj_info(1568,51088
extern hid_t get_attribute_handle(1617,52512
extern hid_t get_group(1648,53226
extern hid_t make_group(1681,53950
extern void put_string_attribute(1701,54342
extern char *get_string_attribute(get_string_attribute1739,55353
extern void put_int_attribute(1780,56219
extern int get_int_attribute(1807,56950
extern void put_uint32_attribute(1826,57343
extern uint32_t get_uint32_attribute(1854,58089
extern void *get_hdf5_data(get_hdf5_data1872,58492
extern void put_hdf5_data(1954,60445

src/plugins/acct_gather_profile/hdf5/hdf5_api.h,4442
#define __ACCT_GATHER_HDF5_API_H__44,2239
#define MAX_PROFILE_PATH 64,2639
#define MAX_ATTR_NAME 65,2669
#define MAX_GROUP_NAME 66,2694
#define MAX_DATASET_NAME 67,2720
#define ATTR_NODENAME 69,2749
#define ATTR_STARTTIME 70,2783
#define ATTR_NSTEPS 71,2819
#define ATTR_NNODES 72,2857
#define ATTR_NTASKS 73,2895
#define ATTR_TASKID 74,2933
#define ATTR_CPUPERTASK 75,2963
#define ATTR_DATATYPE 76,3003
#define ATTR_SUBDATATYPE 77,3037
#define ATTR_STARTTIME 78,3077
#define ATTR_STARTSEC 79,3113
#define SUBDATA_DATA 80,3150
#define SUBDATA_NODE 81,3178
#define SUBDATA_SAMPLE 82,3206
#define SUBDATA_SERIES 83,3238
#define SUBDATA_TOTAL 84,3270
#define SUBDATA_SUMMARY 85,3300
#define GRP_ENERGY 87,3335
#define GRP_LUSTRE 88,3363
#define GRP_STEP 89,3391
#define GRP_NODES 90,3415
#define GRP_NODE 91,3441
#define GRP_NETWORK 92,3465
#define GRP_SAMPLES 93,3495
#define GRP_SAMPLE 94,3529
#define GRP_TASKS 95,3557
#define GRP_TASK 96,3583
#define GRP_TOTALS 97,3607
#define TOD_LEN 101,3694
#define TOD_FMT 102,3713
typedef struct prof_uint_sum 110,3966
	uint64_t min;111,3997
	uint64_t ave;112,4029
	uint64_t max;113,4061
	uint64_t total;114,4093
} prof_uint_sum_t;115,4130
typedef struct prof_dbl_sum 118,4207
	double	min;119,4237
	double	ave;120,4267
	double	max;121,4297
	double	total;122,4327
} prof_dbl_sum_t;123,4362
#define PROFILE_ENERGY_DATA 125,4381
typedef struct profile_energy 128,4462
	char		tod[tod129,4494
	time_t		time;130,4540
	uint64_t	power;131,4555
	uint64_t	cpu_freq;132,4572
} profile_energy_t;133,4592
typedef struct profile_energy_s 135,4647
	char		start_time[start_time136,4681
	uint64_t	elapsed_time;137,4709
	prof_uint_sum_t	power;138,4733
	prof_uint_sum_t cpu_freq;139,4757
} profile_energy_s_t;140,4784
#define PROFILE_IO_DATA 142,4825
typedef struct profile_io 145,4894
	char		tod[tod146,4922
	time_t		time;147,4968
	uint64_t	reads;148,4983
	double		read_size;149,5000
	uint64_t	writes;150,5046
	double		write_size;151,5064
} profile_io_t;152,5111
typedef struct profile_io_s 154,5162
	char		start_time[start_time155,5192
	uint64_t	elapsed_time;156,5220
	prof_uint_sum_t	reads;157,5244
	prof_dbl_sum_t	read_size;158,5268
	prof_uint_sum_t	writes;159,5321
	prof_dbl_sum_t	write_size;160,5346
} profile_io_s_t;161,5400
#define PROFILE_NETWORK_DATA 163,5419
typedef struct profile_network 166,5502
	char		tod[tod167,5535
	time_t		time;168,5581
	uint64_t	packets_in;169,5596
	double		size_in;170,5618
	uint64_t	packets_out;171,5662
	double		size_out;172,5685
} profile_network_t;173,5730
typedef struct profile_network_s 175,5786
	char		start_time[start_time176,5821
	uint64_t	elapsed_time;177,5849
	prof_uint_sum_t packets_in;178,5873
	prof_dbl_sum_t  size_in;179,5902
	prof_uint_sum_t packets_out;180,5955
	prof_dbl_sum_t  size_out;181,5985
} profile_network_s_t;182,6038
#define PROFILE_TASK_DATA 184,6062
typedef struct profile_task 187,6136
	char		tod[tod188,6166
	time_t		time;189,6212
	uint64_t	cpu_freq;190,6227
	uint64_t	cpu_time;191,6247
	double		cpu_utilization;192,6267
	uint64_t	rss;193,6293
	uint64_t	vm_size;194,6308
	uint64_t	pages;195,6327
	double	 	read_size;196,6344
	double	 	write_size;197,6391
} profile_task_t;198,6439
typedef struct profile_task_s 200,6492
	char		start_time[start_time201,6524
	uint64_t	elapsed_time;202,6552
	prof_uint_sum_t	cpu_freq;203,6576
	prof_uint_sum_t cpu_time;204,6603
	prof_dbl_sum_t 	cpu_utilization;205,6630
	prof_uint_sum_t rss;206,6664
	prof_uint_sum_t vm_size;207,6686
	prof_uint_sum_t pages;208,6712
	prof_dbl_sum_t 	read_size;209,6736
	prof_dbl_sum_t 	write_size;210,6790
} profile_task_s_t;211,6845
typedef struct hdf5_api_ops 244,8538
	int   (*dataset_size)dataset_size245,8568
	hid_t (*create_memory_datatype)create_memory_datatype246,8599
	hid_t (*create_file_datatype)create_file_datatype247,8640
	hid_t (*create_s_memory_datatype)create_s_memory_datatype248,8679
	hid_t (*create_s_file_datatype)create_s_file_datatype249,8722
	void* (*init_job_series)init_job_series250,8763
	char** (*get_series_tod)get_series_tod251,8796
	double* (*get_series_values)get_series_values252,8836
	void  (*merge_step_series)merge_step_series253,8887
	void* (*series_total)series_total254,8945
	void  (*extract_series)extract_series255,8982
	void  (*extract_total)extract_total257,9063
} hdf5_api_ops_t;259,9142

src/plugins/acct_gather_profile/hdf5/sh5util/sh5util.c,1640
#  define _GNU_SOURCE47,2324
	SH5UTIL_MODE_MERGE,75,2806
	SH5UTIL_MODE_EXTRACT,76,2827
	SH5UTIL_MODE_ITEM_EXTRACT,77,2850
} sh5util_mode_t;78,2878
	char *dir;dir81,2914
	int help;82,2926
	char *input;input83,2937
	int job_id;84,2951
	bool keepfiles;85,2964
	char *level;level86,2981
	sh5util_mode_t mode;87,2995
	char *node;node88,3017
	char *output;output89,3030
	char *series;series90,3045
	char *data_item;data_item91,3060
	int step_id;92,3078
	char *user;user93,3092
	int verbose;94,3105
} sh5util_opts_t;95,3119
static sh5util_opts_t params;98,3139
static char **series_names;series_names99,3169
static int num_series;100,3197
static void _help_msg(110,3481
main(147,5478
_free_options(212,6493
static void _delete_string_list(229,6825
static void _remove_empty_output(244,7002
static void _init_opts(263,7375
static int _set_options(271,7532
_check_params(388,10286
static void* _get_all_samples(446,11925
static void _merge_series_data(531,14289
static void _merge_task_totals(656,17855
static void _merge_node_totals(773,21338
static void _merge_node_step_data(845,23267
static int _merge_step_files(897,24872
static hid_t _get_series_parent(1055,28540
static void _get_series_names(1079,29068
static void _extract_series(1105,29774
static void _extract_node_level(1163,31365
static void _extract_all_tasks(1201,32466
static int _extract_data(1256,34151
static void *_get_series_data(_get_series_data1402,37989
static void _series_analysis(1458,39375
static void _get_all_node_series(1557,42388
static void _get_all_task_series(1662,45467
static int _series_data(1807,50258

src/plugins/job_submit/cray/job_submit_cray.c,295
#define _DEBUG 69,2724
const char plugin_name[plugin_name97,3933
const char plugin_type[plugin_type98,3993
const uint32_t plugin_version 99,4046
const uint32_t min_plug_version 100,4085
int init 102,4125
int fini 107,4169
extern int job_submit(112,4213
extern int job_modify(117,4317

src/plugins/job_submit/partition/job_submit_partition.c,268
const char plugin_name[plugin_name97,4039
const char plugin_type[plugin_type98,4104
const uint32_t plugin_version 99,4162
const uint32_t min_plug_version 100,4201
static bool _user_access(110,4723
extern int job_submit(137,5461
extern int job_modify(170,6462

src/plugins/job_submit/throttle/job_submit_throttle.c,684
#define MAX_ACCTG_FREQUENCY 72,2834
const char plugin_name[plugin_name100,4074
const char plugin_type[plugin_type101,4138
const uint32_t plugin_version 102,4195
const uint32_t min_plug_version 103,4234
typedef struct thru_put 105,4274
	uint32_t    uid;106,4300
	uint32_t job_count;107,4318
} thru_put_t;108,4339
static int jobs_per_user_per_hour 110,4354
static time_t last_reset 111,4393
static thru_put_t *thru_put_array thru_put_array112,4432
static int thru_put_size 113,4474
static void _get_config(115,4505
static void _reset_counters(128,4850
extern int init(162,5697
extern int fini(167,5747
extern int job_submit(173,5821
extern int job_modify(203,6622

src/plugins/job_submit/defaults/job_submit_defaults.c,271
#define MAX_ACCTG_FREQUENCY 70,2834
const char plugin_name[plugin_name98,4057
const char plugin_type[plugin_type99,4121
const uint32_t plugin_version 100,4178
const uint32_t min_plug_version 101,4217
extern int job_submit(108,4622
extern int job_modify(137,5530

src/plugins/job_submit/all_partitions/job_submit_all_partitions.c,233
const char plugin_name[plugin_name97,4060
const char plugin_type[plugin_type98,4130
const uint32_t plugin_version 99,4193
const uint32_t min_plug_version 100,4232
extern int job_submit(103,4341
extern int job_modify(126,5062

src/plugins/job_submit/logging/job_submit_logging.c,234
const char plugin_name[plugin_name98,4038
const char plugin_type[plugin_type99,4101
const uint32_t plugin_version 100,4157
const uint32_t min_plug_version 101,4196
extern int job_submit(109,4602
extern int job_modify(126,5280

src/plugins/job_submit/require_timelimit/job_submit_require_timelimit.c,223
const char plugin_name[plugin_name41,2122
const char plugin_type[plugin_type42,2186
const uint32_t plugin_version 43,2243
const uint32_t min_plug_version 44,2282
extern int job_submit(46,2322
int job_modify(62,2780

src/plugins/job_submit/lua/job_submit_lua.c,1404
#define _DEBUG 70,2671
#define MIN_ACCTG_FREQUENCY 71,2688
const char plugin_name[plugin_name99,3911
const char plugin_type[plugin_type100,3970
const uint32_t plugin_version 101,4022
const uint32_t min_plug_version 102,4061
static const char lua_script_path[lua_script_path104,4101
static lua_State *L L105,4177
static char *user_msg user_msg106,4205
static pthread_mutex_t lua_lock 113,4376
static void _stack_dump 123,4868
static int _log_lua_msg 155,5576
static int _log_lua_error 195,6388
static int _log_lua_user_msg 203,6565
static const struct luaL_Reg slurm_functions 212,6712
static void _register_lua_slurm_output_functions 219,6886
static char *_get_default_account(_get_default_account285,9154
static int _get_job_rec_field 302,9620
static int _get_job_req_field 371,11885
static int _set_job_req_field 488,16599
static int _get_part_rec_field 646,22597
	char *allow_groups;allow_groups689,24031
	uid_t *allow_uids;allow_uids690,24089
static void _register_lua_slurm_struct_functions 693,24161
static int _check_lua_script_function(708,24631
static int _check_lua_script_functions(721,24884
static bool _user_can_use_part(744,25256
static void _push_partition_list(768,25759
static void _push_job_desc(785,26228
static void _push_job_rec(792,26386
int init 804,26701
int fini 859,27992
extern int job_submit(867,28106
extern int job_modify(912,29189

src/plugins/job_submit/pbs/job_submit_pbs.c,518
#define _DEBUG 67,2571
const char plugin_name[plugin_name95,3780
const char plugin_type[plugin_type96,3839
const uint32_t plugin_version 97,3891
const uint32_t min_plug_version 98,3930
int init 100,3970
int fini 105,4014
static void _add_env(110,4058
static void _add_env2(121,4395
static void _decr_depend_cnt(136,4759
static void *_dep_agent(_dep_agent160,5405
static void _xlate_before(185,6135
static void _xlate_dependency(264,8600
extern int job_submit(305,9659
extern int job_modify(358,11179

src/plugins/job_submit/pbs/spank_pbs.c,35
int slurm_spank_task_init(46,2272

src/plugins/job_submit/cnode/job_submit_cnode.c,304
#define MIN_CNODES 78,3287
const char plugin_name[plugin_name107,4508
const char plugin_type[plugin_type108,4569
const uint32_t plugin_version 109,4623
const uint32_t min_plug_version 110,4662
static void _rebuild_licenses(112,4702
extern int job_submit(154,5907
extern int job_modify(167,6204

src/plugins/jobcomp/filetxt/filetxt_jobcomp_process.c,383
#define BUFFER_SIZE 51,2543
	char *name;name54,2586
	char *val;val55,2599
} filetxt_jobcomp_info_t;56,2611
static void _destroy_filetxt_jobcomp_info(59,2639
static FILE *_open_log_file(_open_log_file79,3068
static jobcomp_job_rec_t *_parse_line(_parse_line89,3213
extern List filetxt_jobcomp_process_get_jobs(164,6029
extern int filetxt_jobcomp_process_archive(273,8526

src/plugins/jobcomp/filetxt/filetxt_jobcomp_process.h,48
#define _HAVE_FILETXT_JOBCOMP_PROCESS_H45,2414

src/plugins/jobcomp/filetxt/jobcomp_filetxt.c,999
#define USE_ISO8601 60,2575
const char plugin_name[plugin_name91,3989
const char plugin_type[plugin_type92,4066
const uint32_t plugin_version	93,4119
#define JOB_FORMAT 95,4157
	int xe_number;101,4411
	char *xe_message;xe_message102,4427
} slurm_errtab_t;103,4446
static slurm_errtab_t slurm_errtab[slurm_errtab105,4465
static int plugin_errno 111,4584
static pthread_mutex_t  file_lock 114,4665
static char *           log_name 115,4728
static int              job_comp_fd 116,4770
_get_user_name(120,4870
_get_group_name(136,5306
static char *_lookup_slurm_api_errtab(_lookup_slurm_api_errtab154,5802
int init 172,6197
int fini 177,6243
extern int slurm_jobcomp_set_location 190,6451
static void _make_time_str 217,7125
extern int slurm_jobcomp_log_record 245,7884
extern int slurm_jobcomp_get_errno(342,10867
extern char *slurm_jobcomp_strerror(slurm_jobcomp_strerror347,10937
extern List slurm_jobcomp_get_jobs(358,11198
extern int slurm_jobcomp_archive(366,11364

src/plugins/jobcomp/mysql/jobcomp_mysql.c,1110
const char plugin_name[plugin_name78,3818
const char plugin_type[plugin_type79,3876
const uint32_t plugin_version 80,3920
mysql_conn_t *jobcomp_mysql_conn jobcomp_mysql_conn82,3958
char *jobcomp_table jobcomp_table84,4000
storage_field_t jobcomp_table_fields[jobcomp_table_fields85,4039
	int xe_number;113,4925
	char *xe_message;xe_message114,4941
} slurm_errtab_t;115,4960
static slurm_errtab_t slurm_errtab[slurm_errtab117,4979
static int plugin_errno 123,5098
static pthread_mutex_t  jobcomp_lock 126,5179
static int _mysql_jobcomp_check_tables(129,5247
static char *_get_user_name(_get_user_name140,5495
static char *_get_group_name(_get_group_name160,5997
static char *_lookup_slurm_api_errtab(_lookup_slurm_api_errtab183,6569
extern int init 201,6964
extern int fini 217,7239
extern int slurm_jobcomp_set_location(226,7393
extern int slurm_jobcomp_log_record(271,8453
extern int slurm_jobcomp_get_errno(413,12602
extern char *slurm_jobcomp_strerror(slurm_jobcomp_strerror418,12670
extern List slurm_jobcomp_get_jobs(429,12928
extern int slurm_jobcomp_archive(450,13360

src/plugins/jobcomp/mysql/mysql_jobcomp_process.c,103
extern List mysql_jobcomp_process_get_jobs(49,2492
extern int mysql_jobcomp_process_archive(181,5985

src/plugins/jobcomp/mysql/mysql_jobcomp_process.h,671
#define _HAVE_MYSQL_JOBCOMP_PROCESS_H45,2407
	JOBCOMP_REQ_JOBID,62,2939
	JOBCOMP_REQ_UID,63,2959
	JOBCOMP_REQ_USER_NAME,64,2977
	JOBCOMP_REQ_GID,65,3001
	JOBCOMP_REQ_GROUP_NAME,66,3019
	JOBCOMP_REQ_NAME,67,3044
	JOBCOMP_REQ_STATE,68,3063
	JOBCOMP_REQ_PARTITION,69,3083
	JOBCOMP_REQ_TIMELIMIT,70,3107
	JOBCOMP_REQ_STARTTIME,71,3131
	JOBCOMP_REQ_ENDTIME,72,3155
	JOBCOMP_REQ_NODELIST,73,3177
	JOBCOMP_REQ_NODECNT,74,3200
	JOBCOMP_REQ_CONNECTION,75,3222
	JOBCOMP_REQ_REBOOT,76,3247
	JOBCOMP_REQ_ROTATE,77,3268
	JOBCOMP_REQ_MAXPROCS,78,3289
	JOBCOMP_REQ_GEOMETRY,79,3312
	JOBCOMP_REQ_START,80,3335
	JOBCOMP_REQ_BLOCKID,81,3355
	JOBCOMP_REQ_COUNT82,3377

src/plugins/jobcomp/none/jobcomp_none.c,418
const char plugin_name[plugin_name86,3825
const char plugin_type[plugin_type87,3897
const uint32_t plugin_version	88,3947
int init 94,4114
int slurm_jobcomp_set_location 104,4259
int slurm_jobcomp_log_record 109,4338
int slurm_jobcomp_get_errno(114,4426
char *slurm_jobcomp_strerror(slurm_jobcomp_strerror119,4490
List slurm_jobcomp_get_jobs(124,4560
int slurm_jobcomp_archive(129,4623
int fini 134,4694

src/plugins/jobcomp/script/jobcomp_script.c,2168
const char plugin_name[plugin_name133,5272
const char plugin_type[plugin_type134,5346
const uint32_t plugin_version	135,5398
static char * script 137,5436
static List comp_list 138,5465
static pthread_t script_thread 140,5496
static pthread_mutex_t thread_flag_mutex 141,5532
static pthread_mutex_t comp_list_mutex 142,5602
static pthread_cond_t comp_list_cond 143,5670
static int agent_exit 144,5735
static int plugin_errno 149,5793
static struct jobcomp_errno 151,5835
	int n;152,5865
	const char *descr;descr153,5873
} errno_table 154,5893
static const char * _jobcomp_script_strerror 165,6163
struct jobcomp_info 179,6432
	uint32_t jobid;180,6454
	uint32_t uid;181,6471
	uint32_t gid;182,6486
	uint32_t limit;183,6501
	uint32_t nprocs;184,6518
	uint32_t nnodes;185,6536
	uint16_t batch_flag;186,6554
	time_t submit;187,6576
	time_t start;188,6592
	time_t end;189,6607
	char *nodes;nodes190,6620
	char *name;name191,6634
	char *partition;partition192,6647
	char *jobstate;jobstate193,6665
	char *account;account194,6682
	char *work_dir;work_dir195,6698
	char *std_in;std_in196,6715
	char *std_out;std_out197,6730
	char *std_err;std_err198,6746
	char *connect_type;connect_type200,6777
	char *geometry;geometry201,6798
	char *blockid;blockid202,6815
static struct jobcomp_info * _jobcomp_info_create 206,6842
static void _jobcomp_info_destroy 276,9052
_check_script_permissions(301,9506
static char ** _extend_env 323,9958
static int _env_append 342,10273
static int _env_append_fmt 361,10548
static int _env_append_fmt 364,10675
static char ** _create_environment 377,10917
static int _redirect_stdio 431,12619
static void _jobcomp_child 446,13133
static int _jobcomp_exec_child 485,13818
static void * _script_agent 519,14407
extern int init 554,15199
extern int slurm_jobcomp_set_location 586,16003
int slurm_jobcomp_log_record 602,16330
extern int slurm_jobcomp_get_errno(620,16794
extern const char * slurm_jobcomp_strerror(626,16912
static int _wait_for_thread 631,17015
extern int fini 647,17332
extern List slurm_jobcomp_get_jobs(676,17941
extern int slurm_jobcomp_archive(686,18113

src/sacctmgr/account_functions.c,308
static int _set_cond(44,2338
static int _set_rec(166,5463
static int _isdefault_old(266,7873
static int _isdefault(298,8649
extern int sacctmgr_add_account(356,10220
extern int sacctmgr_list_account(689,19642
extern int sacctmgr_modify_account(877,24156
extern int sacctmgr_delete_account(1063,28935

src/sacctmgr/archive_functions.c,212
static char *_string_to_uid(_string_to_uid48,2424
extern int _addto_uid_char_list(60,2695
static int _set_cond(139,4355
extern int sacctmgr_archive_dump(396,11703
extern int sacctmgr_archive_load(501,14361

src/sacctmgr/association_functions.c,283
static int _set_cond(43,2312
extern bool sacctmgr_check_default_qos(135,4960
extern int sacctmgr_set_association_cond(233,7429
extern int sacctmgr_set_association_rec(429,14519
extern void sacctmgr_print_association_rec(563,18721
extern int sacctmgr_list_association(697,22189

src/sacctmgr/cluster_functions.c,352
static bool with_deleted 44,2332
static bool without_limits 45,2362
static int _set_cond(47,2395
static int _set_rec(145,5006
extern int sacctmgr_add_cluster(224,7029
extern int sacctmgr_list_cluster(392,11870
extern int sacctmgr_modify_cluster(663,18497
extern int sacctmgr_delete_cluster(833,22861
extern int sacctmgr_dump_cluster 925,25256

src/sacctmgr/common.c,2449
#define FORMAT_STRING_SIZE 47,2380
static pthread_t lock_warning_thread;49,2411
static void *_print_lock_warn(_print_lock_warn51,2450
static void _nonblock(59,2595
extern int parse_option_end(82,3028
extern char *strip_quotes(strip_quotes105,3400
static print_field_t *_get_print_field(_get_print_field149,4156
extern int notice_thread_init(569,19990
extern int notice_thread_fini(581,20244
extern int commit_check(586,20326
extern int sacctmgr_remove_assoc_usage(627,21052
extern int sacctmgr_remove_qos_usage(754,24586
extern slurmdb_association_rec_t *sacctmgr_find_account_base_assoc(sacctmgr_find_account_base_assoc852,27245
extern slurmdb_association_rec_t *sacctmgr_find_root_assoc(sacctmgr_find_root_assoc889,28167
extern slurmdb_user_rec_t *sacctmgr_find_user(sacctmgr_find_user894,28303
extern slurmdb_account_rec_t *sacctmgr_find_account(sacctmgr_find_account923,28967
extern slurmdb_cluster_rec_t *sacctmgr_find_cluster(sacctmgr_find_cluster952,29684
extern slurmdb_association_rec_t *sacctmgr_find_association_from_list(sacctmgr_find_association_from_list978,30262
extern slurmdb_association_rec_t *sacctmgr_find_account_base_assoc_from_list(sacctmgr_find_account_base_assoc_from_list1015,31174
extern slurmdb_qos_rec_t *sacctmgr_find_qos_from_list(sacctmgr_find_qos_from_list1044,31918
extern slurmdb_res_rec_t *sacctmgr_find_res_from_list(sacctmgr_find_res_from_list1070,32401
extern slurmdb_user_rec_t *sacctmgr_find_user_from_list(sacctmgr_find_user_from_list1092,32888
extern slurmdb_account_rec_t *sacctmgr_find_account_from_list(sacctmgr_find_account_from_list1112,33251
extern slurmdb_cluster_rec_t *sacctmgr_find_cluster_from_list(sacctmgr_find_cluster_from_list1132,33635
extern slurmdb_wckey_rec_t *sacctmgr_find_wckey_from_list(sacctmgr_find_wckey_from_list1151,34027
extern int get_uint(1179,34703
extern int get_uint16(1203,35227
extern int get_uint64(1228,35764
extern int get_double(1253,36297
extern int addto_action_char_list(1277,36826
extern List copy_char_list(1375,38795
extern void sacctmgr_print_coord_list(1395,39191
extern void sacctmgr_print_qos_list(1438,40266
extern void sacctmgr_print_qos_bitstr(1463,40904
extern void sacctmgr_print_assoc_limits(1488,41558
extern void sacctmgr_print_qos_limits(1588,44611
extern int sort_coord_list(1715,48497
extern List sacctmgr_process_format_list(1731,48798
extern int sacctmgr_validate_cluster_list(1749,49223

src/sacctmgr/config_functions.c,981
static char    *acct_storage_backup_host acct_storage_backup_host46,2354
static char    *acct_storage_host acct_storage_host47,2403
static char    *acct_storage_loc acct_storage_loc48,2445
static char    *acct_storage_pass acct_storage_pass49,2487
static uint32_t acct_storage_port;50,2529
static char    *acct_storage_type acct_storage_type51,2564
static char    *acct_storage_user acct_storage_user52,2606
static char    *auth_type auth_type53,2648
static uint16_t msg_timeout;54,2682
static char    *plugin_dir plugin_dir55,2711
static uint16_t private_data;56,2746
static uint32_t slurm_user_id;57,2776
static uint16_t track_wckey;58,2807
static List dbd_config_list 60,2837
static void _load_dbd_config(63,2875
static void _print_dbd_config(68,2963
static void _free_dbd_config(84,3314
static void _load_slurm_config(93,3445
static void _free_slurm_config(110,4146
static void _print_slurm_config(122,4395
extern int sacctmgr_list_config(149,5649

src/sacctmgr/event_functions.c,254
static uint32_t _decode_node_state(46,2378
static int _addto_state_char_list(82,3132
static char *_convert_to_id(_convert_to_id170,5015
static int _addto_id_char_list(193,5526
static int _set_cond(272,7203
extern int sacctmgr_list_event(448,12181

src/sacctmgr/file_functions.c,1830
	slurmdb_admin_level_t admin;45,2357
	uint16_t classification;46,2387
	List coord_list;47,2413
	char *def_acct;def_acct48,2448
	uint32_t def_qos_id;49,2465
	char *def_wckey;def_wckey50,2487
	char *desc;desc51,2505
	uint32_t fairshare;52,2518
	uint64_t grp_cpu_mins;54,2540
	uint32_t grp_cpus;55,2564
	uint32_t grp_jobs;56,2584
	uint32_t grp_mem;57,2604
	uint32_t grp_nodes;58,2623
	uint32_t grp_submit_jobs;59,2644
	uint32_t grp_wall;60,2671
	uint64_t max_cpu_mins_pj;62,2692
	uint32_t max_cpus_pj;63,2719
	uint32_t max_jobs;64,2742
	uint32_t max_nodes_pj;65,2762
	uint32_t max_submit_jobs;66,2786
	uint32_t max_wall_pj;67,2813
	char *name;name69,2837
	char *org;org70,2850
	char *part;part71,2862
	List qos_list;72,2875
	List wckey_list;73,2891
} sacctmgr_file_opts_t;74,2909
	MOD_CLUSTER,77,2949
	MOD_ACCT,78,2963
	MOD_USER79,2974
} sacctmgr_mod_type_t;80,2984
static int _init_sacctmgr_file_opts(82,3008
static int _strip_continuation(113,3769
static void _strip_comments(141,4343
static void _strip_escapes(165,4811
static int _get_next_line(184,5232
static void _destroy_sacctmgr_file_opts(209,5746
static sacctmgr_file_opts_t *_parse_options(_parse_options234,6357
static int _print_out_assoc(552,15276
static int _mod_assoc(707,18874
static int _mod_cluster(1031,27670
static int _mod_acct(1099,29564
static int _mod_user(1179,31587
static slurmdb_user_rec_t *_set_user_up(_set_user_up1433,38665
static slurmdb_account_rec_t *_set_acct_up(_set_acct_up1508,40927
static slurmdb_association_rec_t *_set_assoc_up(_set_assoc_up1531,41615
static int _print_file_slurmdb_hierarchical_rec_children(1601,43590
extern int print_file_add_limits_to_line(1735,47203
extern int print_file_slurmdb_hierarchical_rec_list(1808,49355
extern void load_sacctmgr_cfg_file 1844,50528

src/sacctmgr/job_functions.c,101
static int _set_cond(42,2270
static int _set_rec(105,3680
extern int sacctmgr_modify_job(165,5122

src/sacctmgr/problem_functions.c,73
static int _set_cond(42,2238
extern int sacctmgr_list_problem(127,4540

src/sacctmgr/qos_functions.c,305
static uint16_t _parse_preempt_modes(43,2264
static int _set_cond(114,3809
static int _set_rec(238,6995
static bool _isdefault(519,14522
extern int sacctmgr_add_qos(590,16377
extern int sacctmgr_list_qos(746,20365
extern int sacctmgr_modify_qos(990,26323
extern int sacctmgr_delete_qos(1090,28815

src/sacctmgr/resource_functions.c,312
static void _print_overcommit(42,2170
static int _set_res_cond(131,4539
static int _set_res_rec(263,7940
static void _print_res_format(391,11243
extern int sacctmgr_add_res(494,13569
extern int sacctmgr_list_res(760,20209
extern int sacctmgr_modify_res(840,22413
extern int sacctmgr_delete_res(938,24884

src/sacctmgr/sacctmgr.c,760
#define BUFFER_SIZE 46,2419
char *command_name;command_name48,2445
int exit_code;49,2465
int exit_flag;50,2537
int input_words;51,2586
int one_liner;52,2644
int quiet_flag;53,2692
int readonly_flag;54,2745
int verbosity;55,2817
int rollback_flag;56,2859
int with_assoc_flag 57,2920
void *db_conn db_conn58,2945
uint32_t my_uid 59,2967
List g_qos_list 60,2988
List g_res_list 61,3012
bool tree_display 62,3036
main 75,3474
static char *_getline(_getline256,8000
_get_command 288,8634
static void _print_version(361,10169
_process_command 380,10636
static void _add_it 516,14554
static void _archive_it 568,16260
static void _show_it 611,17428
static void _modify_it 676,19835
static void _delete_it 728,21551
void _usage 778,23233

src/sacctmgr/sacctmgr.h,1927
#define __SACCTMGR_H__41,2236
#define CKPT_WAIT	87,3087
#define	MAX_INPUT_FIELDS 88,3108
#define BUFFER_SIZE 89,3137
	PRINT_ACCT,93,3192
	PRINT_CLUSTER,94,3205
	PRINT_COORDS,95,3221
	PRINT_DESC,96,3236
	PRINT_FLAGS,97,3249
	PRINT_NAME,98,3263
	PRINT_PART,99,3276
	PRINT_QOS,100,3289
	PRINT_QOS_RAW,101,3301
	PRINT_USER,102,3317
	PRINT_WCKEYS,103,3330
	PRINT_FAIRSHARE 106,3360
	PRINT_GRPCM,107,3385
	PRINT_GRPCRM,108,3399
	PRINT_GRPC,109,3414
	PRINT_GRPJ,110,3427
	PRINT_GRPMEM,111,3440
	PRINT_GRPN,112,3455
	PRINT_GRPS,113,3468
	PRINT_GRPW,114,3481
	PRINT_MAXCM,115,3494
	PRINT_MAXCRM,116,3508
	PRINT_MAXC,117,3523
	PRINT_MAXCU,118,3536
	PRINT_MAXJ,119,3550
	PRINT_MAXN,120,3563
	PRINT_MAXNU,121,3576
	PRINT_MAXS,122,3590
	PRINT_MAXW,123,3603
	PRINT_DQOS 126,3636
	PRINT_ID,127,3656
	PRINT_LFT,128,3667
	PRINT_PID,129,3679
	PRINT_PNAME,130,3691
	PRINT_RGT,131,3705
	PRINT_CHOST 134,3733
	PRINT_CPORT,135,3754
	PRINT_CLASS,136,3768
	PRINT_CPUS,137,3782
	PRINT_NODECNT,138,3795
	PRINT_CLUSTER_NODES,139,3811
	PRINT_RPC_VERSION,140,3833
	PRINT_SELECT,141,3853
	PRINT_ORG 144,3881
	PRINT_ADMIN 147,3913
	PRINT_DACCT,148,3934
	PRINT_DWCKEY,149,3948
	PRINT_GRACE 152,3975
	PRINT_PREE,153,3996
	PRINT_PREEM,154,4009
	PRINT_PRIO,155,4023
	PRINT_UF,156,4036
	PRINT_UT,157,4047
	PRINT_PROBLEM 160,4074
	PRINT_ACTIONRAW 163,4109
	PRINT_ACTION,164,4134
	PRINT_ACTOR,165,4149
	PRINT_INFO,166,4163
	PRINT_TS,167,4176
	PRINT_WHERE,168,4187
	PRINT_DURATION,171,4215
	PRINT_END,172,4232
	PRINT_EVENTRAW,173,4244
	PRINT_EVENT,174,4261
	PRINT_NODENAME,175,4275
	PRINT_REASON,176,4292
	PRINT_START,177,4307
	PRINT_STATERAW,178,4321
	PRINT_STATE,179,4338
	PRINT_COUNT 182,4369
	PRINT_TYPE,183,4390
	PRINT_MANAGER,184,4403
	PRINT_SERVER,185,4419
	PRINT_CALLOWED,186,4434
	PRINT_ALLOWED,187,4451
	PRINT_CUSED,188,4467
	PRINT_USED,189,4481
} sacctmgr_print_t;190,4494

src/sacctmgr/txn_functions.c,69
static int _set_cond(44,2342
extern int sacctmgr_list_txn(162,5498

src/sacctmgr/user_functions.c,633
	char *cluster;cluster46,2387
	char *user;user47,2403
} regret_t;48,2416
static int _set_cond(50,2429
static int _set_rec(200,6407
static int _check_and_set_cluster_list(292,8691
static int _check_default_associations(332,9584
static int _check_default_wckeys(418,12022
static int _check_coord_request(509,14584
static void _check_user_has_default_assoc(619,17494
extern int sacctmgr_add_user(651,18234
extern int sacctmgr_add_coord(1333,37419
extern int sacctmgr_list_user(1409,39418
extern int sacctmgr_modify_user(1683,46101
extern int sacctmgr_delete_user(1903,51887
extern int sacctmgr_delete_coord(2081,56667

src/sacctmgr/wckey_functions.c,163
static int _set_cond(43,2297
extern int sacctmgr_list_wckey(148,5004
		PRINT_CLUSTER,167,5476
		PRINT_ID,168,5493
		PRINT_NAME,169,5505
		PRINT_USER170,5519

src/slurmdbd/agent.h,25
#define _AGENT_H40,2176

src/slurmdbd/backup.c,274
bool primary_resumed 49,2340
bool backup 50,2370
bool have_control 51,2391
static slurm_fd_t  slurmdbd_fd 53,2419
static void _open_slurmdbd_fd(56,2526
static void _close_slurmdbd_fd(70,2827
static void _reopen_slurmdbd_fd(79,2995
extern void run_dbd_backup(87,3258

src/slurmdbd/backup.h,29
#define _DBDBACKUP_H40,2134

src/slurmdbd/proc_req.c,2354
proc_req(187,9777
static char * _replace_double_quotes(475,17544
static int _add_accounts(491,17734
static int _add_account_coords(544,19472
static int _add_assocs(620,21748
static int _add_clusters(698,24118
static int _add_qos(736,25277
static int _add_res(774,26405
static int _add_users(813,27550
static int _add_wckeys(867,29274
static int _add_reservation(903,30367
static int _archive_dump(935,31339
static int _archive_load(994,33362
static int _cluster_cpus(1034,34595
static int _get_accounts(1085,36214
static int _get_assocs(1129,37544
static int _get_clusters(1174,38846
static int _unpack_config_name(1220,40168
static int _get_config(1234,40434
static int _get_events(1274,41710
static int _get_jobs_cond(1320,43017
static int _get_probs(1364,44335
static int _get_qos(1422,46072
static int _get_res(1469,47441
static int _get_txn(1513,48710
static int _get_usage(1557,49981
static int _get_users(1620,51825
static int _get_wckeys(1681,53717
static int _get_reservations(1737,55469
static int _flush_jobs(1782,56768
static int _init_conn(1816,57838
static int   _fini_conn(1863,59317
static int  _job_complete(1894,60175
static int  _job_start(1966,62434
static int  _job_suspend(2004,63673
static int   _modify_accounts(2059,65450
static int   _modify_assocs(2130,67845
static int   _modify_clusters(2195,69959
static int   _modify_job(2266,72356
static int   _modify_qos(2325,74247
static int   _modify_res(2399,76722
static int   _modify_users(2469,79082
static int   _modify_wckeys(2592,83122
static int _modify_reservation(2663,85497
static int _node_state(2697,86520
static char *_node_state_string(_node_state_string2768,88751
static void _process_job_start(2779,88937
static int   _register_ctld(2852,91593
static int   _remove_accounts(2967,95237
static int   _remove_account_coords(3038,97629
static int   _remove_assocs(3105,99786
static int   _remove_clusters(3169,101892
static int   _remove_qos(3240,104286
static int _remove_res(3311,106633
static int   _remove_users(3378,108928
static int   _remove_wckeys(3449,111283
static int _remove_reservation(3520,113663
static int   _roll_usage(3553,114676
static int   _send_mult_job_start(3591,115803
static int   _send_mult_msg(3645,117509
static int  _step_complete(3702,119207
static int  _step_start(3773,121470

src/slurmdbd/proc_req.h,302
#define _PROC_REQ_H40,2178
	char *cluster_name;cluster_name47,2321
	uint32_t cluster_cpus;48,2342
	uint16_t ctld_port;49,2366
	void *db_conn;db_conn50,2408
	char ip[ip51,2450
	slurm_fd_t newsockfd;52,2464
	uint16_t orig_port;53,2522
	uint16_t rpc_version;54,2543
} slurmdbd_conn_t;55,2587

src/slurmdbd/read_config.c,386
pthread_mutex_t conf_mutex 65,2869
static time_t boot_time;71,3031
extern void free_slurmdbd_conf(77,3154
static void _clear_slurmdbd_conf(85,3310
extern int read_slurmdbd_conf(127,4705
extern void log_config(526,17925
extern uint16_t get_dbd_port(602,20752
extern void slurmdbd_conf_lock(612,20922
extern void slurmdbd_conf_unlock(617,20996
extern List dump_config(625,21197

src/slurmdbd/read_config.h,1334
#define _DBD_READ_CONFIG_H41,2263
#define DEFAULT_SLURMDBD_AUTHTYPE	60,2635
#define DEFAULT_SLURMDBD_PIDFILE	62,2721
#define DEFAULT_SLURMDBD_ARCHIVE_DIR	63,2778
typedef struct slurm_dbd_conf 67,2903
	time_t		last_update;68,2935
	char *		archive_dir;69,2987
	char *		archive_script;72,3100
	char *		auth_info;73,3158
	char *		auth_type;74,3205
	uint16_t        control_timeout;75,3256
	char *		dbd_addr;77,3356
	char *		dbd_backup;78,3410
	char *		dbd_host;79,3466
	uint16_t	dbd_port;80,3513
	uint16_t	debug_level;81,3567
	char *	 	default_qos;82,3619
	char *		log_file;84,3710
	uint16_t        log_fmt;85,3746
	uint16_t        msg_timeout;86,3814
	char *		pid_file;87,3870
	char *		plugindir;88,3922
	uint16_t        private_data;89,3972
	uint32_t        purge_event;92,4107
	uint32_t	purge_job;94,4202
	uint32_t	purge_resv;95,4253
	uint32_t	purge_step;96,4313
	uint32_t        purge_suspend;97,4366
	uint32_t	slurm_user_id;99,4466
	char *		slurm_user_name;100,4520
	char *		storage_backup_host;101,4580
	char *		storage_host;103,4659
	char *		storage_loc;104,4713
	char *		storage_pass;105,4756
	uint16_t	storage_port;106,4809
	char *		storage_type;107,4863
	char *		storage_user;108,4918
	uint16_t        track_wckey;109,4975
	uint16_t        track_ctld;110,5043
} slurm_dbd_conf_t;112,5147

src/slurmdbd/rpc_mgr.c,718
#define MAX_THREAD_COUNT 64,2839
#define MAX_MSG_SIZE 70,2971
static pthread_t       master_thread_id 83,3434
static int             thread_count 84,3514
static pthread_mutex_t thread_count_lock 85,3555
static pthread_cond_t  thread_count_cond 86,3625
extern void *rpc_mgr(rpc_mgr90,3755
extern void rpc_mgr_wake(172,6222
static void * _service_connection(186,6526
extern Buf make_dbd_rc_msg(278,9265
static int _send_resp(293,9607
static int _tot_wait 329,10355
static bool _fd_readable(341,10712
extern bool fd_writeable(383,11614
static int _wait_for_server_thread(442,13087
static void _free_server_thread(492,14292
static void _wait_for_thread_fini(519,14906
static void _sig_handler(560,15876

src/slurmdbd/rpc_mgr.h,27
#define _RPC_MGR_H40,2167

src/slurmdbd/slurmdbd.c,1168
time_t shutdown_time 73,2984
static int    dbd_sigarray[dbd_sigarray76,3070
static int    debug_level 80,3257
static int    foreground 81,3330
static log_options_t log_opts 82,3391
static int	 new_nice 84,3476
static pthread_t rpc_handler_thread;85,3502
static pthread_t signal_handler_thread;86,3570
static pthread_t rollup_handler_thread;87,3644
static pthread_mutex_t rollup_lock 88,3718
static bool running_rollup 89,3782
int main(110,4599
extern void shutdown_threads(272,9102
static void  _init_config(280,9280
static void _parse_commandline(312,10226
static void _usage(350,10919
static void _update_logging(366,11474
static void _update_nice(405,12580
static void _kill_old_slurmdbd(422,12936
static void _init_pidfile(447,13474
static void _daemonize(462,13876
static void _set_work_dir(469,14013
static void _request_registrations(498,14662
static void _rollup_handler_cancel(520,15289
static void *_rollup_handler(_rollup_handler531,15584
static int _send_slurmctld_register_req(593,17058
static void *_signal_handler(_signal_handler622,17924
static void _default_sigaction(668,19168
static void _become_slurm_user(684,19458

src/slurmdbd/slurmdbd.h,29
#define _SLURM_DBD_H41,2249

src/slurmdbd/agent.c,0

src/sacct/options.c,778
#define OPT_LONG_NAME	48,2428
int selected_state[selected_state55,2549
List selected_parts 56,2582
List selected_steps 57,2610
void *acct_db_conn acct_db_conn58,2638
List print_fields_list 60,2666
ListIterator print_fields_itr 61,2697
int field_count 62,2735
List g_qos_list 63,2756
void _help_fields_msg(65,2781
static char *_convert_to_id(_convert_to_id80,2981
static int _addto_id_char_list(103,3492
static int _addto_state_char_list(183,5215
static int _addto_step_list(271,7116
void _help_msg(391,9854
void _usage(520,19404
void _init_params(525,19487
int get_data(532,19665
void parse_command_line(590,21013
void do_help(1206,38700
void do_list(1232,39126
void do_list_completion(1279,40265
void sacct_init(1294,40512
void sacct_fini(1301,40653

src/sacct/print.c,185
char *_elapsed_time(_elapsed_time47,2298
static char *_find_qos_name_from_list(_find_qos_name_from_list85,3142
static void _print_small_double(107,3518
void print_fields(121,3826

src/sacct/process.c,73
char *find_hostname(find_hostname44,2206
void aggregate_stats(62,2550

src/sacct/sacct.c,214
sacct_parameters_t params;45,2151
print_field_t fields[fields46,2178
List jobs 121,6141
int main(123,6160
		SACCT_LIST,126,6202
		SACCT_HELP,127,6216
		SACCT_USAGE128,6230
void invalidSwitchCombo(170,6909

src/sacct/sacct.h,2861
#define _SACCT_H41,2191
#define ERROR 66,2773
#define BRIEF_FIELDS 68,2790
#define BRIEF_COMP_FIELDS 69,2834
#define DEFAULT_FIELDS 70,2878
#define DEFAULT_COMP_FIELDS 71,2960
#define LONG_FIELDS 72,3044
#define LONG_COMP_FIELDS 74,3455
#define STATE_COUNT 76,3553
#define MAX_PRINTFIELDS 78,3577
#define FORMAT_STRING_SIZE 79,3605
#define SECONDS_IN_MINUTE 81,3636
#define SECONDS_IN_HOUR 82,3665
#define SECONDS_IN_DAY 83,3712
typedef enum {	HEADLINE,87,3806
		UNDERSCORE,88,3831
		JOB,89,3845
		JOBSTEP,90,3852
		JOBCOMP91,3863
} type_t;92,3873
		PRINT_ACCOUNT,95,3899
		PRINT_ALLOC_CPUS,96,3916
		PRINT_ASSOCID,97,3936
		PRINT_AVECPU,98,3953
		PRINT_ACT_CPUFREQ,99,3969
		PRINT_AVEDISKREAD,100,3990
		PRINT_AVEDISKWRITE,101,4011
		PRINT_AVEPAGES,102,4033
		PRINT_AVERSS,103,4051
		PRINT_AVEVSIZE,104,4067
		PRINT_BLOCKID,105,4085
		PRINT_CLUSTER,106,4102
		PRINT_COMMENT,107,4119
		PRINT_CONSUMED_ENERGY,108,4136
		PRINT_CONSUMED_ENERGY_RAW,109,4161
		PRINT_CPU_TIME,110,4190
		PRINT_CPU_TIME_RAW,111,4208
		PRINT_DERIVED_EC,112,4230
		PRINT_ELAPSED,113,4250
		PRINT_ELIGIBLE,114,4267
		PRINT_END,115,4285
		PRINT_EXITCODE,116,4298
		PRINT_GID,117,4316
		PRINT_GROUP,118,4329
		PRINT_JOBID,119,4344
		PRINT_JOBNAME,120,4359
		PRINT_LAYOUT,121,4376
		PRINT_MAXDISKREAD,122,4392
		PRINT_MAXDISKREADNODE,123,4413
		PRINT_MAXDISKREADTASK,124,4438
		PRINT_MAXDISKWRITE,125,4463
		PRINT_MAXDISKWRITENODE,126,4485
		PRINT_MAXDISKWRITETASK,127,4511
		PRINT_MAXPAGES,128,4537
		PRINT_MAXPAGESNODE,129,4555
		PRINT_MAXPAGESTASK,130,4577
		PRINT_MAXRSS,131,4599
		PRINT_MAXRSSNODE,132,4615
		PRINT_MAXRSSTASK,133,4635
		PRINT_MAXVSIZE,134,4655
		PRINT_MAXVSIZENODE,135,4673
		PRINT_MAXVSIZETASK,136,4695
		PRINT_MINCPU,137,4717
		PRINT_MINCPUNODE,138,4733
		PRINT_MINCPUTASK,139,4753
		PRINT_NNODES,140,4773
		PRINT_NODELIST,141,4789
		PRINT_NTASKS,142,4807
		PRINT_PARTITION,143,4823
		PRINT_PRIO,144,4842
		PRINT_QOS,145,4856
		PRINT_QOSRAW,146,4869
		PRINT_REQ_CPUFREQ,147,4885
		PRINT_REQ_CPUS,148,4906
		PRINT_REQ_MEM,149,4924
		PRINT_RESV,150,4941
		PRINT_RESV_CPU,151,4955
		PRINT_RESV_CPU_RAW,152,4973
		PRINT_START,153,4995
		PRINT_STATE,154,5010
		PRINT_SUBMIT,155,5025
		PRINT_SUSPENDED,156,5041
		PRINT_SYSTEMCPU,157,5060
		PRINT_TIMELIMIT,158,5079
		PRINT_TOTALCPU,159,5098
		PRINT_UID,160,5116
		PRINT_USER,161,5129
		PRINT_USERCPU,162,5143
		PRINT_WCKEY,163,5160
		PRINT_WCKEYID,164,5175
} sacct_print_types_t;165,5192
	slurmdb_job_cond_t *job_cond;job_cond168,5233
	int opt_completion;169,5264
	int opt_dup;170,5304
	char *opt_field_list;opt_field_list171,5359
	int opt_gid;172,5398
	int opt_help;173,5439
	char *opt_filein;opt_filein174,5468
	int opt_noheader;175,5487
	int opt_allocs;176,5532
	int opt_uid;177,5564
} sacct_parameters_t;178,5605

src/smap/configure_functions.c,1130
	int color;50,2485
	int color_count;51,2497
	char letter;52,2515
	List nodes;53,2529
	select_ba_request_t *request;request54,2542
} allocated_block_t;55,2573
int color_count 74,3463
char error_string[error_string75,3484
int base_part_node_cnt 76,3508
int nodecard_node_cnt 77,3538
char *layout_mode layout_mode78,3566
static void _set_nodes(80,3597
static void _destroy_allocated_block(101,4022
static allocated_block_t *_make_request(_make_request119,4528
static int _full_request(157,5525
static int _set_layout(240,7710
static int _set_base_part_cnt(267,8286
static int _set_nodecard_cnt(289,8698
static int _xlate_coord(311,9102
static int _create_allocation(319,9266
static int _resolve(605,15873
static int _change_state_all_bps(633,16307
static int _change_state_bps(653,16746
static int _remove_allocation(714,18080
static int _copy_allocation(756,19097
static int _save_allocation(859,21952
static int _add_bg_record(1020,26169
static int _load_configuration(1145,29407
static void _print_header_command(1226,31215
static void _print_text_command(1282,32391
void get_command(1368,34327

src/smap/grid_functions.c,477
static void _calc_coord_3d(43,2257
static void _calc_coord_4d(53,2524
extern int *get_cluster_dims(get_cluster_dims64,2864
static void _internal_setup_grid(88,3474
extern void set_grid_inx(119,4254
extern int set_grid_bg(142,4918
extern void init_grid(171,5771
extern void update_grid(301,9612
extern void clear_grid(321,10066
extern void free_grid(344,10576
extern void print_grid(366,11009
bitstr_t *get_requested_node_bitmap(get_requested_node_bitmap392,11764

src/smap/job_functions.c,259
extern void get_job(52,2574
static void _print_header_job(203,6270
static long _job_time_used(264,7830
static int _print_text_job(285,8346
static int _get_node_cnt(456,12729
static int _nodes_in_list(477,13328
static int   _max_cpus_per_node(486,13580

src/smap/opts.c,210
extern void parse_command_line(51,2448
extern void print_date(185,5676
extern void clear_window(199,5919
extern char *resolve_mp(resolve_mp210,6120
static void _usage(301,8328
static void _help(312,8602

src/smap/partition_functions.c,1047
#define _DEBUG 46,2345
	char *bg_block_name;bg_block_name49,2380
	uint16_t bg_conn_type[bg_conn_type50,2402
	uint16_t bg_node_use;51,2446
	char *ionode_str;ionode_str52,2469
	List job_list;53,2488
	int letter_num;54,2504
	List nodelist;55,2521
	char *mp_str;mp_str56,2537
	int cnode_cnt;57,2552
	bool printed;58,2568
	int size;59,2583
	char *slurm_part_name;slurm_part_name60,2594
	uint16_t state;61,2618
} db2_block_info_t;62,2635
static List block_list 64,2656
extern void get_slurm_part(76,3149
extern void get_bg_part(178,5603
static char *_set_running_job_str(_set_running_job_str404,11611
static void _marknodes(430,12202
static void _print_header_part(471,13492
static int _print_text_part(548,15209
static void _block_list_del(806,21158
static void _nodelist_del(826,21606
static int _in_slurm_partition(833,21704
static int _print_rest(869,22435
static int *_build_coord(_build_coord897,23165
static bool _incr_coord(909,23453
static void _addto_nodelist(922,23675
static int _make_nodelist(945,24246

src/smap/reservation_functions.c,117
extern void get_reservation(47,2411
static void _print_header_resv(165,5189
static void _print_text_resv(208,6385

src/smap/smap.c,673
static int min_screen_width 48,2333
int text_line_cnt 53,2435
smap_parameters_t params;55,2459
smap_system_t *smap_system_ptr;smap_system_ptr56,2485
int quiet_flag 58,2518
int grid_line_cnt 59,2538
int max_display;60,2561
int resize_screen 61,2578
int *dim_size dim_size63,2602
char letters[letters64,2624
char colors[colors65,2642
int main_xcord 66,2658
int main_ycord 67,2678
WINDOW *grid_win grid_win68,2698
WINDOW *text_win text_win69,2723
int main(81,2959
static void _init_colors(328,8389
static void _smap_exit(354,8834
static int _get_option(369,9017
static void *_resize_handler(_resize_handler463,10569
static int _set_pairs(558,12614

src/smap/smap.h,1246
#define _SMAP_H41,2226
#  define _GNU_SOURCE44,2263
#  define NCURSES_OPAQUE 71,2775
#     define HAVE_CURSES_H80,2923
#  undef lines91,3234
#  define SYSTEM_DIMENSIONS 94,3282
#define OPT_LONG_HELP	119,3956
#define OPT_LONG_USAGE	120,3984
#define OPT_LONG_HIDE	121,4013
enum { JOBS,123,4042
enum { JOBS, RESERVATIONS,123,4042
enum { JOBS, RESERVATIONS, SLURMPART,123,4042
enum { JOBS, RESERVATIONS, SLURMPART, BGPART,123,4042
enum { JOBS, RESERVATIONS, SLURMPART, BGPART, COMMANDS 123,4042
	bool all_flag;127,4141
	List clusters;128,4157
	int cluster_base;129,4173
	uint16_t cluster_dims;130,4192
	uint32_t cluster_flags;131,4216
	bool commandline;132,4241
	char *command;command133,4260
	int display;134,4276
	int iterate;135,4290
	bitstr_t *io_bit;io_bit136,4304
	bool no_header;137,4323
	hostlist_t hl;138,4340
	char *resolve;resolve139,4356
	int verbose;140,4372
} smap_parameters_t;141,4386
	uint16_t *coord;coord148,4514
	int grid_xcord,150,4569
	int grid_xcord, grid_ycord;150,4569
	int color;152,4634
	int index;154,4705
	char letter;156,4744
	int state;157,4758
	uint16_t used;159,4815
} smap_node_t;160,4831
	int node_cnt;163,4864
	smap_node_t **grid;grid164,4879
} smap_system_t;165,4900

src/api/allocate.c,842
#define BUFFER_SIZE 73,2999
#define MAX_ALLOC_WAIT 74,3024
#define MIN_ALLOC_WAIT 75,3064
	slurm_addr_t address;78,3122
	int fd;79,3145
	char *hostname;hostname80,3154
	uint16_t port;81,3171
} listen_t;82,3187
slurm_allocate_resources 98,3865
slurm_allocate_resources_blocking 172,6000
int slurm_job_will_run 295,9402
slurm_job_step_create 371,11503
slurm_allocation_lookup(409,12556
slurm_allocation_lookup_lite(452,13729
int slurm_sbcast_lookup(494,14916
_handle_rc_msg(533,15844
char *slurm_read_hostfile(slurm_read_hostfile557,16627
static listen_t *_create_allocation_response_socket(_create_allocation_response_socket678,19524
static void _destroy_allocation_response_socket(703,20257
_handle_msg(718,20626
_accept_msg_connection(753,21621
_wait_for_alloc_rpc(802,22851
_wait_for_allocation_response(845,23672

src/api/allocate_msg.c,809
struct allocation_msg_thread 66,2844
	slurm_allocation_callbacks_t callback;67,2875
	eio_handle_t *handle;handle68,2915
	pthread_t id;69,2938
static uid_t slurm_uid;72,2957
static pthread_mutex_t msg_thr_start_lock 74,3035
static pthread_cond_t msg_thr_start_cond 75,3106
static struct io_operations message_socket_ops 76,3175
static void *_msg_thr_internal(_msg_thr_internal82,3345
extern allocation_msg_thread_t *slurm_allocation_msg_thr_create(slurm_allocation_msg_thr_create98,3767
extern void slurm_allocation_msg_thr_destroy(159,5595
static void _handle_node_fail(174,5991
static void _handle_timeout(190,6461
static void _handle_user_msg(203,6773
static void _handle_ping(215,7076
static void _handle_job_complete(228,7411
static void _handle_suspend(240,7759
_handle_msg(253,8085

src/api/block_info.c,278
void slurm_print_block_info_msg(73,2932
void slurm_print_block_info(96,3685
char *slurm_sprint_block_info(slurm_sprint_block_info114,4272
extern int slurm_load_block_info 224,7424
extern int slurm_get_select_jobinfo(265,8431
extern int slurm_get_select_nodeinfo(272,8631

src/api/cancel.c,53
slurm_kill_job 60,2634
slurm_kill_job_step 95,3460

src/api/checkpoint.c,594
  char *__progname __progname56,2514
static int _checkpoint_op 74,3116
extern int slurm_checkpoint_able 106,3983
extern int slurm_checkpoint_disable 149,5100
extern int slurm_checkpoint_enable 161,5461
extern int slurm_checkpoint_create 175,6033
extern int slurm_checkpoint_requeue 190,6596
extern int slurm_checkpoint_vacate 206,7229
extern int slurm_checkpoint_restart 219,7649
extern int slurm_checkpoint_complete 235,8275
extern int slurm_checkpoint_error 271,9484
_handle_rc_msg(328,10748
extern int slurm_checkpoint_task_complete 347,11401
slurm_checkpoint_tasks(384,12456

src/api/complete.c,28
slurm_complete_job 60,2628

src/api/config_info.c,337
extern long slurm_api_version 67,3068
_reset_period_str(73,3158
void slurm_print_ctl_conf 101,3833
extern void *slurm_ctl_conf_2_key_pairs slurm_ctl_conf_2_key_pairs144,5157
slurm_load_ctl_conf 1253,45493
slurm_load_slurmd_status(1295,46551
void slurm_print_slurmd_status 1368,48471
extern void slurm_print_key_pairs(1420,50178

src/api/front_end_info.c,148
slurm_print_front_end_info_msg 73,3008
slurm_print_front_end_table 102,3917
slurm_sprint_front_end_table 120,4554
slurm_load_front_end 218,7384

src/api/init_msg.c,337
void slurm_init_job_desc_msg(58,2610
extern void slurm_init_update_step_msg 108,4654
void slurm_init_part_desc_msg 121,5044
void slurm_init_resv_desc_msg 143,5915
void slurm_init_update_node_msg 156,6288
void slurm_init_update_front_end_msg 167,6659
void slurm_init_update_block_msg 178,7008
void slurm_init_trigger_msg 191,7460

src/api/job_info.c,800
static void _fname_format(72,2937
extern void slurm_get_job_stderr(116,4108
extern void slurm_get_job_stdin(137,4830
extern void slurm_get_job_stdout(150,5272
extern uint32_t slurm_xlate_job_id(176,6169
slurm_print_job_info_msg 214,7184
static void _sprint_range(229,7607
slurm_print_job_info 262,8530
slurm_sprint_job_info 278,9098
slurm_load_jobs 1069,30834
extern int slurm_load_job_user 1115,32058
slurm_load_job 1162,33290
slurm_pid2jobid 1206,34347
extern long slurm_get_rem_time(1280,36298
extern int32_t islurm_get_rem_time__(1296,36596
extern int32_t islurm_get_rem_time2__(1312,36886
slurm_get_end_time(1331,37320
extern int slurm_job_node_ready(1414,39293
extern int slurm_job_cpus_allocated_on_node_id(1451,40209
extern int slurm_job_cpus_allocated_on_node(1473,40755

src/api/job_step_info.c,651
static int _nodes_in_list(57,2568
static int _sort_pids_by_name(65,2746
static int _sort_stats_by_name(83,3097
slurm_print_job_step_info_msg 102,3687
slurm_print_job_step_info 130,4561
slurm_sprint_job_step_info 147,5175
slurm_get_job_steps 313,10082
slurm_job_step_layout_get(354,11089
extern int slurm_job_step_stat(395,11987
extern int slurm_job_step_get_pids(510,15087
extern void slurm_job_step_layout_free(608,18211
extern void slurm_job_step_pids_free(613,18320
extern void slurm_job_step_pids_response_msg_free(618,18422
extern void slurm_job_step_stat_free(629,18703
extern void slurm_job_step_stat_response_msg_free(634,18805

src/api/license_info.c,29
slurm_load_licenses(73,2898

src/api/node_info.c,229
slurm_print_node_info_msg 77,3118
slurm_print_node_table 106,4027
slurm_sprint_node_table 125,4707
extern int slurm_load_node 410,12861
extern int slurm_load_node_single 456,14098
extern int slurm_get_node_energy(501,15340

src/api/partition_info.c,202
void slurm_print_partition_info_msg 63,2878
void slurm_print_partition_info 88,3697
char *slurm_sprint_partition_info slurm_sprint_partition_info105,4310
extern int slurm_load_partitions 436,13256

src/api/pmi.c,2195
#  define _GNU_SOURCE85,4397
#define KVS_STATE_LOCAL 103,4752
#define KVS_STATE_DEFUNCT 104,4781
#define KVS_KEY_STATE_GLOBAL 106,4811
#define KVS_KEY_STATE_LOCAL 107,4844
struct kvs_rec 110,4941
	char *		kvs_name;111,4958
	uint16_t	kvs_state;112,4977
	uint32_t	kvs_cnt;113,5020
	uint16_t	kvs_inx;114,5064
	uint16_t *	kvs_key_states;115,5105
	char **		kvs_keys;116,5159
	char **		kvs_values;117,5179
#define _DEBUG 120,5205
#  undef pmi_nomem_error123,5256
	static void pmi_nomem_error(127,5412
long pmi_jobid;144,5967
long pmi_stepid;145,5983
int pmi_init 147,6001
int pmi_size;148,6019
int pmi_spawned;149,6033
int pmi_rank;150,6050
int pmi_debug;151,6064
static int pmi_kvs_no_dup_keys 152,6079
static pthread_mutex_t kvs_mutex 154,6116
int kvs_rec_cnt 156,6179
struct kvs_rec *kvs_recs;kvs_recs157,6200
int kvs_name_sequence 158,6226
static char *pmi_opt_str pmi_opt_str160,6254
int PMI_Init(187,6901
int PMI_Initialized(278,8670
int PMI_Finalize(305,9146
static void _del_kvs_rec(326,9501
int PMI_Get_size(360,10212
int PMI_Get_rank(389,10832
int PMI_Get_universe_size(418,11411
int PMI_Get_appnum(445,11927
int PMI_Publish_name(473,12510
int PMI_Unpublish_name(498,13059
int PMI_Lookup_name(526,13662
int PMI_Get_id(559,14536
int PMI_Get_kvs_domain_id(596,15489
int PMI_Get_id_length_max(627,16218
int PMI_Barrier(652,16765
int PMI_Get_clique_size(712,18306
int PMI_Get_clique_ranks(766,19576
int PMI_Abort(817,20592
int PMI_KVS_Get_my_name(861,21786
static void _init_kvs(883,22264
int PMI_KVS_Get_name_length_max(925,23623
int PMI_KVS_Get_key_length_max(952,24218
int PMI_KVS_Get_value_length_max(980,24840
int PMI_KVS_Create(1015,25812
int PMI_KVS_Destroy(1056,26696
int PMI_KVS_Put(1105,28088
static int _kvs_put(1120,28559
int PMI_KVS_Commit(1214,31339
static void _kvs_swap(1306,34137
int PMI_KVS_Get(1347,35198
int PMI_KVS_Iter_first(1419,37304
int PMI_KVS_Iter_next(1496,39607
int PMI_Spawn_multiple(1583,42593
int PMI_Parse_option(1634,44448
int PMI_Args_to_keyval(1752,47257
int PMI_Free_keyvals(1856,49559
int PMI_Get_options(1903,50596
static int IsPmiKey(1924,50996
inline static void _kvs_dump(1940,51268

src/api/pmi_server.c,1567
#define _DEBUG 47,1819
#define _DEBUG_TIMING 48,1883
static pthread_mutex_t kvs_mutex 50,1949
static int kvs_comm_cnt 51,2011
static int kvs_updated 52,2040
static struct kvs_comm **kvs_comm_ptr kvs_comm_ptr53,2068
static int min_time_kvs_put 57,2218
static int max_time_kvs_put 58,2257
static int tot_time_kvs_put 59,2290
static int pmi_kvs_no_dup_keys 61,2324
struct barrier_resp 63,2361
	uint16_t port;64,2383
	char *hostname;hostname65,2399
struct barrier_resp *barrier_ptr barrier_ptr67,2467
uint32_t barrier_resp_cnt 68,2508
uint32_t barrier_cnt 69,2574
pthread_mutex_t agent_mutex 71,2638
pthread_cond_t  agent_cond 72,2695
struct agent_arg 73,2751
	struct barrier_resp *barrier_xmit_ptr;barrier_xmit_ptr74,2770
	int barrier_xmit_cnt;75,2810
	struct kvs_comm **kvs_xmit_ptr;kvs_xmit_ptr76,2833
	int kvs_xmit_cnt;77,2866
struct msg_arg 79,2931
	struct barrier_resp *bar_ptr;bar_ptr80,2948
	struct kvs_comm_set *kvs_ptr;kvs_ptr81,2979
int agent_cnt 83,3013
int agent_max_cnt 84,3071
static void _kvs_xmit_tasks(101,3810
static void *_msg_thread(_msg_thread145,4970
static void *_agent(_agent182,5996
struct kvs_comm **_kvs_comm_dup(_kvs_comm_dup303,9891
static struct kvs_comm *_find_kvs_by_name(_find_kvs_by_name339,10954
static void _merge_named_kvs(351,11159
static void _move_kvs(390,12251
static void _print_kvs(398,12453
extern int pmi_kvs_put(414,12753
extern int pmi_kvs_get(458,13912
extern void pmi_server_max_threads(526,15943
static void _free_kvs_comm(535,16151
extern void pmi_kvs_free(554,16561

src/api/pmi_server.h,30
#define _PMI_SERVER_H30,1430

src/api/reconfigure.c,230
slurm_reconfigure 66,2788
slurm_ping 90,3227
slurm_shutdown 120,3956
slurm_takeover 145,4667
_send_message_controller 156,4861
slurm_set_debugflags 200,6224
slurm_set_debug_level 238,7219
slurm_set_schedlog_level 275,8132

src/api/reservation_info.c,211
void slurm_print_reservation_info_msg 61,2743
void slurm_print_reservation_info 86,3578
char *slurm_sprint_reservation_info slurm_sprint_reservation_info103,4203
extern int slurm_load_reservations 169,6146

src/api/signal.c,353
static int _local_send_recv_rc_msgs(58,2534
static int _signal_batch_script_step(86,3205
static int _signal_job_step(121,4130
static int _terminate_batch_script_step(137,4574
static int _terminate_job_step(181,5705
slurm_signal_job 211,6505
slurm_signal_job_step 246,7464
slurm_terminate_job_step 304,9150
extern int slurm_notify_job 360,10630

src/api/slurm_get_statistics.c,84
extern int slurm_reset_statistics(49,2240
extern int slurm_get_statistics(82,2907

src/api/slurm_hostlist.c,537
extern int slurm_hostlist_count(49,2376
extern hostlist_t slurm_hostlist_create(54,2462
extern void slurm_hostlist_destroy(59,2558
extern int slurm_hostlist_find(65,2645
extern int slurm_hostlist_push(70,2755
extern int slurm_hostlist_push_host(75,2859
extern ssize_t slurm_hostlist_ranged_string(80,2971
extern char * slurm_hostlist_ranged_string_malloc(85,3100
extern char * slurm_hostlist_ranged_string_xmalloc(90,3213
extern char *slurm_hostlist_shift(slurm_hostlist_shift95,3328
extern void slurm_hostlist_uniq(100,3410

src/api/slurm_pmi.c,493
#define DEFAULT_PMI_TIME 54,2536
#define MAX_RETRIES 55,2565
int pmi_fd 57,2593
int pmi_time 58,2610
uint16_t srun_port 59,2628
slurm_addr_t srun_addr;60,2652
static void _delay_rpc(70,3080
static int _get_addr(125,4661
static void _set_pmi_time(142,5016
int slurm_send_kvs_comm_set(163,5387
int  slurm_get_kvs_comm_set(212,6880
static int _forward_comm_set(331,10431
static void _free_kvs_comm(361,11265
void slurm_free_kvs_comm_set(379,11676
void slurm_pmi_finalize(397,12095

src/api/slurm_pmi.h,638
#define _SLURM_PMI_H40,2188
#define PMI_MAX_ID_LEN 57,2510
#define PMI_MAX_KEY_LEN 58,2585
#define PMI_MAX_KVSNAME_LEN 59,2649
#define PMI_MAX_VAL_LEN 60,2712
struct kvs_hosts 62,2780
	uint32_t	task_id;63,2799
	uint16_t	port;64,2843
	char *		hostname;65,2885
struct kvs_comm 67,2932
	char *		kvs_name;68,2950
	uint32_t	kvs_cnt;69,2969
	char **		kvs_keys;70,3013
	char **		kvs_values;71,3033
	uint16_t *	kvs_key_sent;72,3055
struct kvs_comm_set 74,3084
	uint16_t	host_cnt;76,3107
	struct kvs_hosts *kvs_host_ptr;kvs_host_ptr77,3160
 	uint16_t	kvs_comm_recs;78,3220
	struct kvs_comm **kvs_comm_ptr;kvs_comm_ptr79,3278

src/api/step_ctx.c,542
int step_signals[step_signals72,2964
static int destroy_step 75,3074
static void _signal_while_allocating(77,3104
_job_fake_cred(87,3254
static job_step_create_request_msg_t *_create_step_request(_create_step_request118,4204
slurm_step_ctx_create 158,5870
slurm_step_ctx_create_timeout 215,7597
slurm_step_ctx_create_no_alloc 300,10170
slurm_step_ctx_get 374,12323
slurm_jobinfo_ctx_get(481,15425
slurm_step_ctx_destroy 498,15854
slurm_step_ctx_daemon_per_node_hack(527,16884
extern void slurm_step_ctx_params_t_init 585,18660

src/api/step_ctx.h,392
#define _STEP_CTX_H31,1467
#define STEP_CTX_MAGIC 44,1640
struct slurm_step_ctx_struct 46,1671
	uint16_t magic;47,1702
	uint32_t job_id;49,1739
	uint32_t user_id;50,1779
	job_step_create_request_msg_t *step_req;step_req52,1826
	job_step_create_response_msg_t *step_resp;step_resp53,1868
	struct step_launch_state *launch_state;launch_state56,1948
	uint16_t verbose_level;57,1989

src/api/step_io.c,2492
#define MAX_RETRIES 65,2312
#define STDIO_MAX_FREE_BUF 66,2334
struct io_buf 68,2367
	int ref_count;69,2383
	uint32_t length;70,2399
	void *data;data71,2417
	io_hdr_t header;72,2430
typedef struct kill_thread 75,2452
	pthread_t thread_id;76,2481
	int       secs;77,2503
} kill_thread_t;78,2520
struct io_operations listening_socket_ops 98,3297
struct io_operations server_ops 111,3805
struct server_io_info 118,3972
	client_io_t *cio;cio119,3996
	int node_id;120,4015
	bool testing_connection;121,4029
	struct slurm_io_header header;124,4082
	struct io_buf *in_msg;in_msg125,4114
	int32_t in_remaining;126,4138
	bool in_eof;127,4161
	int remote_stdout_objs;128,4175
	int remote_stderr_objs;129,4244
	List msg_queue;132,4340
	struct io_buf *out_msg;out_msg133,4357
	int32_t out_remaining;134,4382
	bool out_eof;135,4406
struct io_operations file_write_ops 144,4693
struct file_write_info 149,4798
	client_io_t *cio;cio150,4823
	List msg_queue;153,4869
	struct io_buf *out_msg;out_msg154,4886
	int32_t out_remaining;155,4911
	uint32_t taskid;158,5067
	uint32_t nodeid;159,5085
	bool eof;160,5103
struct io_operations file_read_ops 169,5384
struct file_read_info 174,5486
	client_io_t *cio;cio175,5510
	struct slurm_io_header header;178,5579
	uint32_t nodeid;179,5611
	bool eof;181,5630
_listening_socket_readable(189,5833
_listening_socket_read(204,6095
_set_listensocks_nonblocking(215,6300
_create_server_eio_obj(226,6635
_server_readable(252,7329
_server_read(291,8089
_server_writable(431,11873
_server_write(457,12367
create_file_write_eio_obj(528,14269
static bool _file_writable(550,14781
static int _file_write(564,15106
create_file_read_eio_obj(624,16777
static bool _file_readable(650,17438
static int _file_read(683,18164
_io_thr_internal(787,21150
_create_listensock_eio(814,21714
_read_io_init_msg(824,21881
_is_fd_ready(877,23505
_handle_io_init_msg(892,23702
_wid(948,24970
_alloc_io_buf(958,25100
_free_io_buf(980,25529
_init_stdio_eio_objs(991,25653
_incoming_buf_free(1033,26799
_outgoing_buf_free(1051,27141
_estimate_nports(1070,27490
client_io_handler_create(1078,27643
client_io_handler_start(1157,29888
static void *_kill_thr(_kill_thr1181,30436
static void _delay_kill_thread(1193,30664
client_io_handler_finish(1216,31269
client_io_handler_destroy(1232,31570
client_io_handler_downnodes(1251,32059
client_io_handler_abort(1288,32956
int client_io_handler_send_test_message(1315,33695

src/api/step_io.h,850
#define _HAVE_STEP_IO_H29,1445
struct client_io 43,1699
	int num_tasks;45,1769
	int num_nodes;46,1785
	bool label;47,1801
	int label_width;48,1814
	char *io_key;io_key49,1832
	pthread_t ioid;52,1874
	int num_listen;53,1918
	int *listensock;listensock54,1973
	uint16_t *listenport;listenport55,2028
	eio_handle_t *eio;eio57,2093
	pthread_mutex_t ioservers_lock;58,2158
	bitstr_t *ioservers_ready_bits;ioservers_ready_bits66,2506
	int ioservers_ready;67,2564
	eio_obj_t **ioserver;ioserver68,2638
	eio_obj_t *stdin_obj;stdin_obj69,2705
	eio_obj_t *stdout_obj;stdout_obj70,2728
	eio_obj_t *stderr_obj;stderr_obj71,2752
	List free_incoming;72,2776
	List free_outgoing;76,2932
	int incoming_count;80,3087
	int outgoing_count;84,3250
	struct step_launch_state *sls;sls89,3414
typedef struct client_io client_io_t;93,3518

src/api/step_launch.c,1676
#define STEP_ABORT_TIME 86,3261
static pid_t  srun_ppid 103,3962
static uid_t  slurm_uid;104,3999
static bool   force_terminated_job 105,4024
static int    task_exit_signal 106,4068
static struct io_operations message_socket_ops 115,4511
void slurm_step_launch_params_t_init 133,5135
extern int slurm_mpi_plugin_init(152,5758
int slurm_step_launch 163,6108
int slurm_step_launch_add 363,13064
static void _step_abort(499,17564
int slurm_step_launch_wait_start(513,17867
void slurm_step_launch_wait_finish(572,19380
void slurm_step_launch_abort(697,23096
void slurm_step_launch_fwd_signal(710,23396
struct step_launch_state *step_launch_state_create(step_launch_state_create814,26156
void step_launch_state_alter(861,27699
void step_launch_state_destroy(892,28694
static int _connect_srun_cr(913,29346
static int _cr_notify_step_launch(942,29947
static void *_msg_thr_internal(_msg_thr_internal987,31195
_estimate_nports(997,31381
static int _msg_thr_create(1004,31520
_launch_handler(1056,33189
_exit_handler(1091,34147
_job_complete_handler(1126,35062
_timeout_handler(1150,35677
_node_fail_handler(1170,36262
_step_missing_handler(1241,38400
_step_step_signal(1380,42330
_task_user_managed_io_handler(1403,43282
_handle_msg(1434,44161
static int _fail_step_tasks(1530,46965
static int _launch_tasks(1565,47830
static char *_lookup_cwd(_lookup_cwd1646,49975
static void _print_launch_msg(1657,50122
void record_ppid(1680,50791
_exec_prog(1688,50957
step_launch_notify_io_failure(1784,53319
step_launch_clear_questionable_state(1829,54506
_start_io_timeout_thread(1839,54735
_check_io_timeout(1859,55173
_valid_uid_gid(1912,56555

src/api/step_launch.h,1199
#define _STEP_LAUNCH_H42,2256
	int connected;62,2599
	int *sockets;sockets63,2615
} user_managed_io_t;64,2669
struct step_launch_state 66,2691
	pthread_mutex_t lock;71,2939
	pthread_cond_t cond;72,2962
	int tasks_requested;73,2984
	bitstr_t *tasks_started;tasks_started74,3006
	bitstr_t *tasks_exited;tasks_exited75,3072
	bitstr_t *node_io_error;node_io_error76,3131
	pthread_t io_timeout_thread;77,3198
	bool	  io_timeout_thread_created;78,3228
	time_t   *io_deadline;io_deadline79,3263
	int	 io_timeout;83,3471
	bool	 halt_io_test;84,3528
	bool abort;86,3614
	bool abort_action_taken;87,3627
	eio_handle_t *msg_handle;msg_handle90,3686
	pthread_t msg_thread;91,3713
	int slurmctld_socket_fd;94,3817
	uint16_t num_resp_port;95,3843
	uint16_t *resp_port;resp_port96,3868
	bool user_managed_io;99,3949
		client_io_t *normal;normal101,3981
		user_managed_io_t *user;user102,4004
	} io;103,4031
	slurm_step_layout_t *layout;layout105,4039
	mpi_plugin_client_info_t mpi_info[mpi_info107,4126
	mpi_plugin_client_state_t *mpi_state;mpi_state108,4165
	slurm_step_launch_callbacks_t callback;111,4238
typedef struct step_launch_state step_launch_state_t;113,4282

src/api/submit.c,32
slurm_submit_batch_job 66,2828

src/api/suspend.c,134
static int _suspend_op 55,2590
extern int slurm_suspend 79,3104
extern int slurm_resume 89,3349
extern int slurm_requeue(100,3613

src/api/topo_info.c,130
extern int slurm_load_topo(70,2865
extern void slurm_print_topo_info_msg(111,3928
extern void slurm_print_topo_record(139,4736

src/api/triggers.c,158
extern int slurm_set_trigger 59,2563
extern int slurm_clear_trigger 87,3113
extern int slurm_get_triggers 116,3737
extern int slurm_pull_trigger 156,4647

src/api/update_config.c,380
slurm_update_front_end 63,2803
slurm_update_job 75,3216
slurm_update_node 87,3561
slurm_create_partition 98,3901
slurm_update_partition 110,4278
slurm_delete_partition 122,4637
slurm_create_reservation 134,5036
extern int slurm_update_reservation 172,6041
slurm_delete_reservation 184,6417
slurm_update_block 196,6792
slurm_update_step 205,7053
_slurm_update 212,7250

src/sshare/process.c,309
extern int process(45,2254
		PRINT_ACCOUNT,63,2639
		PRINT_CLUSTER,64,2656
		PRINT_CPUMINS,65,2673
		PRINT_EUSED,66,2690
		PRINT_FSFACTOR,67,2705
		PRINT_ID,68,2723
		PRINT_NORMS,69,2735
		PRINT_NORMU,70,2750
		PRINT_RAWS,71,2765
		PRINT_RAWU,72,2779
		PRINT_RUNMINS,73,2793
		PRINT_USER,74,2810

src/sshare/sshare.c,440
#define BUFFER_SIZE 45,2284
#define OPT_LONG_HELP 46,2309
#define OPT_LONG_USAGE 47,2338
int exit_code;49,2368
int quiet_flag;50,2438
int long_flag;51,2491
int verbosity;52,2555
uint32_t my_uid 53,2597
List clusters 54,2618
main 64,2942
static int _get_info(246,7306
static int _addto_name_char_list(282,8184
static char *_convert_to_name(_convert_to_name371,10036
static void _print_version(393,10449
void _usage 406,10781

src/sshare/sshare.h,204
#define __SSHARE_H__41,2225
#define CKPT_WAIT	87,3066
#define	MAX_INPUT_FIELDS 88,3087
	SSHARE_TIME_SECS,91,3132
	SSHARE_TIME_MINS,92,3151
	SSHARE_TIME_HOURS,93,3170
} sshare_time_format_t;94,3190

src/salloc/opt.c,3688
#  define _GNU_SOURCE51,2387
#define OPT_NONE 95,3527
#define OPT_INT 96,3556
#define OPT_STRING 97,3585
#define OPT_DEBUG 98,3614
#define OPT_NODES 99,3643
#define OPT_BOOL 100,3672
#define OPT_CORE 101,3701
#define OPT_CONN_TYPE	102,3730
#define OPT_NO_ROTATE	103,3757
#define OPT_GEOMETRY	104,3784
#define OPT_BELL 105,3810
#define OPT_NO_BELL 106,3839
#define OPT_JOBID 107,3868
#define OPT_EXCLUSIVE 108,3897
#define OPT_OVERCOMMIT 109,3926
#define OPT_ACCTG_FREQ 110,3955
#define OPT_CPU_BIND 111,3984
#define OPT_MEM_BIND 112,4013
#define OPT_IMMEDIATE 113,4042
#define OPT_WCKEY 114,4071
#define OPT_SIGNAL 115,4100
#define OPT_KILL_CMD 116,4129
#define OPT_TIME_VAL	117,4158
#define OPT_PROFILE 118,4184
#define OPT_CORE_SPEC 119,4213
#define LONG_OPT_CPU_BIND 122,4312
#define LONG_OPT_MEM_BIND 123,4347
#define LONG_OPT_JOBID 124,4382
#define LONG_OPT_TMP 125,4417
#define LONG_OPT_MEM 126,4452
#define LONG_OPT_MINCPU 127,4487
#define LONG_OPT_CONT 128,4522
#define LONG_OPT_UID 129,4557
#define LONG_OPT_GID 130,4592
#define LONG_OPT_MINSOCKETS 131,4627
#define LONG_OPT_MINCORES 132,4662
#define LONG_OPT_MINTHREADS 133,4697
#define LONG_OPT_CORE	134,4732
#define LONG_OPT_CONNTYPE 135,4765
#define LONG_OPT_EXCLUSIVE 136,4800
#define LONG_OPT_BEGIN 137,4835
#define LONG_OPT_MAIL_TYPE 138,4870
#define LONG_OPT_MAIL_USER 139,4905
#define LONG_OPT_NICE 140,4940
#define LONG_OPT_BELL 141,4975
#define LONG_OPT_NO_BELL 142,5010
#define LONG_OPT_COMMENT 143,5045
#define LONG_OPT_REBOOT 144,5080
#define LONG_OPT_BLRTS_IMAGE 145,5115
#define LONG_OPT_LINUX_IMAGE 146,5154
#define LONG_OPT_MLOADER_IMAGE 147,5193
#define LONG_OPT_RAMDISK_IMAGE 148,5232
#define LONG_OPT_NOSHELL 149,5271
#define LONG_OPT_GET_USER_ENV 150,5310
#define LONG_OPT_NETWORK 151,5349
#define LONG_OPT_QOS 152,5388
#define LONG_OPT_SOCKETSPERNODE 153,5427
#define LONG_OPT_CORESPERSOCKET 154,5466
#define LONG_OPT_THREADSPERCORE 155,5505
#define LONG_OPT_NTASKSPERNODE 156,5544
#define LONG_OPT_NTASKSPERSOCKET 157,5583
#define LONG_OPT_NTASKSPERCORE 158,5622
#define LONG_OPT_MEM_PER_CPU 159,5661
#define LONG_OPT_HINT 160,5700
#define LONG_OPT_ACCTG_FREQ 161,5739
#define LONG_OPT_WCKEY 162,5778
#define LONG_OPT_RESERVATION 163,5817
#define LONG_OPT_SIGNAL 164,5856
#define LONG_OPT_TIME_MIN 165,5895
#define LONG_OPT_GRES 166,5934
#define LONG_OPT_WAIT_ALL_NODES 167,5973
#define LONG_OPT_REQ_SWITCH 168,6012
#define LONG_OPT_PROFILE 169,6051
opt_t opt;172,6140
int error_exit 173,6151
int immediate_exit 174,6171
typedef struct env_vars env_vars_t;178,6253
int initialize_and_process_args(205,6943
static bool _valid_node_list(228,7387
#undef USE_ARGERROR251,8018
static void argerror(253,8055
static void argerror(255,8141
#  define argerror 268,8374
static void _opt_default(274,8507
struct env_vars 384,11222
	const char *var;var385,11240
	int type;386,11258
	void *arg;arg387,11269
	void *set_flag;set_flag388,11281
env_vars_t env_vars[env_vars391,11302
static void _opt_env(429,13793
_process_env_var(443,13984
_get_int(592,17190
void set_options(609,17529
static void _proc_get_user_env(1194,34749
static void _opt_args(1216,35270
static char *_get_shell(_get_shell1243,35984
static int _salloc_default_command 1255,36232
static bool _opt_verify(1285,36863
extern char *spank_get_job_env(spank_get_job_env1612,46306
extern int   spank_set_job_env(1637,46784
extern int   spank_unset_job_env(1672,47555
static char *print_constraints(print_constraints1706,48336
#define tf_(1737,49005
static void _opt_list(1739,49052
static void _usage(1851,52970
static void _help(1887,54568

src/salloc/opt.h,3092
#define _HAVE_OPT_H42,2299
#  define SYSTEM_DIMENSIONS 56,2537
#define DEFAULT_IMMEDIATE	59,2575
#define DEFAULT_BELL_DELAY	60,2603
typedef enum {BELL_NEVER,BELL_NEVER62,2634
typedef enum {BELL_NEVER, BELL_AFTER_DELAY,62,2634
typedef enum {BELL_NEVER, BELL_AFTER_DELAY, BELL_ALWAYS}BELL_ALWAYS62,2634
typedef enum {BELL_NEVER, BELL_AFTER_DELAY, BELL_ALWAYS} bell_flag_t;62,2634
typedef struct salloc_options 64,2705
	char *progname;progname66,2738
	char* user;68,2829
	uid_t uid;69,2865
	gid_t gid;70,2896
	uid_t euid;71,2927
	gid_t egid;72,2973
	int  ntasks;74,3022
	bool ntasks_set;75,3065
	int  cpus_per_task;76,3119
	bool cpus_set;77,3170
	int  min_nodes;78,3230
	int  max_nodes;79,3276
	bool nodes_set;80,3326
	int sockets_per_node;81,3379
	int cores_per_socket;82,3430
	int threads_per_core;83,3481
	int ntasks_per_node;84,3532
	int ntasks_per_socket;85,3581
	int ntasks_per_core;86,3633
	cpu_bind_type_t cpu_bind_type;87,3682
	char *cpu_bind;cpu_bind88,3742
	mem_bind_type_t mem_bind_type;89,3795
	char *mem_bind;mem_bind90,3846
	bool extra_set;91,3899
	int  time_limit;92,3962
	char *time_limit_str;time_limit_str93,4013
	int  time_min;94,4064
	char *time_min_str;time_min_str95,4113
	char *partition;partition96,4161
	uint32_t profile;97,4210
		distribution;99,4287
        uint32_t plane_size;100,4334
	char *job_name;job_name103,4458
	unsigned int jobid;104,4507
	char *dependency;dependency105,4549
	int nice;106,4602
	char *account;account107,4629
	char *comment;comment108,4676
	char *qos;qos109,4711
	int immediate;110,4738
	uint16_t warn_flags;111,4783
	uint16_t warn_signal;112,4839
	uint16_t warn_time;113,4896
	bool hold;115,4952
	bool no_kill;116,4984
	char *acctg_freq;acctg_freq117,5021
	char *licenses;licenses119,5106
	bool overcommit;120,5146
	int kill_command_signal;121,5187
	bool kill_command_signal_set;122,5247
	uint16_t shared;123,5278
	int  quiet;124,5317
	int  verbose;125,5330
	int mincpus;128,5372
	int mem_per_cpu;129,5407
	int realmem;130,5448
	long tmpdisk;131,5479
	char *constraints;constraints132,5511
	char *gres;gres133,5566
	bool contiguous;134,5595
	char *nodelist;nodelist135,5634
	char *exc_nodes;exc_nodes136,5685
	char *network;network137,5738
	uint16_t geometry[geometry140,5800
	bool reboot;141,5861
	bool no_rotate;142,5893
	uint16_t conn_type[conn_type143,5934
	char *blrtsimage;blrtsimage144,5994
	char *linuximage;linuximage145,6060
	char *mloaderimage;mloaderimage146,6126
	char *ramdiskimage;ramdiskimage147,6196
	time_t begin;150,6292
	uint16_t mail_type;151,6324
	char *mail_user;mail_user152,6365
	bell_flag_t bell;153,6403
	bool no_shell;154,6463
	int get_user_env_time;155,6515
	int get_user_env_mode;156,6567
	char *cwd;cwd157,6620
	char *reservation;reservation158,6665
	uint16_t wait_all_nodes;159,6706
	char *wckey;wckey160,6762
	int req_switch;161,6831
	int wait4switch;162,6882
	char **spank_job_env;spank_job_env163,6948
	int spank_job_env_size;165,7040
	int core_spec;166,7093
} opt_t;167,7141

src/salloc/salloc.c,2755
#define HASH_RECS	93,3500
#define MAX_RETRIES	94,3522
#define POLL_SLEEP	95,3545
char **command_argv;command_argv97,3600
int command_argc;98,3621
pid_t command_pid 99,3639
char *work_dir work_dir100,3663
static int is_interactive;101,3686
enum possible_allocation_states allocation_state 103,3714
pthread_cond_t  allocation_state_cond 104,3778
pthread_mutex_t allocation_state_lock 105,3844
static bool exit_flag 107,3912
static bool suspend_flag 108,3943
static bool allocation_interrupted 109,3977
static uint32_t pending_job_id 110,4021
static time_t last_timeout 111,4057
static struct termios saved_tty_attributes;112,4089
bool salloc_shutdown 140,5158
int sig_array[sig_array142,5259
static void _reset_input_mode 147,5348
int main(162,5894
	slurm_init_job_desc_msg(&desc)desc287,9343
	callbacks.ping ping298,9557
	callbacks.timeout timeout299,9590
	callbacks.job_complete job_complete300,9629
	callbacks.job_suspend job_suspend301,9678
	callbacks.user_msg user_msg302,9725
	callbacks.node_fail node_fail303,9766
	msg_thr 305,9878
	for (i = 0; sig_array[sig_array310,10101
	before 313,10185
	after 374,11818
	pthread_mutex_lock(&allocation_state_lock)allocation_state_lock420,13068
	allocation_state 432,13505
	pthread_cond_broadcast(&allocation_state_cond)allocation_state_cond433,13534
	pthread_mutex_unlock(&allocation_state_lock)allocation_state_lock434,13583
	pthread_mutex_lock(&allocation_state_lock)allocation_state_lock451,14015
	command_pid 454,14148
	pthread_cond_broadcast(&allocation_state_cond)allocation_state_cond455,14192
	pthread_mutex_unlock(&allocation_state_lock)allocation_state_lock456,14241
	pthread_mutex_lock(&allocation_state_lock)allocation_state_lock485,15149
	pthread_cond_broadcast(&allocation_state_cond)allocation_state_cond497,15602
	pthread_mutex_unlock(&allocation_state_lock)allocation_state_lock498,15651
	rc 507,15928
static void _set_exit_code(536,16537
static void _set_spank_env(559,16978
static void _set_submit_dir_env(573,17309
static int _fill_job_desc_from_opts(590,17850
static void _ring_terminal_bell(758,22796
static pid_t _fork_command(767,23017
static void _pending_callback(801,23811
static void _exit_on_signal(807,23933
static void _forward_signal(813,24021
static void _signal_while_allocating(819,24117
static void _job_complete_handler(828,24343
static void _job_suspend_handler(899,26379
static void _timeout_handler(916,26960
static void _user_msg_handler(925,27181
static void _ping_handler(930,27261
static void _node_fail_handler(936,27388
static void _set_rlimits(941,27496
static int _wait_bluegene_block_ready(980,28498
static int _blocks_dealloc(1040,30072
static int _wait_nodes_ready(1075,30991

src/salloc/salloc.h,281
#define _HAVE_SALLOC_H42,2292
enum possible_allocation_states 51,2440
enum possible_allocation_states {NOT_GRANTED,NOT_GRANTED51,2440
enum possible_allocation_states {NOT_GRANTED, GRANTED,51,2440
enum possible_allocation_states {NOT_GRANTED, GRANTED, REVOKED}REVOKED51,2440

src/sbatch/mult_cluster.c,393
	slurmdb_cluster_rec_t *cluster_rec;cluster_rec46,2339
	int preempt_cnt;47,2376
	time_t start_time;48,2394
} local_cluster_rec_t;49,2414
static char *local_cluster_name;local_cluster_name51,2438
void _destroy_local_cluster_rec(53,2505
static int _sort_local_cluster(58,2572
local_cluster_rec_t *_job_will_run _job_will_run85,3284
extern int sbatch_set_first_avail_cluster(155,5301

src/sbatch/mult_cluster.h,37
#define _HAVE_MULT_CLUSTER_H40,2189

src/sbatch/opt.c,4832
#  define _GNU_SOURCE51,2387
#define OPT_NONE 93,3451
#define OPT_INT 94,3480
#define OPT_STRING 95,3509
#define OPT_DEBUG 96,3538
#define OPT_NODES 97,3567
#define OPT_BOOL 98,3596
#define OPT_CORE 99,3625
#define OPT_CONN_TYPE	100,3654
#define OPT_DISTRIB	101,3681
#define OPT_NO_ROTATE	102,3706
#define OPT_GEOMETRY	103,3733
#define OPT_MULTI	104,3759
#define OPT_EXCLUSIVE	105,3782
#define OPT_OVERCOMMIT	106,3809
#define OPT_OPEN_MODE	107,3837
#define OPT_ACCTG_FREQ 108,3864
#define OPT_NO_REQUEUE 109,3893
#define OPT_REQUEUE 110,3922
#define OPT_CPU_BIND 111,3951
#define OPT_MEM_BIND 112,3980
#define OPT_WCKEY 113,4009
#define OPT_SIGNAL 114,4038
#define OPT_GET_USER_ENV 115,4067
#define OPT_EXPORT 116,4098
#define OPT_CLUSTERS 117,4129
#define OPT_TIME_VAL 118,4160
#define OPT_CORE_SPEC 119,4191
#define OPT_ARRAY_INX 120,4222
#define OPT_PROFILE 121,4253
#define LONG_OPT_PROPAGATE 124,4354
#define LONG_OPT_CPU_BIND 125,4389
#define LONG_OPT_MEM_BIND 126,4424
#define LONG_OPT_JOBID 127,4459
#define LONG_OPT_TMP 128,4494
#define LONG_OPT_MEM 129,4529
#define LONG_OPT_MINCPU 130,4564
#define LONG_OPT_CONT 131,4599
#define LONG_OPT_UID 132,4634
#define LONG_OPT_GID 133,4669
#define LONG_OPT_MINSOCKETS 134,4704
#define LONG_OPT_MINCORES 135,4739
#define LONG_OPT_MINTHREADS 136,4774
#define LONG_OPT_CORE	137,4809
#define LONG_OPT_CONNTYPE 138,4842
#define LONG_OPT_EXCLUSIVE 139,4877
#define LONG_OPT_BEGIN 140,4912
#define LONG_OPT_MAIL_TYPE 141,4947
#define LONG_OPT_MAIL_USER 142,4982
#define LONG_OPT_NICE 143,5017
#define LONG_OPT_NO_REQUEUE 144,5052
#define LONG_OPT_COMMENT 145,5087
#define LONG_OPT_WRAP 146,5122
#define LONG_OPT_REQUEUE 147,5157
#define LONG_OPT_NETWORK 148,5192
#define LONG_OPT_QOS 149,5227
#define LONG_OPT_SOCKETSPERNODE 150,5266
#define LONG_OPT_CORESPERSOCKET 151,5305
#define LONG_OPT_THREADSPERCORE 152,5344
#define LONG_OPT_NTASKSPERNODE 153,5383
#define LONG_OPT_NTASKSPERSOCKET 154,5422
#define LONG_OPT_NTASKSPERCORE 155,5461
#define LONG_OPT_MEM_PER_CPU 156,5500
#define LONG_OPT_HINT 157,5539
#define LONG_OPT_BLRTS_IMAGE 158,5578
#define LONG_OPT_LINUX_IMAGE 159,5617
#define LONG_OPT_MLOADER_IMAGE 160,5656
#define LONG_OPT_RAMDISK_IMAGE 161,5695
#define LONG_OPT_REBOOT 162,5734
#define LONG_OPT_GET_USER_ENV 163,5773
#define LONG_OPT_OPEN_MODE 164,5812
#define LONG_OPT_ACCTG_FREQ 165,5851
#define LONG_OPT_WCKEY 166,5890
#define LONG_OPT_RESERVATION 167,5929
#define LONG_OPT_CHECKPOINT 168,5968
#define LONG_OPT_CHECKPOINT_DIR 169,6007
#define LONG_OPT_SIGNAL 170,6046
#define LONG_OPT_TIME_MIN 171,6085
#define LONG_OPT_GRES 172,6124
#define LONG_OPT_WAIT_ALL_NODES 173,6163
#define LONG_OPT_EXPORT 174,6202
#define LONG_OPT_REQ_SWITCH 175,6241
#define LONG_OPT_EXPORT_FILE 176,6280
#define LONG_OPT_PROFILE 177,6319
#define LONG_OPT_IGNORE_PBS 178,6358
#define LONG_OPT_TEST_ONLY 179,6397
#define LONG_OPT_PARSABLE 180,6436
opt_t opt;183,6525
int error_exit 184,6536
typedef struct env_vars env_vars_t;188,6614
#undef USE_ARGERROR231,7852
static void argerror(233,7889
static void argerror(235,7975
#  define argerror 248,8208
static bool _valid_node_list(256,8429
static void _opt_default(279,9070
struct env_vars 411,12221
	const char *var;var412,12239
	int type;413,12257
	void *arg;arg414,12268
	void *set_flag;set_flag415,12280
env_vars_t env_vars[env_vars419,12302
static void _opt_env(472,15914
_process_env_var(485,16104
static struct option long_options[long_options645,19520
static char *opt_string opt_string748,25116
char *pos_delimit;pos_delimit750,25210
char *process_options_first_pass(process_options_first_pass768,25815
int process_options_second_pass(861,27804
static char *_next_line(_next_line900,28897
_get_argument(937,29910
static void _opt_batch_script(1001,31205
static void _opt_pbs_batch_script(1065,32762
static void _set_options(1120,33957
static void _proc_get_user_env(1682,47872
static void _set_pbs_options(1701,48327
static char *_get_pbs_node_name(_get_pbs_node_name1865,52385
static void _get_next_pbs_node_part(1884,52725
static void _parse_pbs_nodes_opts(1894,52930
static void _get_next_pbs_option(1946,54109
static char *_get_pbs_option_value(_get_pbs_option_value1954,54266
static void _parse_pbs_resource_list(1970,54573
static bool _opt_verify(2221,61395
static uint16_t _parse_pbs_mail_type(2581,71715
extern char *spank_get_job_env(spank_get_job_env2613,72662
extern int   spank_set_job_env(2638,73140
extern int   spank_unset_job_env(2673,73911
static char *print_constraints(print_constraints2707,74692
_get_int(2754,75714
static void _fullpath(2776,76207
#define tf_(2790,76454
static void _opt_list(2792,76501
static void _usage(2910,80760
static void _help(2948,82558

src/sbatch/opt.h,3399
#define _HAVE_OPT_H42,2297
#  define SYSTEM_DIMENSIONS 57,2572
typedef struct sbatch_options 61,2611
	List clusters;62,2643
	char *progname;progname63,2689
	int script_argc;66,2810
	char **script_argv;script_argv67,2828
	char *user;user69,2850
	uid_t uid;70,2886
	gid_t gid;71,2917
	uid_t euid;72,2948
	gid_t egid;73,2994
	char *cwd;cwd74,3042
	int  ntasks;76,3088
	bool ntasks_set;77,3131
	int  cpus_per_task;78,3185
	bool cpus_set;79,3236
	int  min_nodes;80,3296
	int  max_nodes;81,3342
	bool nodes_set;82,3392
	int sockets_per_node;83,3445
	int cores_per_socket;84,3496
	int threads_per_core;85,3547
	int ntasks_per_node;86,3598
	int ntasks_per_socket;87,3647
	int ntasks_per_core;88,3699
	cpu_bind_type_t cpu_bind_type;89,3748
	char *cpu_bind;cpu_bind90,3808
	mem_bind_type_t mem_bind_type;91,3861
	char *mem_bind;mem_bind92,3912
	bool extra_set;93,3965
	int  time_limit;94,4028
	char *time_limit_str;time_limit_str95,4079
	int  time_min;96,4130
	char *time_min_str;time_min_str97,4179
	char *partition;partition98,4227
	uint32_t profile;99,4276
	        distribution;101,4353
        uint32_t plane_size;102,4407
	char *job_name;job_name105,4531
	unsigned int jobid;106,4580
	bool jobid_set;107,4640
	char *mpi_type;mpi_type108,4693
	char *dependency;dependency109,4730
	int nice;110,4783
	char *account;account111,4810
	char *comment;comment112,4857
	char *propagate;propagate113,4892
	char *qos;qos114,4945
	int immediate;115,4972
	uint16_t warn_flags;116,5017
	uint16_t warn_signal;117,5073
	uint16_t warn_time;118,5130
	bool hold;120,5186
	bool parsable;121,5218
	bool no_kill;122,5254
	int requeue;123,5291
	uint8_t open_mode;124,5339
	char *acctg_freq;acctg_freq125,5379
	bool overcommit;127,5464
	uint16_t shared;128,5505
	char *licenses;licenses129,5544
	char *network;network130,5584
	int  quiet;131,5620
	int  verbose;132,5633
	uint16_t wait_all_nodes;133,5648
	char *wrap;wrap134,5704
	int mincpus;137,5744
	int minsockets;138,5779
	int mincores;139,5819
	int minthreads;140,5856
	int mem_per_cpu;141,5896
	int realmem;142,5937
	long tmpdisk;143,5968
	char *constraints;constraints144,6000
	char *gres;gres145,6055
	bool contiguous;146,6084
	char *nodelist;nodelist147,6123
	char *exc_nodes;exc_nodes148,6174
	uint16_t geometry[geometry151,6253
	bool reboot;152,6314
	bool no_rotate;153,6346
	uint16_t conn_type[conn_type154,6387
	char *blrtsimage;blrtsimage155,6447
	char *linuximage;linuximage156,6513
	char *mloaderimage;mloaderimage157,6579
	char *ramdiskimage;ramdiskimage158,6649
	char *array_inx;array_inx161,6745
	time_t begin;162,6783
	uint16_t mail_type;163,6815
	char *mail_user;mail_user164,6856
	char *ifname;ifname165,6894
	char *ofname;ofname166,6933
	char *efname;efname167,6973
	int get_user_env_time;168,7012
	int get_user_env_mode;169,7067
	char *export_env;export_env170,7126
	char *export_file;export_file171,7162
	char *wckey;wckey172,7208
	char *reservation;reservation173,7277
 	int ckpt_interval;174,7322
 	char *ckpt_interval_str;ckpt_interval_str175,7378
 	char *ckpt_dir;ckpt_dir176,7439
	int req_switch;177,7493
	int wait4switch;178,7546
	char **spank_job_env;spank_job_env179,7612
	int spank_job_env_size;181,7704
	int umask;182,7757
	int core_spec;183,7795
	bool test_only;184,7843
} opt_t;185,7881

src/sbatch/sbatch.c,721
#define MAX_RETRIES 66,2811
int main(80,3358
static char *_find_quote_token(_find_quote_token220,6922
static void _env_merge_filter(267,7966
static int _check_cluster_specific_settings(306,8924
static int _fill_job_desc_from_opts(331,9634
static void _set_exit_code(536,15428
static void _set_spank_env(551,15706
static void _set_submit_dir_env(565,16037
static int _set_umask_env(581,16572
static void  _set_prio_process_env(613,17294
static bool has_shebang(637,17811
static bool contains_null_char(653,18057
static bool contains_dos_linebreak(669,18308
static void *_get_script_buffer(_get_script_buffer687,18643
static char *_script_wrap(_script_wrap763,20458
static int _set_rlimit_env(777,20843

src/scontrol/create_res.c,180
static char * _process_plus_minus(49,2336
static uint32_t _parse_flags(82,2995
scontrol_parse_res_options(185,5796
scontrol_update_res(378,11096
scontrol_create_res(423,12221

src/scontrol/info_block.c,59
scontrol_load_block 43,2253
scontrol_print_block 80,3223

src/scontrol/info_job.c,766
#define POLL_SLEEP	47,2391
_in_node_bit_list(56,2637
scontrol_load_job(76,2975
scontrol_pid_info(135,4526
scontrol_print_completing 169,5277
scontrol_print_completing_job(206,6247
scontrol_get_job_state(247,7442
scontrol_print_job 283,8431
scontrol_print_step 344,10020
static int _parse_jobid(443,12977
static int _parse_stepid(467,13460
_in_task_array(496,14000
_list_pids_one_step(511,14233
_list_pids_all_steps(575,15646
_list_pids_all_jobs(610,16372
scontrol_list_pids(646,17436
scontrol_print_hosts 675,18166
_reformat_hostlist(698,18586
scontrol_encode_hostlist(721,19070
static int _blocks_dealloc(775,20416
static int _wait_bluegene_block_ready(812,21328
static int _wait_nodes_ready(862,22644
extern int scontrol_job_ready(911,23989

src/scontrol/info_lics.c,74
scontrol_print_licenses(52,2465
static void _print_license_info(88,3101

src/scontrol/info_node.c,244
scontrol_load_nodes 44,2321
scontrol_print_node 87,3640
scontrol_print_node_list 133,4748
extern void	scontrol_print_topo 194,6237
scontrol_load_front_end(247,7644
scontrol_print_front_end(289,8920
scontrol_print_front_end_list(332,9956

src/scontrol/info_part.c,63
scontrol_load_partitions 43,2264
scontrol_print_part 86,3449

src/scontrol/info_res.c,64
scontrol_load_reservations(43,2256
scontrol_print_res 82,3221

src/scontrol/scontrol.c,1359
#define OPT_LONG_HIDE 46,2439
char *command_name;command_name48,2470
List clusters 49,2490
int all_flag;50,2512
int detail_flag;51,2564
int exit_code;52,2614
int exit_flag;53,2686
int input_words;54,2735
int one_liner;55,2793
int quiet_flag;56,2841
int verbosity;57,2894
uint32_t cluster_flags;58,2938
block_info_msg_t *old_block_info_ptr old_block_info_ptr60,3008
front_end_info_msg_t *old_front_end_info_ptr old_front_end_info_ptr61,3053
job_info_msg_t *old_job_info_ptr old_job_info_ptr62,3106
node_info_msg_t *old_node_info_ptr old_node_info_ptr63,3147
partition_info_msg_t *old_part_info_ptr old_part_info_ptr64,3190
reserve_info_msg_t *old_res_info_ptr old_res_info_ptr65,3238
slurm_ctl_conf_info_msg_t *old_slurm_ctl_conf_ptr old_slurm_ctl_conf_ptr66,3283
main 88,4186
static void _print_version(233,7546
static char *_getline(_getline250,7916
_get_command 282,8550
_print_config 356,10164
static void _print_slurmd(400,11306
_print_ping 416,11679
_ping_slurmctld(436,12068
_print_daemons 476,13150
_print_aliases 531,14391
static int _reboot_nodes(565,14999
_process_command 603,15741
_create_it 1263,31753
_delete_it 1305,32730
_show_it 1375,34501
_update_it 1484,37589
_update_bluegene_block 1580,40591
_update_bluegene_subbp 1667,42825
static int _update_slurmctld_debug(1743,44699
_usage 1766,45170

src/scontrol/scontrol.h,92
#define __SCONTROL_H__41,2240
#define CKPT_WAIT	94,3285
#define	MAX_INPUT_FIELDS 95,3306

src/scontrol/update_job.c,574
typedef struct job_ids 45,2303
	uint32_t job_id;46,2328
	uint32_t array_job_id;47,2346
	uint32_t array_task_id;48,2370
} job_ids_t;49,2395
scontrol_checkpoint(71,3267
_parse_checkpoint_args(171,6221
_parse_restart_args(193,6712
static uint32_t _get_job_time(214,7226
scontrol_hold(245,7990
scontrol_suspend(320,9865
scontrol_requeue(366,10859
scontrol_requeue_hold(407,11584
scontrol_update_job 474,12969
scontrol_job_notify(920,25155
static void _update_job_size(948,25599
_parse_requeue_flags(1037,28328
_get_job_info(1074,28830
_get_job_ids(1120,29634

src/scontrol/update_node.c,66
scontrol_update_node 52,2541
scontrol_update_front_end 262,8382

src/scontrol/update_part.c,101
scontrol_parse_part_options 45,2370
scontrol_update_part 384,12438
scontrol_create_part 421,13227

src/scontrol/update_step.c,622
#define MAX_RECORD_FIELDS 44,2321
#define BUFFER_SIZE 45,2351
static uint32_t _get_step_time(49,2491
static int _parse_comp_file(73,3156
	enum {	UPDATE_STEP_VERSION,85,3454
		UPDATE_STEP_EXTRA,86,3483
		UPDATE_STEP_INBLOCKS,87,3504
		UPDATE_STEP_OUTBLOCKS,88,3528
		UPDATE_STEP_EXITCODE,89,3553
		UPDATE_STEP_CPU_ALLOC,90,3577
		UPDATE_STEP_START,91,3602
		UPDATE_STEP_END,92,3623
		UPDATE_STEP_USER_SEC,93,3642
		UPDATE_STEP_SYS_SEC,94,3666
		UPDATE_STEP_MAX_RSS,95,3689
		UPDATE_STEP_UID,96,3712
		UPDATE_STEP_STEPNAME,97,3731
		UPDATE_STEP_VER1_LENGTH98,3755
extern int scontrol_update_step 171,5555

src/sbcast/agent.c,413
#define MAX_RETRIES 64,2813
#define MAX_THREADS 65,2840
typedef struct thd 67,2944
	pthread_t thread;68,2965
	slurm_msg_t msg;69,3000
	int rc;70,3040
	char *nodelist;nodelist71,3087
} thd_t;72,3104
static pthread_mutex_t agent_cnt_mutex 74,3114
static pthread_cond_t  agent_cnt_cond 75,3182
static int agent_cnt 76,3249
static void *_agent_thread(_agent_thread80,3317
extern void send_rpc(121,4321

src/sbcast/opts.c,263
#  define _GNU_SOURCE45,2286
#define OPT_LONG_HELP 63,2563
#define OPT_LONG_USAGE 64,2593
extern void parse_command_line(77,2910
static uint32_t _map_size(186,5694
static void _print_options(211,6296
static void _usage(228,6898
static void _help(233,6981

src/sbcast/sbcast.c,265
int fd;67,2857
struct sbcast_parameters params;68,2898
struct stat f_stat;69,2956
job_sbcast_cred_msg_t *sbcast_cred;sbcast_cred70,3002
int main(76,3142
static void _get_job_info(127,4593
static ssize_t _get_block(152,5344
static void _bcast_file(187,6020

src/sbcast/sbcast.h,324
#define _SBCAST_H41,2237
struct sbcast_parameters 51,2405
	uint32_t block_size;52,2432
	bool compress;53,2454
	int  fanout;54,2470
	bool force;55,2484
	uint32_t jobid;56,2497
	bool preserve;57,2514
	int  timeout;58,2530
	int  verbose;59,2545
	char *src_fname;src_fname60,2560
	char *dst_fname;dst_fname61,2578

src/sattach/attach.c,341
MPIR_PROCDESC *MPIR_proctable;MPIR_proctable51,2334
int MPIR_proctable_size;52,2365
VOLATILE int MPIR_debug_state;53,2390
VOLATILE int MPIR_debug_gate;54,2421
int MPIR_being_debugged;55,2451
int MPIR_i_am_starter;56,2476
int MPIR_acquired_pre_main;57,2499
char *totalview_jobid;totalview_jobid58,2527
void MPIR_Breakpoint(60,2551

src/sattach/attach.h,262
#define _ATTACH_INCLUDE23,824
#define VOLATILE 27,912
#define VOLATILE29,944
  char * host_name;45,1558
  char * executable_name;46,1629
  int    pid;47,1687
} MPIR_PROCDESC;48,1737
#define MPIR_DEBUG_SPAWNED 69,2412
#define MPIR_DEBUG_ABORTING 70,2443

src/sattach/opt.c,1041
#  define _GNU_SOURCE40,1584
#define LONG_OPT_LAYOUT_ONLY 81,2555
#define LONG_OPT_DEBUGGER_TEST 82,2592
#define LONG_OPT_IN_FILTER 83,2629
#define LONG_OPT_OUT_FILTER 84,2666
#define LONG_OPT_ERR_FILTER 85,2703
#define LONG_OPT_PTY 86,2740
opt_t opt;89,2827
int error_exit 90,2838
typedef struct env_vars env_vars_t;94,2916
int initialize_and_process_args(121,3573
#undef USE_ARGERROR142,3919
static void argerror(144,3956
static void argerror(146,4042
#  define argerror 159,4275
_get_pos_int(169,4461
static void _opt_default(190,4925
struct env_vars 238,6123
	const char *var;var239,6141
	int type;240,6159
	void *arg;arg241,6170
	void *set_flag;set_flag242,6182
env_vars_t env_vars[env_vars245,6203
static void _opt_env(255,6457
_process_env_var(269,6652
void set_options(284,6880
static void _parse_jobid_stepid(377,9204
static void _opt_args(420,10047
static bool _opt_verify(449,10521
#define tf_(480,11226
static void _opt_list(482,11273
static void _usage(494,11669
static void _help(499,11754

src/sattach/opt.h,750
#define _HAVE_OPT_H31,1496
typedef struct sbatch_options 50,1805
	char *progname;progname51,1837
	char *user;user53,1928
	uid_t uid;54,1964
	gid_t gid;55,1995
	uid_t euid;56,2026
	gid_t egid;57,2072
	char *job_name;job_name58,2120
	uint32_t jobid;59,2169
	uint32_t stepid;60,2186
	bool jobid_set;61,2204
	int quiet;62,2257
	int verbose;63,2269
	char *ctrl_comm_ifhn;ctrl_comm_ifhn64,2283
	bool labelio;65,2306
	slurm_step_io_fds_t fds;66,2321
	bool layout_only;67,2347
	bool debugger_test;68,2366
	uint32_t input_filter;69,2387
	bool input_filter_set;70,2411
	uint32_t output_filter;71,2435
	bool output_filter_set;72,2460
	uint32_t error_filter;73,2485
	bool error_filter_set;74,2509
	bool pty;75,2533
} opt_t;76,2559

src/sattach/sattach.c,1258
int global_rc 89,3092
typedef struct message_thread_state 94,3289
	pthread_mutex_t lock;95,3327
	pthread_cond_t cond;96,3350
	bitstr_t *tasks_started;tasks_started97,3372
	bitstr_t *tasks_exited;tasks_exited98,3438
	eio_handle_t *msg_handle;msg_handle99,3497
	pthread_t msg_thread;100,3524
	uint16_t num_resp_port;101,3547
	uint16_t *resp_port;resp_port102,3572
} message_thread_state_t;103,3632
static struct io_operations message_socket_ops 109,3906
static struct termios termdefaults;115,4076
int sattach(120,4269
static void _pty_restore(215,6741
static void _set_exit_code(222,6930
_nodeid_from_layout(237,7151
static void print_layout_info(254,7525
static slurm_cred_t *_generate_fake_cred(_generate_fake_cred277,8106
void _handle_response_msg(315,9116
void _handle_response_msg_list(352,10168
static int _attach_to_tasks(378,11033
static void *_msg_thr_internal(_msg_thr_internal428,12410
_estimate_nports(438,12592
static message_thread_state_t *_msg_thr_create(_msg_thr_create445,12731
static void _msg_thr_wait(491,14036
static void _msg_thr_destroy(502,14352
_launch_handler(514,14690
_exit_handler(531,15029
_handle_msg(575,16153
_mpir_init(623,17527
_mpir_cleanup(634,17772
_mpir_dump_proctable(646,17968

src/sattach/sattach.wrapper.c,17
int main(16,485

src/sprio/opts.c,371
#  define _GNU_SOURCE40,2150
#define OPT_LONG_HELP 66,2634
#define OPT_LONG_USAGE 67,2663
static void _opt_env(79,3064
parse_command_line(95,3313
extern int parse_format(209,6178
_get_prefix(328,9668
_parse_token(356,10401
_print_options(380,10865
_build_job_list(422,11935
_build_user_list(454,12643
static void _usage(480,13220
static void _help(485,13339

src/sprio/print.c,900
int print_jobs_array(74,3211
static double _get_priority(92,3597
static int _print_str(104,3907
static int _print_int(135,4537
static int _print_norm(143,4722
int print_job_from_format(155,5092
int job_format_add_function(179,5630
int _print_job_job_id(197,6078
int _print_job_prefix(214,6566
int _print_age_priority_normalized(222,6731
int _print_age_priority_weighted(240,7223
int _print_fs_priority_normalized(254,7642
int _print_fs_priority_weighted(273,8135
int _print_job_priority_normalized(287,8556
int _print_job_priority_weighted(307,9136
int _print_js_priority_normalized(324,9632
int _print_js_priority_weighted(344,10124
int _print_part_priority_normalized(360,10549
int _print_part_priority_weighted(379,11054
int _print_qos_priority_normalized(393,11483
int _print_qos_priority_weighted(412,11976
int _print_job_nice(426,12395
int _print_job_user_name(440,12799

src/sprio/print.h,1064
#define _SPRIO_PRINT_H_40,2165
#define FORMAT_STRING_SIZE 46,2246
typedef struct job_format 51,2457
	int (*function)function52,2485
	uint32_t width;53,2551
	bool right_justify;54,2568
	char *suffix;suffix55,2589
} job_format_t;56,2604
#define job_format_add_job_id(69,3100
#define job_format_add_prefix(71,3221
#define job_format_add_age_priority_normalized(73,3336
#define job_format_add_age_priority_weighted(75,3487
#define job_format_add_fs_priority_normalized(77,3634
#define job_format_add_fs_priority_weighted(79,3783
#define job_format_add_job_priority_normalized(81,3928
#define job_format_add_job_priority_weighted(83,4079
#define job_format_add_js_priority_normalized(85,4226
#define job_format_add_js_priority_weighted(87,4375
#define job_format_add_part_priority_normalized(89,4520
#define job_format_add_part_priority_weighted(91,4673
#define job_format_add_qos_priority_normalized(93,4822
#define job_format_add_qos_priority_weighted(95,4973
#define job_format_add_job_nice(97,5120
#define job_format_add_user_name(99,5241

src/sprio/sprio.c,233
struct sprio_parameters params;66,2596
uint32_t weight_age;67,2628
uint32_t weight_fs;68,2677
uint32_t weight_js;69,2731
uint32_t weight_part;70,2784
uint32_t weight_qos;71,2840
int main 76,3013
static int _get_info(213,6962

src/sprio/sprio.h,376
#define __SPRIO_H__40,2163
struct sprio_parameters 72,2766
	bool job_flag;73,2792
	bool long_list;74,2808
	bool no_header;75,2825
	bool normalized;76,2842
	bool weights;77,2860
	int  verbose;79,2876
	List clusters;81,2892
	char* format;83,2909
	char* jobs;84,2924
	char* users;85,2937
	List  format_list;87,2952
	List  job_list;88,2972
	List  user_list;89,2989

src/slurmd/common/core_spec_plugin.c,797
typedef struct core_spec_ops 48,2232
	int	(*core_spec_p_set)core_spec_p_set49,2263
	int	(*core_spec_p_clear)core_spec_p_clear50,2323
	int	(*core_spec_p_suspend)core_spec_p_suspend51,2369
	int	(*core_spec_p_resume)core_spec_p_resume52,2417
} core_spec_ops_t;53,2464
static const char *syms[syms58,2543
static core_spec_ops_t		*ops ops65,2666
static plugin_context_t		**g_core_spec_context g_core_spec_context66,2703
static int			g_core_spec_context_num 67,2758
static pthread_mutex_t		g_core_spec_context_lock 68,2801
static bool init_run 70,2884
extern int core_spec_g_init(77,2997
extern int core_spec_g_fini(144,4792
extern int core_spec_g_set(176,5399
extern int core_spec_g_clear(196,5812
extern int core_spec_g_suspend(216,6192
extern int core_spec_g_resume(236,6575

src/slurmd/common/core_spec_plugin.h,37
#define _CORE_SPEC_PLUGIN_H_38,2017

src/slurmd/common/job_container_plugin.c,1029
typedef struct job_container_ops 49,2279
	int	(*container_p_create)container_p_create50,2314
	int	(*container_p_add_cont)container_p_add_cont51,2360
	int	(*container_p_add_pid)container_p_add_pid52,2426
	int	(*container_p_delete)container_p_delete53,2495
	int	(*container_p_restore)container_p_restore54,2541
	void	(*container_p_reconfig)container_p_reconfig55,2601
} job_container_ops_t;57,2640
static const char *syms[syms62,2727
static job_container_ops_t	*ops ops71,2905
static plugin_context_t		**g_container_context g_container_context72,2945
static int			g_container_context_num 73,3000
static pthread_mutex_t		g_container_context_lock 74,3043
static bool init_run 76,3126
extern int job_container_init(83,3233
extern int job_container_fini(150,5102
extern int container_g_create(178,5662
extern int container_g_add_pid(196,6117
extern int container_g_add_cont(213,6569
extern int container_g_delete(229,6927
extern int container_g_restore(245,7241
extern void container_g_reconfig(261,7617

src/slurmd/common/job_container_plugin.h,41
#define _JOB_CONTAINER_PLUGIN_H_38,2014

src/slurmd/common/proctrack.c,1306
#define PF_DUMPCORE 57,2530
typedef struct slurm_proctrack_ops 72,3094
	int              (*create)create73,3131
	int              (*add)add74,3188
	int              (*signal)signal75,3256
	int              (*destroy)destroy76,3314
	uint64_t         (*find_cont)find_cont77,3360
	bool             (*has_pid)has_pid78,3404
	int              (*wait)wait79,3461
	int              (*get_pids)get_pids80,3507
} slurm_proctrack_ops_t;81,3580
static const char *syms[syms86,3671
static slurm_proctrack_ops_t ops;97,3885
static plugin_context_t *g_context g_context98,3919
static pthread_mutex_t g_context_lock 99,3962
static bool init_run 100,4029
extern int slurm_proctrack_init(108,4528
extern int slurm_proctrack_fini(142,5347
extern int proctrack_g_create(163,5743
extern int proctrack_g_add(180,6171
static bool _test_core_dumping(192,6479
typedef struct agent_arg 261,8716
	uint64_t cont_id;262,8743
	int signal;263,8762
} agent_arg_t;264,8775
static void *_sig_agent(_sig_agent266,8791
static void _spawn_signal_thread(303,9614
extern int proctrack_g_signal(328,10414
extern int proctrack_g_destroy(385,11762
extern uint64_t proctrack_g_find(398,12016
extern bool proctrack_g_has_pid(410,12245
extern int proctrack_g_wait(428,12750
proctrack_g_get_pids(449,13354

src/slurmd/common/proctrack.h,33
#define __PROC_TRACK_H__40,2182

src/slurmd/common/reverse_tree.h,158
#define _REVERSE_TREE_H40,2232
#define REVERSE_TREE_WIDTH 42,2257
#define REVERSE_TREE_CHILDREN_TIMEOUT 43,2286
#define REVERSE_TREE_PARENT_RETRY 44,2341

src/slurmd/common/run_script.c,178
int waitpid_timeout 70,2919
_run_one_script(119,4265
static void _xfree_f 175,5512
static int _ef 181,5561
static List _script_list_create 186,5674
int run_script(220,6307

src/slurmd/common/run_script.h,30
#define _RUN_SCRIPT_H40,2217

src/slurmd/common/set_oomadj.c,32
extern int set_oom_adj(47,2261

src/slurmd/common/set_oomadj.h,30
#define _SET_OOMADJ_H39,2112

src/slurmd/common/setproctitle.c,715
#define PS_USE_NONE	134,5273
#define PS_USE_PSTAT	135,5297
#define PS_USE_PS_STRINGS	136,5322
#define PS_USE_CHANGE_ARGV	137,5351
#define PS_USE_CLOBBER_ARGV	138,5381
# define SETPROCTITLE_STRATEGY	141,5443
# define SETPROCTITLE_PS_PADDING	145,5526
static char ps_buffer[ps_buffer155,5759
static const size_t ps_buffer_size 156,5787
static char *ps_buffer;ps_buffer158,5849
static size_t ps_buffer_size;159,5905
static char **new_environ new_environ160,5971
static int	save_argc;164,6068
static char **save_argv;save_argv165,6090
static char __progname[__progname170,6166
setproctitle(179,6380
static void _init__progname 244,8043
init_setproctitle(264,8641
void fini_setproctitle(332,10194

src/slurmd/common/setproctitle.h,104
#define _BSD_SETPROCTITLE_H41,2203
extern void setproctitle(48,2305
extern void setproctitle(55,2521

src/slurmd/common/slurmstepd_init.c,96
extern void pack_slurmd_conf_lite(44,2406
extern int unpack_slurmd_conf_lite_no_alloc(77,3587

src/slurmd/common/slurmstepd_init.h,220
#define _SLURMD_STEP_INIT_H40,2179
#undef SLURMSTEPD_MEMCHECK53,2490
typedef enum slurmd_step_tupe 55,2518
	LAUNCH_BATCH_JOB 56,2550
	LAUNCH_TASKS,57,2573
	DEFUNCT_SPAWN_TASKS 58,2588
} slurmd_step_type_t;59,2623

src/slurmd/common/task_plugin.c,1465
typedef struct slurmd_task_ops 52,2497
	int	(*slurmd_batch_request)slurmd_batch_request53,2530
	int	(*slurmd_launch_request)slurmd_launch_request55,2621
	int	(*slurmd_reserve_resources)slurmd_reserve_resources58,2744
	int	(*slurmd_suspend_job)slurmd_suspend_job61,2867
	int	(*slurmd_resume_job)slurmd_resume_job62,2917
	int	(*slurmd_release_resources)slurmd_release_resources63,2966
	int	(*pre_setuid)pre_setuid65,3019
	int	(*pre_launch_priv)pre_launch_priv66,3068
	int	(*pre_launch)pre_launch67,3121
	int	(*post_term)post_term68,3170
	int	(*post_step)post_step70,3258
} slurmd_task_ops_t;71,3306
static const char *syms[syms76,3389
static slurmd_task_ops_t *ops ops90,3732
static plugin_context_t	**g_task_context g_task_context91,3770
static int			g_task_context_num 92,3819
static pthread_mutex_t		g_task_context_lock 93,3857
static bool init_run 94,3930
extern int slurmd_task_init(101,4028
extern int slurmd_task_fini(162,5590
extern int task_g_slurmd_batch_request(194,6152
extern int task_g_slurmd_launch_request(216,6640
extern int task_g_slurmd_reserve_resources(240,7172
extern int task_g_slurmd_suspend_job(264,7701
extern int task_g_slurmd_resume_job(284,8144
extern int task_g_slurmd_release_resources(304,8582
extern int task_g_pre_setuid(327,9082
extern int task_g_pre_launch_priv(347,9527
extern int task_g_pre_launch(367,9963
extern int task_g_post_term(387,10379
extern int task_g_post_step(408,10836

src/slurmd/common/task_plugin.h,39
#define _SLURMD_TASK_PLUGIN_H_41,2273

src/slurmd/slurmstepd/fname.c,84
#define MAX_WIDTH 60,2638
fname_create(66,2760
int fname_single_task_io 172,5172

src/slurmd/slurmstepd/fname.h,32
#define _SLURMD_FNAME_H41,2242

src/slurmd/slurmstepd/io.c,2840
#    define _GNU_SOURCE 46,2270
struct io_operations client_ops 103,3626
struct client_io_info 110,3794
#define CLIENT_IO_MAGIC 112,3833
	int                   magic;113,3866
	stepd_step_rec_t    *job;job115,3903
	struct slurm_io_header header;118,3992
	struct io_buf *in_msg;in_msg119,4024
	int32_t in_remaining;120,4048
	bool in_eof;121,4071
	List msg_queue;124,4112
	struct io_buf *out_msg;out_msg125,4129
	int32_t out_remaining;126,4154
	bool out_eof;127,4178
	int  ltaskid_stdout,131,4321
	int  ltaskid_stdout, ltaskid_stderr;131,4321
	bool labelio;132,4359
	int  label_width;133,4374
	bool is_local_file;136,4457
struct io_operations local_file_ops 143,4581
struct io_operations task_write_ops 156,5014
struct task_write_info 162,5156
#define TASK_IN_MAGIC 164,5196
	int              magic;165,5227
	stepd_step_rec_t    *job;job167,5259
	List msg_queue;169,5322
	struct io_buf *msg;msg170,5339
	int32_t remaining;171,5360
struct io_operations task_read_ops 180,5640
struct task_read_info 185,5742
#define TASK_OUT_MAGIC 187,5781
	int              magic;188,5813
	uint16_t         type;190,5845
	uint16_t         gtaskid;191,5912
	uint16_t         ltaskid;192,5939
	stepd_step_rec_t    *job;job193,5966
	cbuf_t           buf;194,6028
	bool		 eof;195,6051
	bool		 eof_msg_sent;196,6064
struct window_info 202,6267
	stepd_step_task_info_t *task;task203,6288
	stepd_step_rec_t *job;job204,6319
	slurm_fd_t pty_fd;205,6343
_client_readable(234,7726
_client_writable(268,8561
_client_read(313,9780
_client_write(447,13781
_local_file_writable(509,15370
_local_file_write(529,15756
_create_task_in_eio(602,17902
_task_writable(622,18334
_task_write_error(643,18772
_task_write(654,18951
_create_task_out_eio(718,20462
_task_readable(744,21131
_task_read(770,21747
static void *_window_manager(_window_manager820,22979
_spawn_window_manager(870,24173
_init_task_stdio_fds(939,26226
io_init_tasks_stdio(1155,33014
io_thread_start(1169,33255
_shrink_msg_cache(1195,33748
_send_connection_okay_response(1216,34135
_build_connection_okay_message(1249,34893
_route_msg_task_to_client(1285,35748
_free_incoming_msg(1336,37215
_free_outgoing_msg(1349,37496
_free_all_outgoing_msgs(1379,38196
io_close_task_fds(1394,38606
io_close_all(1406,38811
io_close_local_fds(1437,39489
_io_thr(1465,40011
io_create_local_client(1493,40851
io_initial_client_connect(1546,42306
io_client_connect(1611,44032
_send_io_init_msg(1667,45475
io_dup_stdio(1698,46204
_send_eof_msg(1722,46711
_task_build_message(1786,48512
alloc_io_buf(1856,50483
free_io_buf(1877,50898
_incoming_buf_free(1888,51091
_outgoing_buf_free(1907,51438
_user_managed_io_connect(1929,51972
user_managed_io_client_connect(1958,52594
io_find_filename_pattern(1982,53086
io_get_file_flags(2095,56200

src/slurmd/slurmstepd/io.h,361
#define _IO_H41,2183
#define STDIO_MAX_FREE_BUF 51,2412
#define STDIO_MAX_MSG_CACHE 52,2444
struct io_buf 54,2477
	int ref_count;55,2493
	uint32_t length;56,2509
	void *data;data57,2527
	SLURMD_ALL_NULL,64,2723
	SLURMD_ONE_NULL,65,2797
	SLURMD_ALL_UNIQUE,67,2910
	SLURMD_ALL_SAME,70,3092
	SLURMD_UNKNOWN73,3276
} slurmd_filename_pattern_t;74,3292

src/slurmd/slurmstepd/mgr.c,2563
#  undef HAVE_UNSETENV55,2460
#define RETRY_DELAY 128,4396
#define MAX_RETRY 129,4449
static int mgr_sigarray[mgr_sigarray134,4564
struct priv_state 140,4683
	uid_t	saved_uid;141,4703
	gid_t	saved_gid;142,4721
	gid_t *	gid_list;143,4739
	int	ngids;144,4758
	char	saved_cwd 145,4770
step_complete_t step_complete 148,4798
typedef struct kill_thread 163,4957
	pthread_t thread_id;164,4986
	int       secs;165,5008
} kill_thread_t;166,5025
static stepd_step_rec_t *reattach_job;reattach_job222,7096
mgr_launch_tasks_setup(228,7211
_send_srun_resp_msg(256,7819
static uint32_t _get_exit_code(285,8375
static int _call_select_plugin_from_stepd(332,9843
static int _select_cray_plugin_job_ready(352,10531
batch_finish(374,11203
mgr_launch_batch_job_setup(416,12515
_set_job_log_prefix(472,13921
_setup_normal_io(488,14255
_setup_user_managed_io(638,18202
_random_sleep(651,18481
_send_exit_msg(670,18872
_wait_for_children_slurmstepd(716,20056
_one_step_complete_msg(764,21396
_bit_getrange(856,24446
_send_step_complete_msgs(894,25190
extern void agent_queue_request(935,26311
job_manager(950,26744
_pre_task_privileged(1188,33178
struct exec_wait_info 1203,33600
	int id;1204,33624
	pid_t pid;1205,33633
	int parentfd;1206,33645
	int childfd;1207,33660
static struct exec_wait_info * exec_wait_info_create 1210,33678
static void exec_wait_info_destroy 1232,34067
static pid_t exec_wait_get_pid 1246,34289
static struct exec_wait_info * fork_child_with_wait_info 1253,34401
static int exec_wait_child_wait_for_parent 1278,34832
static int exec_wait_signal_child 1288,35024
static int exec_wait_signal 1298,35231
static int exec_wait_kill_child 1310,35553
static int exec_wait_kill_children 1324,35826
static void prepare_stdio 1347,36333
static void _unblock_signals 1362,36620
_fork_all_tasks(1379,36940
_send_pending_exit_msgs(1666,44004
_log_task_exit(1703,44673
_wait_for_any_task(1743,45877
_wait_for_all_tasks(1846,48722
static void *_kill_thr(_kill_thr1881,49516
static void _delay_kill_thread(1893,49744
_wait_for_io(1919,50379
_make_batch_dir(1941,50779
_make_batch_script(1977,51478
static int _drain_node(2027,52413
_send_launch_failure 2049,52988
_send_launch_resp(2084,53930
_send_complete_batch_script_msg(2122,54883
_drop_privileges(2183,56446
_reclaim_privileges(2230,57439
_slurmd_job_log_init(2255,57876
_setargs(2313,59758
static void _set_prio_process 2331,60206
_become_user(2360,60985
_initgroups(2396,61632
static int _access(2428,62437
_run_script_as_user(2462,63261

src/slurmd/slurmstepd/mgr.h,23
#define _MGR_H39,2184

src/slurmd/slurmstepd/multi_prog.c,208
#define MAX_ARGC 59,2818
#define _DEBUG 60,2839
_in_range(70,3146
_sub_expression(123,4245
extern int multi_prog_get_argv(145,4832
extern void multi_prog_parse(306,8575
extern void mpmd_free(512,14736

src/slurmd/slurmstepd/multi_prog.h,37
#define _SLURMD_MULTI_PROG_H40,2205

src/slurmd/slurmstepd/pam_ses.c,167
static pam_handle_t *pam_h pam_h59,2564
#define SLURM_SERVICE_PAM 64,2662
pam_setup 74,2963
pam_finish 128,5142
int pam_setup 154,5790
void pam_finish 160,5900

src/slurmd/slurmstepd/pam_ses.h,33
#define _SLURMD_PAMSES_H42,2276

src/slurmd/slurmstepd/pdebug.c,130
pdebug_trace_process(55,2477
pdebug_stop_current(123,4212
static bool _pid_to_wake(144,4768
void pdebug_wake_process(181,5709

src/slurmd/slurmstepd/pdebug.h,140
#define _PDEBUG_H40,2231
#  define _PTRACE(71,2904
#    define _PTRACE(74,3016
#    define _PTRACE(76,3094
#    define _PTRACE(78,3155

src/slurmd/slurmstepd/req.c,1243
struct io_operations msg_socket_ops 99,4724
static char *socket_name;socket_name104,4840
static pthread_mutex_t suspend_mutex 105,4866
static bool suspended 106,4932
struct request_params 108,4964
	int fd;109,4988
	stepd_step_rec_t *job;job110,4997
static pthread_mutex_t message_lock 113,5025
static pthread_cond_t message_cond 114,5090
static int message_connections;115,5153
_slurm_authorized_user(122,5319
_create_socket(132,5532
_domain_socket_create(159,6063
_domain_socket_destroy(208,7215
_msg_thr_internal(219,7412
msg_thr_create(231,7667
static void _wait_for_connections(272,8653
_msg_socket_readable(286,8986
_msg_socket_accept(307,9470
_handle_accept(373,11087
_handle_request(455,13069
_handle_state(556,15855
_handle_info(566,16029
_handle_signal_task_local(590,16804
_handle_signal_container(663,18596
_handle_checkpoint_tasks(804,22346
_handle_notify_job(887,24405
_handle_terminate(923,25186
_handle_attach(1002,27081
_handle_pid_in_container(1088,29300
_handle_daemon_pid(1110,29734
_handle_suspend(1120,29903
_handle_resume(1209,32314
_handle_completion(1271,33757
_handle_stat_jobacct(1380,36892
_handle_task_info(1425,38116
_handle_list_pids(1449,38773
_handle_reconfig(1474,39282

src/slurmd/slurmstepd/req.h,28
#define _STEP_REQ_H41,2192

src/slurmd/slurmstepd/slurmstepd.c,462
int slurmstepd_blocked_signals[slurmstepd_blocked_signals86,3731
slurmd_conf_t * conf;91,3806
main 95,3858
static slurmd_conf_t * read_slurmd_conf_lite 190,6351
static int get_jobid_uid_from_env 243,7718
static int handle_spank_mode 265,8228
static int process_cmdline 321,9660
_send_ok_to_slurmd(338,9977
_send_fail_to_slurmd(353,10266
_init_from_slurmd(371,10611
_step_setup(506,14438
_step_cleanup(556,15800
static void _dump_user_env(585,16476

src/slurmd/slurmstepd/slurmstepd.h,457
#define _SLURMSTEPD_H41,2206
#define STEPD_MESSAGE_COMP_WAIT 45,2264
#define MAX_RETRIES 46,2312
	pthread_cond_t cond;51,2397
	pthread_mutex_t lock;52,2419
	int rank;53,2442
	int depth;54,2453
	int parent_rank;55,2465
	slurm_addr_t parent_addr;56,2483
	int children;57,2510
	int max_depth;58,2525
	bool wait_children;59,2541
	bitstr_t *bits;bits60,2562
	int step_rc;61,2579
	jobacctinfo_t *jobacct;jobacct62,2593
} step_complete_t;63,2618

src/slurmd/slurmstepd/slurmstepd_job.c,450
static int _check_acct_freq_task(80,3395
_valid_uid_gid(108,4130
_batchfilename(172,5460
_expand_stdio_filename(195,6209
_job_init_task_info(218,6609
_array_copy(261,7815
_array_free(275,8007
_srun_info_destructor(286,8183
_task_info_destroy(293,8300
stepd_step_rec_create(306,8659
batch_stepd_step_rec_create(481,14338
stepd_step_rec_destroy(604,17866
srun_info_create(627,18353
srun_info_destroy(663,19218
task_info_create(670,19325

src/slurmd/slurmstepd/slurmstepd_job.h,4629
#define _SLURMSTEPD_JOB_H43,2315
#define MAXHOSTNAMELEN	62,2735
	unsigned char data[data66,2786
} srun_key_t;67,2826
	srun_key_t *key;key70,2858
	slurm_addr_t resp_addr;71,2922
	slurm_addr_t ioaddr;72,2993
} srun_info_t;75,3133
	STEPD_STEP_TASK_INIT,78,3164
	STEPD_STEP_TASK_STARTING,79,3187
	STEPD_STEP_TASK_RUNNING,80,3214
	STEPD_STEP_TASK_COMPLETE81,3240
} stepd_step_task_state_t;82,3266
	pthread_mutex_t mutex;85,3311
	stepd_step_task_state_t state;86,3382
	int             id;88,3455
	uint32_t        gtid;89,3523
	pid_t           pid;90,3593
	char           *ifname;ifname92,3663
	char           *ofname;ofname93,3735
	char           *efname;efname94,3807
	int             stdin_fd;95,3879
	int             stdout_fd;96,3951
	int             stderr_fd;97,4023
	int             to_stdin;98,4095
	int             from_stdout;99,4167
	int             from_stderr;100,4239
	eio_obj_t      *in;in101,4311
	eio_obj_t      *out;out102,4383
	eio_obj_t      *err;err103,4455
	bool            killed_by_cmd;105,4528
	bool            aborted;106,4600
	bool            esent;107,4672
	bool            exited;108,4744
	int             estatus;109,4816
	uint32_t	argc;111,4889
	char	      **argv;argv112,4905
} stepd_step_task_info_t;113,4925
	uint64_t apid;116,5013
	int num_cmds;117,5051
	char **args;args118,5107
	char **command;command119,5173
	int *first_pe;first_pe120,5239
	int *start_pe;start_pe122,5347
	int *total_pe;total_pe123,5410
	int *placement;placement125,5472
} mpmd_set_t;126,5532
	slurmstepd_state_t state;129,5564
	uint32_t       jobid;130,5591
	uint32_t       stepid;131,5663
	uint32_t       array_job_id;132,5735
	uint16_t       array_task_id;133,5807
	uint32_t       nnodes;134,5879
	uint32_t       ntasks;135,5951
	uint32_t       nodeid;136,6023
	uint32_t       node_tasks;137,6095
	uint16_t      *task_cnts;task_cnts138,6167
	uint32_t       cpus_per_task;139,6239
	uint32_t       debug;140,6309
	uint32_t       job_mem;141,6381
	uint32_t       step_mem;142,6453
	uint16_t       cpus;143,6525
	uint32_t       argc;144,6597
	char         **env;env145,6669
	char         **argv;argv146,6741
	char          *cwd;cwd147,6813
	task_dist_states_t task_dist;148,6885
	char          *node_name;node_name149,6957
	cpu_bind_type_t cpu_bind_type;151,7068
	char          *cpu_bind;cpu_bind152,7140
	mem_bind_type_t mem_bind_type;153,7212
	char          *mem_bind;mem_bind154,7284
	uint32_t       cpu_freq;155,7356
	switch_jobinfo_t *switch_job;switch_job156,7428
	uid_t         uid;157,7501
	char          *user_name;user_name158,7573
	gid_t         gid;159,7600
	int           ngids;160,7672
	gid_t        *gids;gids161,7744
	bool           aborted;162,7816
	bool           batch;163,7888
	bool           run_prolog;164,7960
	bool           user_managed_io;165,8032
	time_t         timelimit;166,8065
	uint32_t       profile;167,8137
	char          *task_prolog;task_prolog168,8209
	char          *task_epilog;task_epilog169,8281
	stepd_step_task_info_t  **task;task170,8353
	eio_handle_t  *eio;eio171,8427
	List 	       sruns;172,8448
	List           clients;173,8518
	List stdout_eio_objs;174,8590
	List stderr_eio_objs;175,8662
	List free_incoming;176,8734
	List free_outgoing;180,8897
	int incoming_count;184,9059
	int outgoing_count;188,9214
	List outgoing_cache;193,9370
	uint8_t	buffered_stdio;197,9487
	uint8_t labelio;200,9593
	pthread_t      ioid;202,9658
	pthread_t      msgid;203,9730
	eio_handle_t  *msg_handle;msg_handle204,9802
	pid_t          jmgr_pid;206,9875
	pid_t          pgid;207,9947
	uint16_t       task_flags;209,10020
	uint16_t       multi_prog;210,10048
	uint16_t       overcommit;211,10076
	env_t          *envtp;envtp212,10104
	uint64_t       cont_id;213,10128
	char          *batchdir;batchdir215,10154
	jobacctinfo_t *jobacct;jobacct216,10180
	uint8_t        open_mode;217,10205
	uint8_t        pty;218,10268
	job_options_t  options;219,10323
	char          *ckpt_dir;ckpt_dir220,10348
	time_t         ckpt_timestamp;221,10374
	char          *restart_dir;restart_dir222,10406
	uint32_t       resv_id;223,10462
	uint16_t       restart_cnt;224,10520
	char	      *job_alloc_cores;job_alloc_cores225,10579
	char	      *step_alloc_cores;step_alloc_cores226,10649
	List           job_gres_list;227,10719
	List           step_gres_list;228,10778
	launch_tasks_request_msg_t *msg;msg229,10838
	mpmd_set_t     *mpmd_set;mpmd_set233,10989
	uint16_t	job_core_spec;234,11051
} stepd_step_rec_t;235,11109
job_task_info_by_pid 258,11833

src/slurmd/slurmstepd/step_terminate_monitor.c,499
static pthread_mutex_t lock 52,2040
static pthread_cond_t cond 53,2097
static int running_flag 54,2152
static int stop_flag 55,2181
static pthread_t tid;56,2207
static uint16_t timeout;57,2229
static char *program_name;program_name58,2254
static uint32_t recorded_jobid 59,2281
static uint32_t recorded_stepid 60,2322
void step_terminate_monitor_start(65,2438
void step_terminate_monitor_stop(100,3129
static void *_monitor(_monitor128,3655
static int _call_external_program(155,4131

src/slurmd/slurmstepd/step_terminate_monitor.h,39
#define _SLURMD_TERM_MONITOR_H30,1513

src/slurmd/slurmstepd/task.c,315
#  define _GNU_SOURCE45,2310
static void _proc_stdout(109,3842
_run_script_and_set_env(187,5874
_build_path(262,7405
_setup_mpi(313,8506
exec_task(336,9046
_make_tmpdir(492,13198
#define	__GLIBC__ 516,13963
#define __GLIBC_PREREQ(517,13987
static char *_uint32_array_to_str(_uint32_array_to_str542,14581

src/slurmd/slurmstepd/task.h,24
#define _TASK_H41,2195

src/slurmd/slurmstepd/ulimits.c,287
int set_user_limits(89,3826
#define SLURM_RLIMIT_VSIZE 92,3888
#define SLURM_RLIMIT_VNAME 93,3925
#define SLURM_RLIMIT_VSIZE 98,4167
#define SLURM_RLIMIT_VNAME 99,4206
static char * rlim_to_string 172,6392
set_umask(183,6656
_set_limit(213,7635
static int _get_env_val(291,9896

src/slurmd/slurmstepd/ulimits.h,34
#define _SLURMD_ULIMITS_H41,2249

src/slurmd/slurmd/get_mach_stat.c,257
get_os_name(115,4074
get_mach_name(148,4838
get_memory(167,5327
get_tmp_disk(212,6577
extern int get_up_time(247,7324
extern int get_cpu_load(291,8342
static int _chk_cpuinfo_str(338,9621
static int _chk_cpuinfo_float(359,10221
get_speed(377,10700

src/slurmd/slurmd/get_mach_stat.h,33
#define _GET_MACH_STAT_H40,2196

src/slurmd/slurmd/read_proc.c,506
#define SESSION_RECS 59,2596
int hertz 61,2621
int iteration 63,2637
int sess_rec_cnt 64,2657
struct sess_record 65,2679
    int uid;66,2700
    int session;67,2713
    long unsigned time;68,2730
    long resident_set_size;69,2803
    int iteration;70,2876
    int processes;71,2932
struct sess_record *session_ptr;session_ptr73,2980
#define BUF_SIZE 75,3014
#define DEBUG_MODULE 76,3036
main(87,3347
_dump_proc(123,4114
_init_proc 151,4841
_parse_proc_stat(180,5704
read_proc(235,7548

src/slurmd/slurmd/req.c,5554
#define _LIMIT_INFO 97,3904
#define RETRY_DELAY 99,3927
#define MAX_RETRY 100,3980
#define MAXHOSTNAMELEN	103,4066
	int ngids;107,4117
	gid_t *gids;gids108,4129
} gids_t;109,4143
	uint32_t job_id;112,4171
	uint32_t step_id;113,4189
	uint32_t job_mem;114,4208
	uint32_t step_mem;115,4227
} job_mem_limits_t;116,4247
	uint32_t job_id;119,4285
	uint32_t step_id;120,4303
} starting_step_t;121,4322
	uint32_t job_id;124,4359
	uint16_t msg_timeout;125,4377
	bool *prolog_fini;prolog_fini126,4400
	pthread_cond_t *timer_cond;timer_cond127,4420
	pthread_mutex_t *timer_mutex;timer_mutex128,4449
} timer_struct_t;129,4480
	uint32_t jobid;132,4516
	uint32_t step_id;133,4533
	char *node_list;node_list134,4552
	char *partition;partition135,4570
	char *resv_id;resv_id136,4588
	char **spank_job_env;spank_job_env137,4604
	uint32_t spank_job_env_size;138,4627
	uid_t uid;139,4657
	char *user_name;user_name140,4669
} job_env_t;141,4687
static List waiters;221,8266
static pthread_mutex_t launch_mutex 223,8288
static time_t startup 224,8353
static time_t last_slurmctld_msg 225,8407
static pthread_mutex_t job_limits_mutex 227,8446
static List job_limits_list 228,8515
static bool job_limits_loaded 229,8551
#define FINI_JOB_CNT 231,8591
static pthread_mutex_t fini_mutex 232,8615
static uint32_t fini_job_id[fini_job_id233,8678
static int next_fini_job_inx 234,8721
#define NUM_PARALLEL_SUSPEND 239,8923
static pthread_mutex_t suspend_mutex 240,8954
static uint32_t job_suspend_array[job_suspend_array241,9020
static int job_suspend_size 242,9077
slurmd_req(245,9116
static int _send_slurmd_conf_lite 445,14965
_send_slurmstepd_init(460,15282
_forkexec_slurmstepd(692,21985
_check_job_credential(840,25943
_rpc_launch_tasks(1066,32477
_prolog_error(1222,37163
_get_user_env(1274,38740
_set_batch_job_limits(1315,39950
static bool _is_batch_job_finished(1380,41714
static void _note_batch_job_finished(1396,42000
_notify_slurmctld_prolog_fini(1406,42246
static void _rpc_prolog(1424,42695
_rpc_batch_job(1490,44349
_rpc_job_notify(1672,50234
_abort_job(1732,51686
_abort_step(1750,52196
_rpc_reconfig(1772,52761
_rpc_shutdown(1786,53099
_rpc_reboot(1803,53498
static void _job_limits_free(1838,54444
static int _job_limits_match(1844,54499
static int _step_limits_match(1853,54714
_load_job_limits(1866,55059
_cancel_step_mem_limit(1918,56580
_enforce_job_mem_limit(1945,57437
	struct job_mem_info 1956,57724
		uint32_t job_id;1957,57747
		uint32_t mem_limit;1958,57766
		uint32_t mem_used;1959,57797
		uint32_t vsize_limit;1960,57827
		uint32_t vsize_used;1961,57860
_rpc_ping(2097,62101
_rpc_health_check(2144,63487
_rpc_acct_gather_update(2180,64604
_rpc_acct_gather_energy(2235,66258
_signal_jobstep(2287,67705
_rpc_signal_tasks(2338,69041
_rpc_checkpoint_tasks(2359,69633
_rpc_terminate_tasks(2403,70862
_rpc_step_complete(2449,72072
_get_step_list(2490,73173
_rpc_daemon_status(2535,74150
_rpc_stat_jobacct(2566,75244
_rpc_list_pids(2659,77934
_rpc_timelimit(2734,80382
static void  _rpc_pid2jid(2801,82374
_get_grouplist(2852,83856
_valid_sbcast_cred(2879,84579
_rpc_file_bcast(2913,85441
_rpc_reattach_tasks(3063,89909
static slurmstepd_info_t *_get_job_step_info(_get_job_step_info3164,92916
_get_job_uid(3203,93764
_kill_all_active_steps(3224,94232
_terminate_all_steps(3275,95582
_job_still_running(3320,96661
_wait_state_completed(3356,97475
_steps_completed_now(3377,97878
_epilog_complete(3413,98677
_rpc_signal_job(3446,99468
_get_suspend_job_lock(3551,102328
_unlock_suspend_job(3582,103024
_rpc_suspend_job(3598,103411
_rpc_abort_job(3745,107457
_rpc_terminate_batch_job(3835,109984
_rpc_complete_batch(3947,113008
_rpc_terminate_job(4005,114687
static void _sync_messages_kill(4235,121745
static void _delay_rpc(4267,122535
_slurm_authorized_user(4302,123561
struct waiter 4308,123663
	uint32_t jobid;4309,123679
	pthread_t thd;4310,123696
_waiter_create(4315,123740
static int _find_waiter(4325,123892
static void _waiter_destroy(4330,123980
static int _waiter_init 4335,124044
static int _waiter_complete 4351,124393
_pause_for_job_completion 4363,124707
_rpc_update_time(4401,125488
_build_env(4425,126164
_destroy_env(4485,127936
_run_spank_job_script 4500,128075
static int _run_job_script(4573,129783
_run_prolog(4592,130405
static void *_prolog_timer(_prolog_timer4615,130938
_run_prolog(4651,131918
_run_epilog(4705,133479
typedef struct gid_cache_s 4741,134531
	char *user;user4742,134560
	gid_t gid;4743,134573
	gids_t *gids;gids4744,134585
	struct gid_cache_s *next;next4745,134600
} gids_cache_t;4746,134627
#define GIDS_HASH_LEN 4748,134644
static gids_cache_t *gids_hashtbl[gids_hashtbl4749,134669
_alloc_gids(4753,134746
_dealloc_gids(4764,134901
_alloc_gids_cache(4771,134981
_dealloc_gids_cache(4784,135230
_gids_hashtbl_idx(4792,135336
_gids_cache_purge(4805,135524
_gids_cache_lookup(4822,135758
_gids_cache_register(4839,136023
_getgroups(4852,136317
destroy_starting_step(4871,136651
init_gids_cache(4879,136712
_add_starting_step(4949,138153
_remove_starting_step(4996,139355
static int _compare_starting_steps(5044,140502
static int _wait_for_starting_step(5061,141023
static bool _step_is_starting(5103,142123
static void _add_job_running_prolog(5123,142617
static void _remove_job_running_prolog(5146,143300
static int _compare_job_running_prolog(5171,143909
static void _wait_for_job_running_prolog(5180,144128
_rpc_forward_data(5199,144618

src/slurmd/slurmd/req.h,23
#define _REQ_H40,2172

src/slurmd/slurmd/reverse_tree_math.c,185
static inline int int_pow(43,2256
static inline int geometric_series(61,2472
static inline int dep(66,2591
static int search_tree(78,2737
reverse_tree_info(114,3502
main(151,4159

src/slurmd/slurmd/reverse_tree_math.h,37
#define _REVERSE_TREE_MATH_H40,2242

src/slurmd/slurmd/slurmd.c,1764
#define GETOPT_ARGS	110,4282
#  define MAXHOSTNAMELEN	113,4346
#define MAX_THREADS	116,4382
int devnull 119,4471
slurmd_conf_t * conf;120,4489
static int             active_threads 125,4546
static pthread_mutex_t active_mutex 126,4589
static pthread_cond_t  active_cond 127,4656
static pthread_mutex_t fork_mutex 129,4723
typedef struct connection 131,4791
	slurm_fd_t fd;132,4819
	slurm_addr_t *cli_addr;cli_addr133,4835
} conn_t;134,4860
static sig_atomic_t _shutdown 141,4922
static sig_atomic_t _reconfig 142,4957
static pthread_t msg_pthread 143,4992
static time_t sent_reg_time 144,5038
main 181,6489
_spawn_registration_engine(361,11144
_registration_engine(391,11892
_msg_engine(412,12294
_decrement_thd_count(445,12960
_increment_thd_count(455,13155
_wait_for_all_threads(474,13589
_handle_connection(501,14229
_service_connection(543,15185
send_registration_msg(575,16066
_fill_registration_msg(603,16710
_free_and_set(719,19921
_massage_pathname(730,20138
_read_config(745,20501
_reconfigure(951,27572
_print_conf(1030,29315
_init_conf(1115,32264
_destroy_conf(1144,33114
_print_config(1188,34366
_process_cmdline(1223,35459
_create_msg_socket(1295,36707
_stepd_cleanup_batch_dirs(1323,37202
_slurmd_init(1362,38224
_restore_cred_state(1540,42674
_slurmd_fini(1590,44102
int save_cred_state(1621,44774
static int _drain_node(1676,46286
_term_handler(1698,46861
_hup_handler(1708,47063
_usage(1717,47151
_set_slurmd_spooldir(1740,47986
_kill_old_slurmd(1768,48578
static void _update_logging(1788,49057
static void _update_nice(1836,50314
static void _atfork_prepare(1855,50700
static void _atfork_final(1863,50846
static void _install_fork_handlers(1868,50917
static int _set_topo_info(1881,51163

src/slurmd/slurmd/slurmd.h,3372
#define _SLURMD_H41,2243
typedef struct slurmd_config 74,2900
	char         *prog;prog75,2931
	char         ***argv;argv76,2980
	int          *argc;argc77,3051
	char         *cluster_name;cluster_name78,3122
	char         *hostname;hostname79,3179
	uint16_t     cpus;80,3231
	uint16_t     boards;81,3302
	uint16_t     sockets;82,3373
	uint16_t     cores;83,3444
	uint16_t     threads;84,3515
	uint16_t     conf_cpus;85,3586
	uint16_t     conf_boards;86,3657
	uint16_t     conf_sockets;87,3728
	uint16_t     conf_cores;88,3799
	uint16_t     conf_threads;89,3870
	uint16_t     actual_cpus;90,3941
	uint16_t     actual_boards;91,4012
	uint16_t     actual_sockets;92,4083
	uint16_t     actual_cores;93,4154
	uint16_t     actual_threads;94,4225
	uint32_t     real_memory_size;95,4296
	uint32_t     tmp_disk_space;96,4360
	uint32_t     up_time;97,4425
	uint16_t     block_map_size;98,4487
	uint16_t     *block_map;block_map99,4555
	uint16_t     *block_map_inv;block_map_inv100,4619
	uint16_t      cr_type;101,4687
	int           nice;104,4834
	char         *node_name;node_name105,4894
	char         *node_addr;node_addr106,4958
	char         *node_topo_addr;node_topo_addr107,5022
	char         *node_topo_pattern;node_topo_pattern108,5093
	char         *conffile;conffile109,5164
	char         *logfile;logfile110,5228
	char         *spooldir;spooldir111,5291
	char         *pidfile;pidfile112,5342
	char         *health_check_program;health_check_program113,5394
	char         *tmpfs;tmpfs114,5461
	char         *pubkey;pubkey115,5522
	char         *epilog;epilog116,5584
	char         *prolog;prolog117,5639
	char         *select_type;select_type118,5701
	char         *stepd_loc;stepd_loc119,5767
	char         *task_prolog;task_prolog120,5831
	char         *task_epilog;task_epilog121,5897
	int           port;122,5963
	slurm_fd_t      lfd;123,6023
	pid_t         pid;124,6084
	log_options_t log_opts;125,6143
	uint16_t      log_fmt;126,6214
	int           debug_level;127,6285
	uint16_t      debug_level_set;128,6351
	uint32_t      debug_flags;129,6421
	int           daemonize:daemonize130,6487
	int	      cleanstart:cleanstart131,6540
	int           mlock_pages:mlock_pages132,6607
	slurm_cred_ctx_t vctx;134,6660
	uint16_t	slurmd_timeout;136,6732
	uid_t           slurm_user_id;137,6796
	pthread_mutex_t config_mutex;138,6866
	uint16_t        acct_freq_task;139,6935
	char           *job_acct_gather_freq;job_acct_gather_freq140,6968
	char           *job_acct_gather_type;job_acct_gather_type141,7007
	char           *job_acct_gather_params;job_acct_gather_params142,7079
	char           *acct_gather_energy_type;acct_gather_energy_type143,7155
	char           *acct_gather_filesystem_type;acct_gather_filesystem_type144,7204
	char           *acct_gather_infiniband_type;acct_gather_infiniband_type145,7257
	char           *acct_gather_profile_type;acct_gather_profile_type146,7310
	uint16_t	use_pam;147,7360
	uint16_t	task_plugin_param;148,7379
	uint16_t	propagate_prio;150,7478
	List		starting_steps;152,7543
	pthread_mutex_t	starting_steps_lock;154,7632
	pthread_cond_t	starting_steps_cond;155,7670
	List		prolog_running_jobs;156,7707
	pthread_mutex_t	prolog_running_lock;157,7735
	pthread_cond_t	prolog_running_cond;158,7773
} slurmd_conf_t;159,7810

src/slurmd/slurmd/slurmd_plugstack.c,523
slurm_nonstop_ops_t nonstop_ops 74,2886
typedef struct slurmd_plugstack_ops 76,2943
} slurmd_plugstack_ops_t;78,3001
static const char *syms[syms83,3090
static int g_context_cnt 87,3144
static slurmd_plugstack_ops_t *ops ops88,3175
static plugin_context_t **g_context g_context89,3218
static char *slurmd_plugstack_list slurmd_plugstack_list90,3262
static pthread_mutex_t g_context_lock 91,3305
static bool init_run 92,3372
extern int slurmd_plugstack_init(99,3482
extern int slurmd_plugstack_fini(159,4889

src/slurmd/slurmd/slurmd_plugstack.h,221
#define _SLURMD_PLUGSTACK_H38,2045
typedef struct slurm_nonstop_ops 46,2345
	void		(*job_begin)job_begin47,2380
	void		(*job_fini)job_fini48,2432
	void		(*node_fail)node_fail49,2483
} slurm_nonstop_ops_t;51,2571

src/slurmd/slurmd/xcpu.c,138
static int _send_sig(59,2562
static char *_sig_name(_sig_name80,2862
extern int xcpu_signal(100,3210
extern int xcpu_signal(144,4162

src/slurmd/slurmd/xcpu.h,24
#define _XCPU_H40,2188

src/db_api/account_functions.c,173
extern int slurmdb_accounts_add(55,2534
extern List slurmdb_accounts_get(67,2846
extern List slurmdb_accounts_modify(79,3195
extern List slurmdb_accounts_remove(92,3563

src/db_api/archive_functions.c,77
extern int slurmdb_archive(53,2431
extern int slurmdb_archive_load(62,2617

src/db_api/assoc_functions.c,189
extern int slurmdb_associations_add(55,2546
extern List slurmdb_associations_get(66,2851
extern List slurmdb_associations_modify(79,3236
extern List slurmdb_associations_remove(92,3624

src/db_api/cluster_functions.c,173
extern int slurmdb_clusters_add(55,2534
extern List slurmdb_clusters_get(67,2852
extern List slurmdb_clusters_modify(79,3216
extern List slurmdb_clusters_remove(92,3599

src/db_api/cluster_report_functions.c,648
	CLUSTER_REPORT_UA,52,2449
	CLUSTER_REPORT_AU,53,2469
	CLUSTER_REPORT_UW,54,2489
	CLUSTER_REPORT_WU55,2509
} cluster_report_t;56,2528
static void _process_ua(58,2549
static void _process_au(108,4129
static void _process_uw(135,5015
static void _process_wu(171,6143
static void _process_assoc_type(217,7524
static void _process_wckey_type(248,8282
static List _process_util_by_report(279,9034
extern List slurmdb_report_cluster_account_by_user(422,13197
extern List slurmdb_report_cluster_user_by_account(430,13446
extern List slurmdb_report_cluster_wckey_by_user(438,13695
extern List slurmdb_report_cluster_user_by_wckey(446,13934

src/db_api/connection_functions.c,113
extern void *slurmdb_connection_get(slurmdb_connection_get53,2475
extern int slurmdb_connection_close(68,2888

src/db_api/coord_functions.c,80
extern int slurmdb_coord_add(56,2577
extern List slurmdb_coord_remove(69,2971

src/db_api/extra_get_functions.c,245
extern List slurmdb_config_get(56,2595
extern List slurmdb_events_get(67,2855
extern List slurmdb_jobs_get(78,3134
extern List slurmdb_problems_get(89,3443
extern List slurmdb_reservations_get(101,3769
extern List slurmdb_txn_get(113,4089

src/db_api/job_report_functions.c,344
static int _sort_group_asc(52,2404
static void _check_create_grouping(66,2662
static List _process_grouped_report(146,5018
extern List slurmdb_report_job_sizes_grouped_by_top_account(519,14962
extern List slurmdb_report_job_sizes_grouped_by_wckey(526,15204
extern List slurmdb_report_job_sizes_grouped_by_top_account_then_wckey(533,15416

src/db_api/qos_functions.c,153
extern int slurmdb_qos_add(55,2501
extern List slurmdb_qos_get(66,2808
extern List slurmdb_qos_modify(78,3193
extern List slurmdb_qos_remove(92,3598

src/db_api/resource_functions.c,153
extern int slurmdb_res_add(54,2355
extern List slurmdb_res_get(65,2666
extern List slurmdb_res_modify(78,3058
extern List slurmdb_res_remove(91,3451

src/db_api/usage_functions.c,77
extern int slurmdb_usage_get(60,2739
extern int slurmdb_usage_roll(74,3222

src/db_api/user_functions.c,161
extern int slurmdb_users_add(55,2519
extern List slurmdb_users_get(67,2845
extern List slurmdb_users_modify(79,3243
extern List slurmdb_users_remove(93,3653

src/db_api/user_report_functions.c,51
extern List slurmdb_report_user_top_usage(51,2422

src/db_api/wckey_functions.c,165
extern int slurmdb_wckeys_add(55,2525
extern List slurmdb_wckeys_get(66,2832
extern List slurmdb_wckeys_modify(79,3249
extern List slurmdb_wckeys_remove(93,3673

src/db_api/resv_report_functions.c,0

src/sstat/options.c,232
void _help_fields_msg(51,2384
void _help_msg(66,2584
void _usage(107,5235
void _do_help(114,5348
void _init_params(132,5591
static int _addto_job_list(138,5711
int decode_state_char(259,8484
void parse_command_line(283,9108

src/sstat/print.c,147
#define FORMAT_STRING_SIZE 44,2252
char *_elapsed_time(_elapsed_time48,2328
static void _print_small_double(83,3081
void print_fields(97,3389

src/sstat/process.c,73
char *find_hostname(find_hostname44,2206
void aggregate_stats(62,2550

src/sstat/sstat.c,292
sstat_parameters_t params;53,2490
print_field_t fields[fields54,2517
List jobs 90,4423
slurmdb_job_rec_t job;91,4441
slurmdb_step_rec_t step;92,4464
List print_fields_list 93,4489
ListIterator print_fields_itr 94,4520
int field_count 95,4558
int _do_stat(97,4580
int main(195,7268

src/sstat/sstat.h,1469
#define _SSTAT_H42,2261
#define ERROR 67,2843
#define STAT_FIELDS 69,2860
#define STAT_FIELDS_PID 71,3213
#define STATE_COUNT 73,3260
#define MAX_PRINTFIELDS 75,3284
#define SECONDS_IN_MINUTE 77,3313
#define SECONDS_IN_HOUR 78,3342
#define SECONDS_IN_DAY 79,3389
		PRINT_ACT_CPUFREQ,84,3498
		PRINT_AVECPU,85,3519
		PRINT_AVEDISKREAD,86,3535
		PRINT_AVEDISKWRITE,87,3556
		PRINT_AVEPAGES,88,3578
		PRINT_AVERSS,89,3596
		PRINT_AVEVSIZE,90,3612
		PRINT_CONSUMED_ENERGY,91,3630
		PRINT_CONSUMED_ENERGY_RAW,92,3655
		PRINT_JOBID,93,3684
		PRINT_MAXDISKREAD,94,3699
		PRINT_MAXDISKREADNODE,95,3720
		PRINT_MAXDISKREADTASK,96,3745
		PRINT_MAXDISKWRITE,97,3770
		PRINT_MAXDISKWRITENODE,98,3792
		PRINT_MAXDISKWRITETASK,99,3818
		PRINT_MAXPAGES,100,3844
		PRINT_MAXPAGESNODE,101,3862
		PRINT_MAXPAGESTASK,102,3884
		PRINT_MAXRSS,103,3906
		PRINT_MAXRSSNODE,104,3922
		PRINT_MAXRSSTASK,105,3942
		PRINT_MAXVSIZE,106,3962
		PRINT_MAXVSIZENODE,107,3980
		PRINT_MAXVSIZETASK,108,4002
		PRINT_MINCPU,109,4024
		PRINT_MINCPUNODE,110,4040
		PRINT_MINCPUTASK,111,4060
		PRINT_NODELIST,112,4080
		PRINT_NTASKS,113,4098
		PRINT_PIDS,114,4114
		PRINT_REQ_CPUFREQ,115,4128
} sstat_print_types_t;116,4149
	int opt_all_steps;120,4191
	char *opt_field_list;opt_field_list121,4228
	int opt_help;122,4267
	List opt_job_list;123,4296
	int opt_noheader;124,4329
	int opt_verbose;125,4374
	bool pid_format;126,4408
} sstat_parameters_t;127,4426

src/sreport/assoc_reports.h,42
#define __SREPORT_ASSOC_REPORTS_H42,2239

src/sreport/cluster_reports.c,1209
bool tree_display 42,2234
	PRINT_CLUSTER_NAME,45,2265
	PRINT_CLUSTER_CPUS,46,2286
	PRINT_CLUSTER_ACPU,47,2307
	PRINT_CLUSTER_DCPU,48,2328
	PRINT_CLUSTER_ICPU,49,2349
	PRINT_CLUSTER_PDCPU,50,2370
	PRINT_CLUSTER_OCPU,51,2392
	PRINT_CLUSTER_RCPU,52,2413
	PRINT_CLUSTER_TOTAL,53,2434
	PRINT_CLUSTER_ACCT,54,2456
	PRINT_CLUSTER_USER_LOGIN,55,2477
	PRINT_CLUSTER_USER_PROPER,56,2504
	PRINT_CLUSTER_AMOUNT_USED,57,2532
	PRINT_CLUSTER_WCKEY,58,2560
	PRINT_CLUSTER_ENERGY,59,2582
	GROUP_BY_ACCOUNT,63,2624
	GROUP_BY_ACCOUNT_JOB_SIZE,64,2643
	GROUP_BY_ACCOUNT_JOB_SIZE_DURATION,65,2671
	GROUP_BY_USER,66,2708
	GROUP_BY_USER_JOB_SIZE,67,2724
	GROUP_BY_USER_JOB_SIZE_DURATION,68,2749
	GROUP_BY_NONE69,2783
} report_grouping_t;70,2798
static List print_fields_list 72,2820
static int _set_wckey_cond(74,2892
static int _set_assoc_cond(177,5734
static int _set_cluster_cond(278,8599
static int _setup_print_fields_list(358,10816
static List _get_cluster_list(533,16657
extern int cluster_account_by_user(588,18292
extern int cluster_user_by_account(785,23885
extern int cluster_user_by_wckey(946,28578
extern int cluster_utilization(1108,33245
extern int cluster_wckey_by_user(1278,37632

src/sreport/cluster_reports.h,44
#define __SREPORT_CLUSTER_REPORTS_H42,2241

src/sreport/common.c,354
extern void slurmdb_report_print_time(43,2207
extern int parse_option_end(124,4200
extern char *strip_quotes(strip_quotes140,4443
extern void addto_char_list(172,4927
extern int sort_user_dec(235,6199
extern int sort_cluster_dec(274,6954
extern int sort_assoc_dec(306,7662
extern int sort_reservations_dec(347,8423
extern int get_uint(384,9118

src/sreport/job_reports.c,912
	PRINT_JOB_ACCOUNT,45,2256
	PRINT_JOB_CLUSTER,46,2276
	PRINT_JOB_COUNT,47,2296
	PRINT_JOB_CPUS,48,2314
	PRINT_JOB_DUR,49,2331
	PRINT_JOB_NODES,50,2347
	PRINT_JOB_SIZE,51,2365
	PRINT_JOB_USER,52,2382
	PRINT_JOB_WCKEY53,2399
static List print_fields_list 56,2420
static List grouping_print_fields_list 57,2491
static int print_job_count 58,2571
static bool flat_view 59,2603
static bool individual_grouping 60,2634
static int _sort_cluster_grouping_dec(70,2855
static int _sort_acct_grouping_dec(100,3497
static char *_string_to_uid(_string_to_uid144,4390
static int _addto_uid_char_list(157,4662
static int _set_cond(236,6322
static int _setup_print_fields_list(414,11663
static int _setup_grouping_print_fields_list(509,14376
extern int job_sizes_grouped_by_top_acct(593,16647
extern int job_sizes_grouped_by_wckey(802,22183
extern int job_sizes_grouped_by_top_acct_and_wckey(1010,27707

src/sreport/job_reports.h,40
#define __SREPORT_JOB_REPORTS_H42,2227

src/sreport/resv_reports.c,803
	PRINT_RESV_NAME,44,2243
	PRINT_RESV_CLUSTER,45,2261
	PRINT_RESV_CPUS,46,2282
	PRINT_RESV_ACPU,47,2300
	PRINT_RESV_DCPU,48,2318
	PRINT_RESV_ICPU,49,2336
	PRINT_RESV_NODES,50,2354
	PRINT_RESV_ASSOCS,51,2373
	PRINT_RESV_START,52,2393
	PRINT_RESV_END,53,2412
	PRINT_RESV_FLAGS,54,2429
	PRINT_RESV_TIME,55,2448
	PRINT_RESV_CPUTIME,56,2466
	GROUP_BY_ACCOUNT,60,2506
	GROUP_BY_ACCOUNT_JOB_SIZE,61,2525
	GROUP_BY_ACCOUNT_JOB_SIZE_DURATION,62,2553
	GROUP_BY_USER,63,2590
	GROUP_BY_USER_JOB_SIZE,64,2606
	GROUP_BY_USER_JOB_SIZE_DURATION,65,2631
	GROUP_BY_NONE66,2665
} report_grouping_t;67,2680
static List print_fields_list 69,2702
static int _set_resv_cond(71,2774
static int _setup_print_fields_list(181,5894
static List _get_resv_list(312,9992
extern int resv_utilization(362,11334

src/sreport/resv_reports.h,41
#define __SREPORT_RESV_REPORTS_H42,2239

src/sreport/sreport.c,830
#define OPT_LONG_HIDE 49,2507
#define BUFFER_SIZE 50,2537
char *command_name;command_name52,2563
int exit_code;53,2583
int exit_flag;54,2654
int input_words;55,2703
int quiet_flag;56,2761
int all_clusters_flag 57,2814
slurmdb_report_time_format_t time_format 58,2841
char *time_format_string time_format_string59,2910
void *db_conn db_conn60,2948
uint32_t my_uid 61,2970
slurmdb_report_sort_t sort_flag 62,2991
main 77,3557
static char *_getline(_getline212,6773
static void _job_rep 243,7357
static void _user_rep 280,8453
static void _resv_rep 303,8957
static void _cluster_rep 326,9491
static void _assoc_rep 362,10789
_get_command 377,11080
static void _print_version(451,12614
_process_command 470,13081
static int _set_time_format(621,17190
static int _set_sort(654,18503
void _usage 672,18957

src/sreport/sreport.h,91
#define __SREPORT_H__41,2248
#define CKPT_WAIT	88,3125
#define	MAX_INPUT_FIELDS 89,3146

src/sreport/user_reports.c,377
	PRINT_USER_ACCT,44,2231
	PRINT_USER_CLUSTER,45,2249
	PRINT_USER_LOGIN,46,2270
	PRINT_USER_PROPER,47,2289
	PRINT_USER_USED,48,2309
	PRINT_USER_ENERGY,49,2327
static List print_fields_list 52,2351
static bool group_accts 53,2422
static uint32_t top_limit 54,2455
static int _set_cond(56,2488
static int _setup_print_fields_list(164,5689
extern int user_top(247,8065

src/sreport/user_reports.h,41
#define __SREPORT_USER_REPORTS_H42,2230

src/sreport/assoc_reports.c,0

src/scancel/opt.c,1081
#  define _GNU_SOURCE41,2238
#define OPT_LONG_HELP 76,2899
#define OPT_LONG_USAGE 77,2928
#define OPT_LONG_CTLD 78,2957
#define OPT_LONG_WCKEY 79,2986
#define SIZE(81,3016
struct signv 83,3058
	char *name;name84,3073
	uint16_t val;85,3086
} sig_name_num[sig_name_num86,3101
int initialize_and_process_args(136,4226
_xlate_state_name(155,4520
static uint16_t _xlate_signal_name(175,4921
static void _opt_default(206,5700
	opt.interactive	interactive224,6064
	opt.job_cnt	job_cnt225,6090
	opt.job_name	job_name226,6108
	opt.nodelist	nodelist227,6130
	opt.partition	partition228,6152
	opt.qos	qos229,6175
	opt.reservation	reservation230,6193
	opt.signal	signal231,6218
	opt.state	state232,6272
	opt.user_id	user_id233,6294
	opt.user_name	user_name234,6312
	opt.verbose	verbose235,6335
	opt.wckey	wckey236,6353
static void _opt_env(244,6570
static void _opt_args(325,8405
_xlate_job_step_ids(440,11263
_opt_verify(531,13443
#define tf_(559,14088
static void _opt_list(561,14135
static void _usage(586,14958
static void _help(594,15354

src/scancel/scancel.c,1092
#define MAX_CANCEL_RETRY 72,2901
#define MAX_THREADS 73,2929
static job_info_msg_t * job_buffer_ptr 87,3342
typedef struct job_cancel_info 89,3390
	uint32_t job_id;90,3423
	uint32_t array_job_id;91,3441
	uint32_t array_task_id;92,3465
	bool     array_flag;93,3490
	uint32_t step_id;94,3512
	uint16_t sig;95,3531
	int             *num_active_threads;num_active_threads96,3546
	pthread_mutex_t *num_active_threads_lock;num_active_threads_lock97,3584
	pthread_cond_t  *num_active_threads_cond;num_active_threads_cond98,3627
} job_cancel_info_t;99,3670
static	pthread_attr_t  attr;101,3692
static	int num_active_threads 102,3721
static	pthread_mutex_t  num_active_threads_lock;103,3756
static	pthread_cond_t   num_active_threads_cond;104,3805
main 107,3859
_multi_cluster(130,4397
_proc_cluster(147,4730
_load_job_records 174,5287
_match_job(187,5491
_verify_job_ids 209,6041
static int _strcmp(242,6953
_filter_job_records 256,7258
_cancel_jobs_by_state(385,9993
_cancel_jobs 508,13522
_cancel_job_id 537,14399
_cancel_step_id 617,16679
_confirmation 689,18786

src/scancel/scancel.h,696
#define _HAVE_SCANCEL_H40,2194
typedef struct scancel_options 48,2305
	char *account;account49,2338
	bool batch;50,2378
	bool ctld;51,2412
	List clusters;52,2440
	bool interactive;53,2509
	char *job_name;job_name54,2553
	char *partition;partition55,2592
	char *qos;qos56,2636
	char *reservation;reservation57,2670
	uint16_t signal;58,2718
	uint16_t state;59,2759
	uid_t user_id;60,2799
	char *user_name;user_name61,2845
	int verbose;62,2884
	uint16_t job_cnt;64,2921
	uint32_t *job_id;job_id65,2974
	uint32_t *array_id;array_id66,3017
	uint32_t *step_id;step_id67,3066
	char *wckey;wckey68,3114
	char *nodelist;nodelist69,3145
} opt_t;70,3185
opt_t opt;72,3195

slurm/pmi.h,818
#define PMI_H49,2322
#define PMI_SUCCESS 82,3271
#define PMI_FAIL 83,3310
#define PMI_ERR_INIT 84,3349
#define PMI_ERR_NOMEM 85,3388
#define PMI_ERR_INVALID_ARG 86,3427
#define PMI_ERR_INVALID_KEY 87,3466
#define PMI_ERR_INVALID_KEY_LENGTH 88,3505
#define PMI_ERR_INVALID_VAL 89,3544
#define PMI_ERR_INVALID_VAL_LENGTH 90,3583
#define PMI_ERR_INVALID_LENGTH 91,3622
#define PMI_ERR_INVALID_NUM_ARGS 92,3661
#define PMI_ERR_INVALID_ARGS 93,3700
#define PMI_ERR_INVALID_NUM_PARSED 94,3739
#define PMI_ERR_INVALID_KEYVALP 95,3778
#define PMI_ERR_INVALID_SIZE 96,3817
#define PMI_ERR_INVALID_KVS 97,3856
typedef int PMI_BOOL;99,3896
#define PMI_TRUE 100,3918
#define PMI_FALSE 101,3941
typedef struct PMI_keyval_t671,19658
    char * key;673,19688
    char * val;674,19704
} PMI_keyval_t;675,19720

slurm/slurmdb.h,19741
#define _SLURMDB_H39,2162
#undef BEGIN_C_DECLS44,2357
#undef END_C_DECLS45,2378
# define BEGIN_C_DECLS	47,2416
# define END_C_DECLS	48,2452
# define BEGIN_C_DECLS	50,2481
# define END_C_DECLS	51,2516
#undef PARAMS57,2755
# define PARAMS(61,2909
# define PARAMS(63,2946
	SLURMDB_ADMIN_NOTSET,71,3037
	SLURMDB_ADMIN_NONE,72,3060
	SLURMDB_ADMIN_OPERATOR,73,3081
	SLURMDB_ADMIN_SUPER_USER74,3106
} slurmdb_admin_level_t;75,3132
	SLURMDB_CLASS_NONE,78,3173
	SLURMDB_CLASS_CAPABILITY,79,3215
	SLURMDB_CLASS_CAPACITY,80,3267
	SLURMDB_CLASS_CAPAPACITY,81,3315
} slurmdb_classification_type_t;83,3404
	SLURMDB_EVENT_ALL,86,3453
	SLURMDB_EVENT_CLUSTER,87,3473
	SLURMDB_EVENT_NODE88,3497
} slurmdb_event_type_t;89,3517
	SLURMDB_PROBLEM_NOT_SET,92,3557
	SLURMDB_PROBLEM_ACCT_NO_ASSOC,93,3583
	SLURMDB_PROBLEM_ACCT_NO_USERS,94,3615
	SLURMDB_PROBLEM_USER_NO_ASSOC,95,3647
	SLURMDB_PROBLEM_USER_NO_UID,96,3679
} slurmdb_problem_type_t;97,3709
	SLURMDB_REPORT_SORT_TIME,100,3751
	SLURMDB_REPORT_SORT_NAME101,3778
} slurmdb_report_sort_t;102,3804
	SLURMDB_REPORT_TIME_SECS,105,3845
	SLURMDB_REPORT_TIME_MINS,106,3872
	SLURMDB_REPORT_TIME_HOURS,107,3899
	SLURMDB_REPORT_TIME_PERCENT,108,3927
	SLURMDB_REPORT_TIME_SECS_PER,109,3957
	SLURMDB_REPORT_TIME_MINS_PER,110,3988
	SLURMDB_REPORT_TIME_HOURS_PER,111,4019
} slurmdb_report_time_format_t;112,4051
	SLURMDB_RESOURCE_NOTSET,115,4099
	SLURMDB_RESOURCE_LICENSE,116,4125
} slurmdb_resource_type_t;117,4152
	SLURMDB_UPDATE_NOTSET,120,4195
	SLURMDB_ADD_USER,121,4219
	SLURMDB_ADD_ASSOC,122,4238
	SLURMDB_ADD_COORD,123,4258
	SLURMDB_MODIFY_USER,124,4278
	SLURMDB_MODIFY_ASSOC,125,4300
	SLURMDB_REMOVE_USER,126,4323
	SLURMDB_REMOVE_ASSOC,127,4345
	SLURMDB_REMOVE_COORD,128,4368
	SLURMDB_ADD_QOS,129,4391
	SLURMDB_REMOVE_QOS,130,4409
	SLURMDB_MODIFY_QOS,131,4430
	SLURMDB_ADD_WCKEY,132,4451
	SLURMDB_REMOVE_WCKEY,133,4471
	SLURMDB_MODIFY_WCKEY,134,4494
	SLURMDB_ADD_CLUSTER,135,4517
	SLURMDB_REMOVE_CLUSTER,136,4539
	SLURMDB_REMOVE_ASSOC_USAGE,137,4564
	SLURMDB_ADD_RES,138,4593
	SLURMDB_REMOVE_RES,139,4611
	SLURMDB_MODIFY_RES,140,4632
	SLURMDB_REMOVE_QOS_USAGE,141,4653
} slurmdb_update_type_t;142,4680
#define	QOS_FLAG_BASE 145,4729
#define	QOS_FLAG_NOTSET 146,4777
#define	QOS_FLAG_ADD 147,4825
#define	QOS_FLAG_REMOVE 148,4873
#define	QOS_FLAG_PART_MIN_NODE 150,4922
#define	QOS_FLAG_PART_MAX_NODE 151,4970
#define	QOS_FLAG_PART_TIME_LIMIT 152,5018
#define	QOS_FLAG_ENFORCE_USAGE_THRES 153,5066
#define	QOS_FLAG_NO_RESERVE 154,5114
#define	QOS_FLAG_REQ_RESV 155,5162
#define	QOS_FLAG_DENY_LIMIT 156,5210
#define	SLURMDB_RES_FLAG_BASE 159,5294
#define	SLURMDB_RES_FLAG_NOTSET 160,5372
#define	SLURMDB_RES_FLAG_ADD 161,5420
#define	SLURMDB_RES_FLAG_REMOVE 162,5468
#define SLURMDB_PURGE_BASE 168,5618
#define SLURMDB_PURGE_FLAGS 170,5711
#define SLURMDB_PURGE_HOURS 171,5783
#define SLURMDB_PURGE_DAYS 172,5857
#define SLURMDB_PURGE_MONTHS 173,5930
#define SLURMDB_PURGE_ARCHIVE 175,6029
#define SLURMDB_FS_USE_PARENT 178,6163
#define SLURMDB_CLASSIFIED_FLAG 180,6205
#define SLURMDB_CLASS_BASE 181,6244
#define CLUSTER_FLAG_BG 184,6304
#define CLUSTER_FLAG_BGL 185,6376
#define CLUSTER_FLAG_BGP 186,6450
#define CLUSTER_FLAG_BGQ 187,6524
#define CLUSTER_FLAG_SC 188,6598
#define CLUSTER_FLAG_XCPU 189,6679
#define CLUSTER_FLAG_AIX 190,6738
#define CLUSTER_FLAG_MULTSD 191,6806
#define CLUSTER_FLAG_CRAYXT 192,6883
#define CLUSTER_FLAG_CRAY_A 194,6991
#define CLUSTER_FLAG_FE 195,7064
#define CLUSTER_FLAG_CRAY_N 196,7144
#define CLUSTER_FLAG_CRAY 200,7247
#  define  __assoc_mgr_association_usage_t_defined206,7495
typedef struct assoc_mgr_association_usage assoc_mgr_association_usage_t;208,7569
#  define  __assoc_mgr_qos_usage_t_defined214,7781
typedef struct assoc_mgr_qos_usage assoc_mgr_qos_usage_t;216,7847
	List acct_list;227,8148
	List cluster_list;228,8187
	List def_qos_id_list;230,8229
	List fairshare_list;232,8276
	List grp_cpu_mins_list;234,8322
	List grp_cpu_run_mins_list;235,8368
	List grp_cpus_list;236,8418
	List grp_jobs_list;237,8460
	List grp_mem_list;238,8502
	List grp_nodes_list;239,8543
	List grp_submit_jobs_list;240,8586
	List grp_wall_list;241,8635
	List id_list;243,8678
	List max_cpu_mins_pj_list;245,8714
	List max_cpu_run_mins_list;246,8763
	List max_cpus_pj_list;247,8813
	List max_jobs_list;248,8858
	List max_nodes_pj_list;249,8900
	List max_submit_jobs_list;250,8946
	List max_wall_pj_list;251,8995
	uint16_t only_defs;253,9041
	List parent_acct_list;255,9094
	List partition_list;256,9147
	List qos_list;258,9191
	time_t usage_end;260,9229
	time_t usage_start;261,9248
	List user_list;263,9270
	uint16_t with_usage;265,9310
	uint16_t with_deleted;266,9353
	uint16_t with_raw_qos;267,9411
	uint16_t with_sub_accts;268,9471
	uint16_t without_parent_info;269,9536
	uint16_t without_parent_limits;270,9602
} slurmdb_association_cond_t;272,9683
	List acct_list;278,9833
	List associd_list;279,9872
	List cluster_list;280,9911
	uint32_t cpus_max;281,9952
	uint32_t cpus_min;282,10009
	uint16_t duplicates;283,10065
	int32_t exitcode;284,10125
	List groupid_list;285,10173
	List jobname_list;286,10214
	uint32_t nodes_max;287,10255
	uint32_t nodes_min;288,10313
	List partition_list;289,10370
	List qos_list;290,10413
	List resv_list;291,10452
	List resvid_list;292,10491
	List state_list;293,10531
	List step_list;294,10577
	uint32_t timelimit_max;295,10640
	uint32_t timelimit_min;296,10685
	time_t usage_end;297,10730
	time_t usage_start;298,10749
	char *used_nodes;used_nodes299,10770
	List userid_list;300,10837
	List wckey_list;301,10877
	uint16_t without_steps;302,10916
	uint16_t without_usage_truncation;303,10971
} slurmdb_job_cond_t;307,11131
	double act_cpufreq;313,11266
	double cpu_ave;314,11331
	double consumed_energy;315,11348
	uint32_t cpu_min;316,11417
	uint32_t cpu_min_nodeid;317,11436
	uint32_t cpu_min_taskid;318,11505
	double disk_read_ave;319,11574
	double disk_read_max;320,11643
	uint32_t disk_read_max_nodeid;321,11712
	uint32_t disk_read_max_taskid;322,11783
	double disk_write_ave;323,11852
	double disk_write_max;324,11923
	uint32_t disk_write_max_nodeid;325,11994
	uint32_t disk_write_max_taskid;326,12066
	double pages_ave;327,12136
	uint64_t pages_max;328,12155
	uint32_t pages_max_nodeid;329,12176
	uint32_t pages_max_taskid;330,12247
	double rss_ave;331,12318
	uint64_t rss_max;332,12335
	uint32_t rss_max_nodeid;333,12354
	uint32_t rss_max_taskid;334,12423
	double vsize_ave;335,12492
	uint64_t vsize_max;336,12511
	uint32_t vsize_max_nodeid;337,12532
	uint32_t vsize_max_taskid;338,12603
} slurmdb_stats_t;339,12674
	slurmdb_association_cond_t *assoc_cond;assoc_cond344,12777
	List description_list;346,12860
	List organization_list;347,12905
	uint16_t with_assocs;348,12951
	uint16_t with_coords;349,12974
	uint16_t with_deleted;350,12997
} slurmdb_account_cond_t;351,13021
	List assoc_list;354,13065
	List coordinators;355,13127
	char *description;description356,13185
	char *name;name357,13205
	char *organization;organization358,13218
} slurmdb_account_rec_t;359,13239
	uint64_t alloc_secs;362,13282
	uint64_t consumed_energy;363,13342
	uint32_t id;364,13402
	time_t period_start;365,13444
} slurmdb_accounting_rec_t;366,13501
	char *archive_dir;archive_dir369,13547
	char *archive_script;archive_script370,13608
	slurmdb_job_cond_t *job_cond;job_cond372,13685
	uint32_t purge_event;373,13757
	uint32_t purge_job;377,13920
	uint32_t purge_resv;381,14073
	uint32_t purge_step;385,14238
	uint32_t purge_suspend;389,14396
} slurmdb_archive_cond_t;393,14552
	char *archive_file;archive_file396,14596
	char *insert;insert398,14697
} slurmdb_archive_rec_t;400,14798
	List accounting_list;405,14905
	char *acct;acct406,14975
	char *cluster;cluster408,15050
	uint32_t def_qos_id;410,15111
	uint64_t grp_cpu_mins;413,15198
	uint64_t grp_cpu_run_mins;416,15327
	uint32_t grp_cpus;420,15486
	uint32_t grp_jobs;423,15621
	uint32_t grp_mem;426,15746
	uint32_t grp_nodes;429,15879
	uint32_t grp_submit_jobs;432,16011
	uint32_t grp_wall;436,16154
	uint32_t id;440,16278
	uint16_t is_def;443,16377
	uint32_t lft;445,16449
	uint64_t max_cpu_mins_pj;449,16582
	uint64_t max_cpu_run_mins;451,16686
	uint32_t max_cpus_pj;454,16815
	uint32_t max_jobs;456,16916
	uint32_t max_nodes_pj;458,17011
	uint32_t max_submit_jobs;460,17113
	uint32_t max_wall_pj;462,17213
	char *parent_acct;parent_acct465,17302
	uint32_t parent_id;466,17354
	char *partition;partition467,17405
	List qos_list;470,17501
	uint32_t rgt;472,17551
	uint32_t shares_raw;476,17685
	uint32_t uid;479,17769
	assoc_mgr_association_usage_t *usage;usage480,17802
	char *user;user481,17841
} slurmdb_association_rec_t;482,17895
	uint16_t classification;485,17942
	List cluster_list;486,18005
	uint32_t flags;487,18046
	List plugin_id_select_list;488,18063
	List rpc_version_list;489,18113
	time_t usage_end;490,18158
	time_t usage_start;491,18177
	uint16_t with_deleted;492,18198
	uint16_t with_usage;493,18222
} slurmdb_cluster_cond_t;494,18244
	List accounting_list;497,18288
	uint16_t classification;498,18362
	slurm_addr_t control_addr;499,18425
	char *control_host;control_host501,18510
	uint32_t control_port;502,18531
	uint32_t cpu_count;503,18555
	uint16_t dimensions;504,18576
	int *dim_size;dim_size505,18641
	uint32_t flags;509,18818
	char *name;name510,18868
	char *nodes;nodes511,18881
	uint32_t plugin_id_select;512,18895
	slurmdb_association_rec_t *root_assoc;root_assoc513,18953
	uint16_t rpc_version;515,19036
} slurmdb_cluster_rec_t;516,19103
	uint64_t alloc_secs;519,19146
	uint64_t consumed_energy;520,19206
	uint32_t cpu_count;521,19266
	uint64_t down_secs;522,19327
	uint64_t idle_secs;523,19381
	uint64_t over_secs;524,19435
	uint64_t pdown_secs;525,19498
	time_t period_start;526,19561
	uint64_t resv_secs;527,19618
} slurmdb_cluster_accounting_rec_t;528,19676
	char *cluster;cluster531,19730
	uint16_t percent_allowed;532,19768
} slurmdb_clus_res_rec_t;534,19865
	char *name;name537,19909
	uint16_t direct;538,19922
} slurmdb_coord_rec_t;539,19940
	List cluster_list;542,19981
	uint32_t cpus_max;543,20022
	uint32_t cpus_min;544,20079
	uint16_t event_type;545,20135
	List node_list;547,20227
	time_t period_end;548,20273
	time_t period_start;549,20325
	List reason_list;550,20379
	List reason_uid_list;551,20425
	List state_list;552,20471
} slurmdb_event_cond_t;553,20517
	char *cluster;cluster556,20559
	char *cluster_nodes;cluster_nodes557,20617
	uint32_t cpu_count;559,20725
	uint16_t event_type;560,20789
	char *node_name;node_name561,20857
	time_t period_end;562,20928
	time_t period_start;563,20973
	char *reason;reason564,21020
	uint32_t reason_uid;566,21128
	uint16_t state;567,21190
} slurmdb_event_rec_t;569,21288
	char *cluster;cluster575,21386
	uint32_t job_id;576,21402
} slurmdb_job_modify_cond_t;577,21420
	uint32_t alloc_cpus;580,21467
	uint32_t alloc_nodes;581,21489
	char    *account;account582,21512
	uint32_t associd;583,21531
	char	*blockid;blockid584,21550
	char    *cluster;cluster585,21566
	uint32_t derived_ec;586,21585
	char	*derived_es;derived_es587,21607
	uint32_t elapsed;588,21646
	time_t eligible;589,21665
	time_t end;590,21683
	uint32_t exitcode;591,21696
	void *first_step_ptr;first_step_ptr592,21716
	uint32_t gid;593,21739
	uint32_t jobid;594,21754
	char	*jobname;jobname595,21771
	uint32_t lft;596,21787
	char	*partition;partition597,21802
	char	*nodes;nodes598,21820
	uint32_t priority;599,21834
	uint32_t qosid;600,21854
	uint32_t req_cpus;601,21871
	uint32_t req_mem;602,21891
	uint32_t requid;603,21910
	uint32_t resvid;604,21928
	uint32_t show_full;605,21946
	time_t start;606,21967
	uint16_t	state;607,21982
	slurmdb_stats_t stats;608,21999
	List    steps;609,22023
	time_t submit;610,22076
	uint32_t suspended;611,22092
	uint32_t sys_cpu_sec;612,22113
	uint32_t sys_cpu_usec;613,22136
	uint32_t timelimit;614,22160
	uint32_t tot_cpu_sec;615,22181
	uint32_t tot_cpu_usec;616,22204
	uint16_t track_steps;617,22228
	uint32_t uid;618,22251
	char    *user;user619,22266
	uint32_t user_cpu_sec;620,22282
	uint32_t user_cpu_usec;621,22306
	char    *wckey;wckey622,22331
	uint32_t wckeyid;623,22348
} slurmdb_job_rec_t;624,22367
	char *description;description627,22406
	uint32_t id;628,22426
	uint32_t flags;629,22440
	uint32_t grace_time;631,22530
	uint64_t grp_cpu_mins;632,22580
	uint64_t grp_cpu_run_mins;634,22686
	uint32_t grp_cpus;637,22829
	uint32_t grp_jobs;639,22917
	uint32_t grp_mem;641,22998
	uint32_t grp_nodes;643,23086
	uint32_t grp_submit_jobs;645,23173
	uint32_t grp_wall;647,23266
	uint64_t max_cpu_mins_pj;649,23334
	uint64_t max_cpu_run_mins_pu;651,23427
	uint32_t max_cpus_pj;654,23592
	uint32_t max_cpus_pu;656,23685
	uint32_t max_jobs_pu;658,23791
	uint32_t max_nodes_pj;660,23887
	uint32_t max_nodes_pu;662,23988
	uint32_t max_submit_jobs_pu;664,24090
	uint32_t max_wall_pj;666,24190
	char *name;name669,24268
	bitstr_t *preempt_bitstr;preempt_bitstr670,24281
	List preempt_list;671,24346
	uint16_t preempt_mode;674,24507
	uint32_t priority;675,24573
	assoc_mgr_qos_usage_t *usage;usage677,24667
	double usage_factor;678,24738
	double usage_thres;679,24803
} slurmdb_qos_rec_t;682,24940
	List description_list;685,24979
	List id_list;686,25024
	List name_list;687,25060
	uint16_t preempt_mode;688,25098
	uint16_t with_deleted;689,25164
} slurmdb_qos_cond_t;690,25188
	List cluster_list;693,25228
	uint16_t flags;695,25306
	List id_list;696,25352
	List name_list;697,25411
	char *nodes;nodes698,25471
	time_t time_end;699,25520
	time_t time_start;700,25568
	uint16_t with_usage;701,25620
} slurmdb_reservation_cond_t;702,25675
	uint64_t alloc_secs;705,25723
	char *assocs;assocs706,25783
	char *cluster;cluster707,25841
	uint32_t cpus;708,25890
	uint64_t down_secs;709,25945
	uint32_t flags;710,25999
	uint32_t id;711,26045
	char *name;name712,26086
	char *nodes;nodes713,26125
	char *node_inx;node_inx714,26174
	time_t time_end;715,26232
	time_t time_start;716,26280
	time_t time_start_prev;717,26332
} slurmdb_reservation_rec_t;720,26459
	uint32_t jobid;723,26506
	uint32_t stepid;724,26523
} slurmdb_selected_step_t;725,26541
	uint32_t elapsed;728,26586
	time_t end;729,26605
	int32_t exitcode;730,26618
	slurmdb_job_rec_t *job_ptr;job_ptr731,26637
	uint32_t ncpus;732,26666
	uint32_t nnodes;733,26683
	char *nodes;nodes734,26701
	uint32_t ntasks;735,26715
	char *pid_str;pid_str736,26733
	uint32_t req_cpufreq;737,26749
	uint32_t requid;738,26772
	time_t start;739,26790
	enum job_states	state;740,26805
	slurmdb_stats_t stats;741,26829
	uint32_t stepid;742,26853
	char *stepname;stepname743,26895
	uint32_t suspended;744,26912
	uint32_t sys_cpu_sec;745,26933
	uint32_t sys_cpu_usec;746,26956
	uint16_t task_dist;747,26980
	uint32_t tot_cpu_sec;748,27001
	uint32_t tot_cpu_usec;749,27024
	uint32_t user_cpu_sec;750,27048
	uint32_t user_cpu_usec;751,27072
} slurmdb_step_rec_t;752,27097
	List cluster_list;757,27187
	List description_list;758,27228
	uint32_t flags;759,27273
	List id_list;760,27290
	List manager_list;761,27326
	List name_list;762,27367
	List percent_list;763,27405
	List server_list;764,27446
	List type_list;765,27486
	uint16_t with_deleted;766,27524
	uint16_t with_clusters;767,27548
} slurmdb_res_cond_t;768,27573
	List clus_res_list;771,27613
	slurmdb_clus_res_rec_t *clus_res_rec;clus_res_rec772,27675
	uint32_t count;774,27765
	char *description;description775,27829
	uint32_t flags;776,27849
	uint32_t id;777,27897
	char *manager;manager778,27911
	char *name;name779,27956
	uint16_t percent_used;780,27969
	char *server;server781,27993
	uint32_t type;782,28036
} slurmdb_res_rec_t;783,28072
	List acct_list;786,28111
	List action_list;787,28149
	List actor_list;788,28189
	List cluster_list;789,28228
	List id_list;790,28269
	List info_list;791,28305
	List name_list;792,28343
	time_t time_end;793,28381
	time_t time_start;794,28399
	List user_list;795,28419
	uint16_t with_assoc_info;796,28457
} slurmdb_txn_cond_t;797,28484
	char *accts;accts800,28524
	uint16_t action;801,28538
	char *actor_name;actor_name802,28556
	char *clusters;clusters803,28575
	uint32_t id;804,28592
	char *set_info;set_info805,28606
	time_t timestamp;806,28623
	char *users;users807,28642
	char *where_query;where_query808,28656
} slurmdb_txn_rec_t;809,28676
	uint64_t cpu_run_mins;814,28808
	uint32_t cpus;816,28886
	uint32_t jobs;817,28932
	uint32_t nodes;818,28975
	uint32_t submit_jobs;819,29023
	uint32_t uid;820,29085
} slurmdb_used_limits_t;821,29100
	uint16_t admin_level;824,29143
	slurmdb_association_cond_t *assoc_cond;assoc_cond826,29252
	List def_acct_list;829,29381
	List def_wckey_list;835,29670
	uint16_t with_assocs;836,29713
	uint16_t with_coords;837,29736
	uint16_t with_deleted;838,29759
	uint16_t with_wckeys;839,29783
	uint16_t without_defaults;840,29806
} slurmdb_user_cond_t;841,29834
	uint16_t admin_level;844,29875
	List assoc_list;846,29984
	List coord_accts;847,30046
	char *default_acct;default_acct848,30103
	char *default_wckey;default_wckey849,30124
	char *name;name850,30146
	char *old_name;old_name851,30159
	uint32_t uid;852,30176
	List wckey_list;853,30191
} slurmdb_user_rec_t;854,30247
	List objects;857,30287
	uint16_t type;858,30326
} slurmdb_update_object_t;861,30435
	List cluster_list;864,30480
	List id_list;865,30521
	List name_list;867,30559
	uint16_t only_defs;869,30606
	time_t usage_end;871,30664
	time_t usage_start;872,30683
	List user_list;874,30705
	uint16_t with_usage;876,30745
	uint16_t with_deleted;877,30790
} slurmdb_wckey_cond_t;878,30849
	List accounting_list;881,30891
	char *cluster;cluster883,30959
	uint32_t id;885,31002
	uint16_t is_def;887,31080
	char *name;name889,31144
	uint32_t uid;890,31175
	char *user;user892,31206
} slurmdb_wckey_rec_t;893,31242
	char *name;name896,31283
	char *print_name;print_name897,31296
	char *spaces;spaces898,31315
	uint16_t user;899,31330
} slurmdb_print_tree_t;901,31405
	slurmdb_association_rec_t *assoc;assoc904,31447
	char *sort_name;sort_name905,31482
	List children;906,31500
} slurmdb_hierarchical_rec_t;907,31516
	char *acct;acct912,31624
	char *cluster;cluster913,31637
	uint64_t consumed_energy;914,31653
	uint64_t cpu_secs;915,31680
	char *parent_acct;parent_acct916,31700
	char *user;user917,31720
} slurmdb_report_assoc_rec_t;918,31733
	char *acct;acct921,31781
	List acct_list;922,31794
	List assoc_list;923,31834
	uint64_t consumed_energy;924,31895
	uint64_t cpu_secs;925,31922
	char *name;name926,31942
	uid_t uid;927,31955
} slurmdb_report_user_rec_t;928,31967
	List assoc_list;931,32014
	uint64_t consumed_energy;932,32077
	uint32_t cpu_count;933,32104
	uint64_t cpu_secs;934,32125
	char *name;name935,32145
	List user_list;936,32158
} slurmdb_report_cluster_rec_t;937,32219
	List jobs;940,32269
	uint32_t min_size;943,32427
	uint32_t max_size;944,32498
	uint32_t count;946,32583
	uint64_t cpu_secs;947,32620
} slurmdb_report_job_grouping_t;949,32700
	char *acct;acct952,32751
	uint32_t count;953,32782
	uint64_t cpu_secs;954,32847
	List groups;956,32923
	uint32_t lft;957,32985
	uint32_t rgt;958,33000
} slurmdb_report_acct_grouping_t;959,33015
	char *cluster;cluster962,33067
	uint32_t count;963,33101
	uint64_t cpu_secs;964,33169
	List acct_list;966,33248
} slurmdb_report_cluster_grouping_t;967,33315

slurm/slurm_errno.h,6472
#define _SLURM_ERRNO_H41,2281
#undef BEGIN_C_DECLS46,2481
#undef END_C_DECLS47,2502
# define BEGIN_C_DECLS	49,2540
# define END_C_DECLS	50,2576
# define BEGIN_C_DECLS	52,2605
# define END_C_DECLS	53,2640
#undef PARAMS59,2879
# define PARAMS(63,3031
# define PARAMS(65,3068
#define slurm_seterrno_ret(73,3194
#define SLURM_SUCCESS 79,3347
#define SLURM_ERROR 80,3373
#define SLURM_FAILURE 81,3399
#define SLURM_SOCKET_ERROR 84,3473
#define SLURM_PROTOCOL_SUCCESS 85,3507
#define SLURM_PROTOCOL_ERROR 86,3541
	SLURM_UNEXPECTED_MSG_ERROR 90,3618
	SLURM_COMMUNICATIONS_CONNECTION_ERROR,91,3657
	SLURM_COMMUNICATIONS_SEND_ERROR,92,3697
	SLURM_COMMUNICATIONS_RECEIVE_ERROR,93,3731
	SLURM_COMMUNICATIONS_SHUTDOWN_ERROR,94,3768
	SLURM_PROTOCOL_VERSION_ERROR,95,3806
	SLURM_PROTOCOL_IO_STREAM_VERSION_ERROR,96,3837
	SLURM_PROTOCOL_AUTHENTICATION_ERROR,97,3878
	SLURM_PROTOCOL_INSANE_MSG_LENGTH,98,3916
	SLURM_MPI_PLUGIN_NAME_INVALID,99,3951
	SLURM_MPI_PLUGIN_PRELAUNCH_SETUP_FAILED,100,3983
	SLURM_PLUGIN_NAME_INVALID,101,4025
	SLURM_UNKNOWN_FORWARD_ADDR,102,4053
	SLURMCTLD_COMMUNICATIONS_CONNECTION_ERROR 105,4131
	SLURMCTLD_COMMUNICATIONS_SEND_ERROR,106,4186
	SLURMCTLD_COMMUNICATIONS_RECEIVE_ERROR,107,4224
	SLURMCTLD_COMMUNICATIONS_SHUTDOWN_ERROR,108,4265
	SLURM_NO_CHANGE_IN_DATA 111,4374
	ESLURM_INVALID_PARTITION_NAME 114,4439
	ESLURM_DEFAULT_PARTITION_NOT_SET,115,4480
	ESLURM_ACCESS_DENIED,116,4515
	ESLURM_JOB_MISSING_REQUIRED_PARTITION_GROUP,117,4538
	ESLURM_REQUESTED_NODES_NOT_IN_PARTITION,118,4584
	ESLURM_TOO_MANY_REQUESTED_CPUS,119,4626
	ESLURM_INVALID_NODE_COUNT,120,4659
	ESLURM_ERROR_ON_DESC_TO_RECORD_COPY,121,4687
	ESLURM_JOB_MISSING_SIZE_SPECIFICATION,122,4725
	ESLURM_JOB_SCRIPT_MISSING,123,4765
	ESLURM_USER_ID_MISSING 124,4793
	ESLURM_DUPLICATE_JOB_ID,125,4827
	ESLURM_PATHNAME_TOO_LONG,126,4853
	ESLURM_NOT_TOP_PRIORITY,127,4880
	ESLURM_REQUESTED_NODE_CONFIG_UNAVAILABLE,128,4906
	ESLURM_REQUESTED_PART_CONFIG_UNAVAILABLE,129,4949
	ESLURM_NODES_BUSY,130,4992
	ESLURM_INVALID_JOB_ID,131,5012
	ESLURM_INVALID_NODE_NAME,132,5036
	ESLURM_WRITING_TO_FILE,133,5063
	ESLURM_TRANSITION_STATE_NO_UPDATE 134,5088
	ESLURM_ALREADY_DONE,135,5132
	ESLURM_INTERCONNECT_FAILURE,136,5154
	ESLURM_BAD_DIST,137,5184
	ESLURM_JOB_PENDING,138,5202
	ESLURM_BAD_TASK_COUNT,139,5223
	ESLURM_INVALID_JOB_CREDENTIAL,140,5247
	ESLURM_IN_STANDBY_MODE,141,5279
	ESLURM_INVALID_NODE_STATE,142,5304
	ESLURM_INVALID_FEATURE,143,5332
	ESLURM_INVALID_AUTHTYPE_CHANGE 144,5357
	ESLURM_INVALID_CHECKPOINT_TYPE_CHANGE,145,5398
	ESLURM_INVALID_SCHEDTYPE_CHANGE,146,5438
	ESLURM_INVALID_SELECTTYPE_CHANGE,147,5472
	ESLURM_INVALID_SWITCHTYPE_CHANGE,148,5507
	ESLURM_FRAGMENTATION,149,5542
	ESLURM_NOT_SUPPORTED,150,5565
	ESLURM_DISABLED,151,5588
	ESLURM_DEPENDENCY,152,5606
	ESLURM_BATCH_ONLY,153,5626
	ESLURM_TASKDIST_ARBITRARY_UNSUPPORTED 154,5646
	ESLURM_TASKDIST_REQUIRES_OVERCOMMIT,155,5694
	ESLURM_JOB_HELD,156,5732
	ESLURM_INVALID_CRYPTO_TYPE_CHANGE,157,5750
	ESLURM_INVALID_TASK_MEMORY,158,5786
	ESLURM_INVALID_ACCOUNT,159,5815
	ESLURM_INVALID_PARENT_ACCOUNT,160,5840
	ESLURM_SAME_PARENT_ACCOUNT,161,5872
	ESLURM_INVALID_LICENSES,162,5901
	ESLURM_NEED_RESTART,163,5927
	ESLURM_ACCOUNTING_POLICY 164,5949
	ESLURM_INVALID_TIME_LIMIT,165,5985
	ESLURM_RESERVATION_ACCESS,166,6013
	ESLURM_RESERVATION_INVALID,167,6041
	ESLURM_INVALID_TIME_VALUE,168,6070
	ESLURM_RESERVATION_BUSY,169,6098
	ESLURM_RESERVATION_NOT_USABLE,170,6124
	ESLURM_INVALID_WCKEY,171,6156
	ESLURM_RESERVATION_OVERLAP,172,6179
	ESLURM_PORTS_BUSY,173,6208
	ESLURM_PORTS_INVALID 174,6228
	ESLURM_PROLOG_RUNNING,175,6261
	ESLURM_NO_STEPS,176,6285
	ESLURM_INVALID_BLOCK_STATE,177,6303
	ESLURM_INVALID_BLOCK_LAYOUT,178,6332
	ESLURM_INVALID_BLOCK_NAME,179,6362
	ESLURM_INVALID_QOS,180,6390
	ESLURM_QOS_PREEMPTION_LOOP,181,6411
	ESLURM_NODE_NOT_AVAIL,182,6440
	ESLURM_INVALID_CPU_COUNT,183,6464
	ESLURM_PARTITION_NOT_AVAIL 184,6491
	ESLURM_CIRCULAR_DEPENDENCY,185,6529
	ESLURM_INVALID_GRES,186,6558
	ESLURM_JOB_NOT_PENDING,187,6580
	ESLURM_QOS_THRES,188,6605
	ESLURM_PARTITION_IN_USE,189,6624
	ESLURM_STEP_LIMIT,190,6650
	ESLURM_JOB_SUSPENDED,191,6670
	ESLURM_CAN_NOT_START_IMMEDIATELY,192,6693
	ESLURM_INTERCONNECT_BUSY,193,6728
	ESLURM_RESERVATION_EMPTY,194,6755
	ESLURM_INVALID_ARRAY,195,6782
	ESLURM_RESERVATION_NAME_DUP,196,6805
	ESLURM_SWITCH_MIN 199,6913
	ESLURM_SWITCH_MAX 200,6940
	ESLURM_JOBCOMP_MIN 201,6967
	ESLURM_JOBCOMP_MAX 202,6995
	ESLURM_SCHED_MIN 203,7023
	ESLURM_SCHED_MAX 204,7049
	ESLRUMD_PIPE_ERROR_ON_TASK_SPAWN 208,7167
	ESLURMD_KILL_TASK_FAILED,209,7210
	ESLURMD_KILL_JOB_ALREADY_COMPLETE,210,7237
	ESLURMD_INVALID_ACCT_FREQ,211,7273
	ESLURMD_INVALID_JOB_CREDENTIAL,212,7301
	ESLURMD_UID_NOT_FOUND,213,7334
	ESLURMD_GID_NOT_FOUND,214,7358
	ESLURMD_CREDENTIAL_EXPIRED,215,7382
	ESLURMD_CREDENTIAL_REVOKED,216,7411
	ESLURMD_CREDENTIAL_REPLAYED,217,7440
	ESLURMD_CREATE_BATCH_DIR_ERROR,218,7470
	ESLURMD_MODIFY_BATCH_DIR_ERROR,219,7503
	ESLURMD_CREATE_BATCH_SCRIPT_ERROR,220,7536
	ESLURMD_MODIFY_BATCH_SCRIPT_ERROR,221,7572
	ESLURMD_SETUP_ENVIRONMENT_ERROR,222,7608
	ESLURMD_SHARED_MEMORY_ERROR,223,7642
	ESLURMD_SET_UID_OR_GID_ERROR,224,7672
	ESLURMD_SET_SID_ERROR,225,7703
	ESLURMD_CANNOT_SPAWN_IO_THREAD,226,7727
	ESLURMD_FORK_FAILED,227,7760
	ESLURMD_EXECVE_FAILED,228,7782
	ESLURMD_IO_ERROR,229,7806
	ESLURMD_PROLOG_FAILED,230,7825
	ESLURMD_EPILOG_FAILED,231,7849
	ESLURMD_SESSION_KILLED,232,7873
	ESLURMD_TOOMANYSTEPS,233,7898
	ESLURMD_STEP_EXISTS,234,7921
	ESLURMD_JOB_NOTRUNNING,235,7943
	ESLURMD_STEP_SUSPENDED,236,7968
	ESLURMD_STEP_NOTSUSPENDED,237,7993
	ESCRIPT_CHDIR_FAILED 240,8061
	ESCRIPT_OPEN_OUTPUT_FAILED,241,8093
	ESCRIPT_NON_ZERO_RETURN,242,8122
	SLURM_PROTOCOL_SOCKET_IMPL_ZERO_RECV_LENGTH 245,8199
	SLURM_PROTOCOL_SOCKET_IMPL_NEGATIVE_RECV_LENGTH,246,8252
	SLURM_PROTOCOL_SOCKET_IMPL_NOT_ALL_DATA_SENT,247,8302
	ESLURM_PROTOCOL_INCOMPLETE_PACKET 248,8349
	SLURM_PROTOCOL_SOCKET_IMPL_TIMEOUT 249,8386
	SLURM_PROTOCOL_SOCKET_ZERO_BYTES_SENT,250,8424
	ESLURM_AUTH_CRED_INVALID	253,8490
	ESLURM_AUTH_FOPEN_ERROR,254,8524
	ESLURM_AUTH_NET_ERROR,255,8550
	ESLURM_AUTH_UNABLE_TO_SIGN,256,8574
	ESLURM_DB_CONNECTION 259,8629
	ESLURM_JOBS_RUNNING_ON_ASSOC,260,8670
	ESLURM_CLUSTER_DELETED,261,8701
	ESLURM_ONE_CHANGE,262,8726
	ESLURM_BAD_NAME,263,8746
	ESLURM_OVER_ALLOCATE,264,8764
	ESLURM_MISSING_TIME_LIMIT 267,8820

slurm/smd_ns.h,327
#define _HAVE_SMD_NS_H38,2047
typedef enum {false,false52,2348
typedef enum {false, true}true52,2348
typedef enum {false, true} bool;52,2348
#define FAILED_NODES 81,2973
#define FAILING_NODES 82,3005
#define	SMD_EVENT_NODE_FAILED 89,3211
#define SMD_EVENT_NODE_FAILING 90,3273
#define	SMD_EVENT_NODE_REPLACE 91,3347

slurm/spank.h,2682
#define SPANK_H39,2198
#undef BEGIN_C_DECLS41,2215
#undef END_C_DECLS42,2236
#  define BEGIN_C_DECLS 44,2274
#  define END_C_DECLS 45,2319
#  define BEGIN_C_DECLS 47,2379
#  define END_C_DECLS 48,2423
typedef struct spank_handle * spank_t;53,2556
typedef int (spank_f)57,2646
enum spank_item 142,5428
    S_JOB_UID,143,5446
    S_JOB_GID,144,5526
    S_JOB_ID,145,5606
    S_JOB_STEPID,146,5686
    S_JOB_NNODES,147,5766
    S_JOB_NODEID,148,5846
    S_JOB_LOCAL_TASK_COUNT,149,5926
    S_JOB_TOTAL_TASK_COUNT,150,6006
    S_JOB_NCPUS,151,6086
    S_JOB_ARGV,152,6166
    S_JOB_ENV,153,6246
    S_TASK_ID,154,6326
    S_TASK_GLOBAL_ID,155,6406
    S_TASK_EXIT_STATUS,156,6486
    S_TASK_PID,157,6566
    S_JOB_PID_TO_GLOBAL_ID,158,6646
    S_JOB_PID_TO_LOCAL_ID,159,6726
    S_JOB_LOCAL_TO_GLOBAL_ID,160,6806
    S_JOB_GLOBAL_TO_LOCAL_ID,161,6886
    S_JOB_SUPPLEMENTARY_GIDS,162,6966
    S_SLURM_VERSION,163,7046
    S_SLURM_VERSION_MAJOR,164,7126
    S_SLURM_VERSION_MINOR,165,7206
    S_SLURM_VERSION_MICRO,166,7286
    S_STEP_CPUS_PER_TASK,167,7366
    S_JOB_ALLOC_CORES,169,7522
    S_JOB_ALLOC_MEM,170,7602
    S_STEP_ALLOC_CORES,171,7682
    S_STEP_ALLOC_MEM,172,7762
    S_SLURM_RESTART_COUNT 173,7842
typedef enum spank_item spank_item_t;176,7926
enum spank_err 180,7992
    ESPANK_SUCCESS 181,8009
    ESPANK_ERROR 182,8089
    ESPANK_BAD_ARG 183,8169
    ESPANK_NOT_TASK 184,8249
    ESPANK_ENV_EXISTS 185,8329
    ESPANK_ENV_NOEXIST 186,8409
    ESPANK_NOSPACE 187,8489
    ESPANK_NOT_REMOTE 188,8569
    ESPANK_NOEXIST 189,8649
    ESPANK_NOT_EXECD 190,8729
    ESPANK_NOT_AVAIL 191,8809
    ESPANK_NOT_LOCAL 192,8889
typedef enum spank_err spank_err_t;195,8973
enum spank_context 200,9042
    S_CTX_ERROR,201,9063
    S_CTX_LOCAL,202,9143
    S_CTX_REMOTE,203,9223
    S_CTX_ALLOCATOR,204,9303
    S_CTX_SLURMD,205,9383
    S_CTX_JOB_SCRIPT 206,9463
#define HAVE_S_CTX_SLURMD 209,9547
#define HAVE_S_CTX_JOB_SCRIPT 210,9627
typedef enum spank_context spank_context_t;212,9708
typedef int (*spank_opt_cb_f)spank_opt_cb_f225,10113
struct spank_option 227,10187
    char *         name;228,10209
    char *         arginfo;229,10288
    char *         usage;230,10367
    int            has_arg;231,10446
    int            val;232,10525
    spank_opt_cb_f cb;233,10604
#define SPANK_OPTIONS_TABLE_END 247,11082
#define SPANK_OPTION_MAXLEN 252,11204
extern void slurm_info 415,17285
extern void slurm_error 417,17377
extern void slurm_verbose 419,17470
extern void slurm_debug 421,17565
extern void slurm_debug2 423,17658
extern void slurm_debug3 425,17752
#define SPANK_PLUGIN(434,17948

/home/david/slurm/1403/slurm/slurm/pmi.h,818
#define PMI_H49,2322
#define PMI_SUCCESS 82,3271
#define PMI_FAIL 83,3310
#define PMI_ERR_INIT 84,3349
#define PMI_ERR_NOMEM 85,3388
#define PMI_ERR_INVALID_ARG 86,3427
#define PMI_ERR_INVALID_KEY 87,3466
#define PMI_ERR_INVALID_KEY_LENGTH 88,3505
#define PMI_ERR_INVALID_VAL 89,3544
#define PMI_ERR_INVALID_VAL_LENGTH 90,3583
#define PMI_ERR_INVALID_LENGTH 91,3622
#define PMI_ERR_INVALID_NUM_ARGS 92,3661
#define PMI_ERR_INVALID_ARGS 93,3700
#define PMI_ERR_INVALID_NUM_PARSED 94,3739
#define PMI_ERR_INVALID_KEYVALP 95,3778
#define PMI_ERR_INVALID_SIZE 96,3817
#define PMI_ERR_INVALID_KVS 97,3856
typedef int PMI_BOOL;99,3896
#define PMI_TRUE 100,3918
#define PMI_FALSE 101,3941
typedef struct PMI_keyval_t671,19658
    char * key;673,19688
    char * val;674,19704
} PMI_keyval_t;675,19720

/home/david/slurm/1403/slurm/slurm/slurmdb.h,19741
#define _SLURMDB_H39,2162
#undef BEGIN_C_DECLS44,2357
#undef END_C_DECLS45,2378
# define BEGIN_C_DECLS	47,2416
# define END_C_DECLS	48,2452
# define BEGIN_C_DECLS	50,2481
# define END_C_DECLS	51,2516
#undef PARAMS57,2755
# define PARAMS(61,2909
# define PARAMS(63,2946
	SLURMDB_ADMIN_NOTSET,71,3037
	SLURMDB_ADMIN_NONE,72,3060
	SLURMDB_ADMIN_OPERATOR,73,3081
	SLURMDB_ADMIN_SUPER_USER74,3106
} slurmdb_admin_level_t;75,3132
	SLURMDB_CLASS_NONE,78,3173
	SLURMDB_CLASS_CAPABILITY,79,3215
	SLURMDB_CLASS_CAPACITY,80,3267
	SLURMDB_CLASS_CAPAPACITY,81,3315
} slurmdb_classification_type_t;83,3404
	SLURMDB_EVENT_ALL,86,3453
	SLURMDB_EVENT_CLUSTER,87,3473
	SLURMDB_EVENT_NODE88,3497
} slurmdb_event_type_t;89,3517
	SLURMDB_PROBLEM_NOT_SET,92,3557
	SLURMDB_PROBLEM_ACCT_NO_ASSOC,93,3583
	SLURMDB_PROBLEM_ACCT_NO_USERS,94,3615
	SLURMDB_PROBLEM_USER_NO_ASSOC,95,3647
	SLURMDB_PROBLEM_USER_NO_UID,96,3679
} slurmdb_problem_type_t;97,3709
	SLURMDB_REPORT_SORT_TIME,100,3751
	SLURMDB_REPORT_SORT_NAME101,3778
} slurmdb_report_sort_t;102,3804
	SLURMDB_REPORT_TIME_SECS,105,3845
	SLURMDB_REPORT_TIME_MINS,106,3872
	SLURMDB_REPORT_TIME_HOURS,107,3899
	SLURMDB_REPORT_TIME_PERCENT,108,3927
	SLURMDB_REPORT_TIME_SECS_PER,109,3957
	SLURMDB_REPORT_TIME_MINS_PER,110,3988
	SLURMDB_REPORT_TIME_HOURS_PER,111,4019
} slurmdb_report_time_format_t;112,4051
	SLURMDB_RESOURCE_NOTSET,115,4099
	SLURMDB_RESOURCE_LICENSE,116,4125
} slurmdb_resource_type_t;117,4152
	SLURMDB_UPDATE_NOTSET,120,4195
	SLURMDB_ADD_USER,121,4219
	SLURMDB_ADD_ASSOC,122,4238
	SLURMDB_ADD_COORD,123,4258
	SLURMDB_MODIFY_USER,124,4278
	SLURMDB_MODIFY_ASSOC,125,4300
	SLURMDB_REMOVE_USER,126,4323
	SLURMDB_REMOVE_ASSOC,127,4345
	SLURMDB_REMOVE_COORD,128,4368
	SLURMDB_ADD_QOS,129,4391
	SLURMDB_REMOVE_QOS,130,4409
	SLURMDB_MODIFY_QOS,131,4430
	SLURMDB_ADD_WCKEY,132,4451
	SLURMDB_REMOVE_WCKEY,133,4471
	SLURMDB_MODIFY_WCKEY,134,4494
	SLURMDB_ADD_CLUSTER,135,4517
	SLURMDB_REMOVE_CLUSTER,136,4539
	SLURMDB_REMOVE_ASSOC_USAGE,137,4564
	SLURMDB_ADD_RES,138,4593
	SLURMDB_REMOVE_RES,139,4611
	SLURMDB_MODIFY_RES,140,4632
	SLURMDB_REMOVE_QOS_USAGE,141,4653
} slurmdb_update_type_t;142,4680
#define	QOS_FLAG_BASE 145,4729
#define	QOS_FLAG_NOTSET 146,4777
#define	QOS_FLAG_ADD 147,4825
#define	QOS_FLAG_REMOVE 148,4873
#define	QOS_FLAG_PART_MIN_NODE 150,4922
#define	QOS_FLAG_PART_MAX_NODE 151,4970
#define	QOS_FLAG_PART_TIME_LIMIT 152,5018
#define	QOS_FLAG_ENFORCE_USAGE_THRES 153,5066
#define	QOS_FLAG_NO_RESERVE 154,5114
#define	QOS_FLAG_REQ_RESV 155,5162
#define	QOS_FLAG_DENY_LIMIT 156,5210
#define	SLURMDB_RES_FLAG_BASE 159,5294
#define	SLURMDB_RES_FLAG_NOTSET 160,5372
#define	SLURMDB_RES_FLAG_ADD 161,5420
#define	SLURMDB_RES_FLAG_REMOVE 162,5468
#define SLURMDB_PURGE_BASE 168,5618
#define SLURMDB_PURGE_FLAGS 170,5711
#define SLURMDB_PURGE_HOURS 171,5783
#define SLURMDB_PURGE_DAYS 172,5857
#define SLURMDB_PURGE_MONTHS 173,5930
#define SLURMDB_PURGE_ARCHIVE 175,6029
#define SLURMDB_FS_USE_PARENT 178,6163
#define SLURMDB_CLASSIFIED_FLAG 180,6205
#define SLURMDB_CLASS_BASE 181,6244
#define CLUSTER_FLAG_BG 184,6304
#define CLUSTER_FLAG_BGL 185,6376
#define CLUSTER_FLAG_BGP 186,6450
#define CLUSTER_FLAG_BGQ 187,6524
#define CLUSTER_FLAG_SC 188,6598
#define CLUSTER_FLAG_XCPU 189,6679
#define CLUSTER_FLAG_AIX 190,6738
#define CLUSTER_FLAG_MULTSD 191,6806
#define CLUSTER_FLAG_CRAYXT 192,6883
#define CLUSTER_FLAG_CRAY_A 194,6991
#define CLUSTER_FLAG_FE 195,7064
#define CLUSTER_FLAG_CRAY_N 196,7144
#define CLUSTER_FLAG_CRAY 200,7247
#  define  __assoc_mgr_association_usage_t_defined206,7495
typedef struct assoc_mgr_association_usage assoc_mgr_association_usage_t;208,7569
#  define  __assoc_mgr_qos_usage_t_defined214,7781
typedef struct assoc_mgr_qos_usage assoc_mgr_qos_usage_t;216,7847
	List acct_list;227,8148
	List cluster_list;228,8187
	List def_qos_id_list;230,8229
	List fairshare_list;232,8276
	List grp_cpu_mins_list;234,8322
	List grp_cpu_run_mins_list;235,8368
	List grp_cpus_list;236,8418
	List grp_jobs_list;237,8460
	List grp_mem_list;238,8502
	List grp_nodes_list;239,8543
	List grp_submit_jobs_list;240,8586
	List grp_wall_list;241,8635
	List id_list;243,8678
	List max_cpu_mins_pj_list;245,8714
	List max_cpu_run_mins_list;246,8763
	List max_cpus_pj_list;247,8813
	List max_jobs_list;248,8858
	List max_nodes_pj_list;249,8900
	List max_submit_jobs_list;250,8946
	List max_wall_pj_list;251,8995
	uint16_t only_defs;253,9041
	List parent_acct_list;255,9094
	List partition_list;256,9147
	List qos_list;258,9191
	time_t usage_end;260,9229
	time_t usage_start;261,9248
	List user_list;263,9270
	uint16_t with_usage;265,9310
	uint16_t with_deleted;266,9353
	uint16_t with_raw_qos;267,9411
	uint16_t with_sub_accts;268,9471
	uint16_t without_parent_info;269,9536
	uint16_t without_parent_limits;270,9602
} slurmdb_association_cond_t;272,9683
	List acct_list;278,9833
	List associd_list;279,9872
	List cluster_list;280,9911
	uint32_t cpus_max;281,9952
	uint32_t cpus_min;282,10009
	uint16_t duplicates;283,10065
	int32_t exitcode;284,10125
	List groupid_list;285,10173
	List jobname_list;286,10214
	uint32_t nodes_max;287,10255
	uint32_t nodes_min;288,10313
	List partition_list;289,10370
	List qos_list;290,10413
	List resv_list;291,10452
	List resvid_list;292,10491
	List state_list;293,10531
	List step_list;294,10577
	uint32_t timelimit_max;295,10640
	uint32_t timelimit_min;296,10685
	time_t usage_end;297,10730
	time_t usage_start;298,10749
	char *used_nodes;used_nodes299,10770
	List userid_list;300,10837
	List wckey_list;301,10877
	uint16_t without_steps;302,10916
	uint16_t without_usage_truncation;303,10971
} slurmdb_job_cond_t;307,11131
	double act_cpufreq;313,11266
	double cpu_ave;314,11331
	double consumed_energy;315,11348
	uint32_t cpu_min;316,11417
	uint32_t cpu_min_nodeid;317,11436
	uint32_t cpu_min_taskid;318,11505
	double disk_read_ave;319,11574
	double disk_read_max;320,11643
	uint32_t disk_read_max_nodeid;321,11712
	uint32_t disk_read_max_taskid;322,11783
	double disk_write_ave;323,11852
	double disk_write_max;324,11923
	uint32_t disk_write_max_nodeid;325,11994
	uint32_t disk_write_max_taskid;326,12066
	double pages_ave;327,12136
	uint64_t pages_max;328,12155
	uint32_t pages_max_nodeid;329,12176
	uint32_t pages_max_taskid;330,12247
	double rss_ave;331,12318
	uint64_t rss_max;332,12335
	uint32_t rss_max_nodeid;333,12354
	uint32_t rss_max_taskid;334,12423
	double vsize_ave;335,12492
	uint64_t vsize_max;336,12511
	uint32_t vsize_max_nodeid;337,12532
	uint32_t vsize_max_taskid;338,12603
} slurmdb_stats_t;339,12674
	slurmdb_association_cond_t *assoc_cond;assoc_cond344,12777
	List description_list;346,12860
	List organization_list;347,12905
	uint16_t with_assocs;348,12951
	uint16_t with_coords;349,12974
	uint16_t with_deleted;350,12997
} slurmdb_account_cond_t;351,13021
	List assoc_list;354,13065
	List coordinators;355,13127
	char *description;description356,13185
	char *name;name357,13205
	char *organization;organization358,13218
} slurmdb_account_rec_t;359,13239
	uint64_t alloc_secs;362,13282
	uint64_t consumed_energy;363,13342
	uint32_t id;364,13402
	time_t period_start;365,13444
} slurmdb_accounting_rec_t;366,13501
	char *archive_dir;archive_dir369,13547
	char *archive_script;archive_script370,13608
	slurmdb_job_cond_t *job_cond;job_cond372,13685
	uint32_t purge_event;373,13757
	uint32_t purge_job;377,13920
	uint32_t purge_resv;381,14073
	uint32_t purge_step;385,14238
	uint32_t purge_suspend;389,14396
} slurmdb_archive_cond_t;393,14552
	char *archive_file;archive_file396,14596
	char *insert;insert398,14697
} slurmdb_archive_rec_t;400,14798
	List accounting_list;405,14905
	char *acct;acct406,14975
	char *cluster;cluster408,15050
	uint32_t def_qos_id;410,15111
	uint64_t grp_cpu_mins;413,15198
	uint64_t grp_cpu_run_mins;416,15327
	uint32_t grp_cpus;420,15486
	uint32_t grp_jobs;423,15621
	uint32_t grp_mem;426,15746
	uint32_t grp_nodes;429,15879
	uint32_t grp_submit_jobs;432,16011
	uint32_t grp_wall;436,16154
	uint32_t id;440,16278
	uint16_t is_def;443,16377
	uint32_t lft;445,16449
	uint64_t max_cpu_mins_pj;449,16582
	uint64_t max_cpu_run_mins;451,16686
	uint32_t max_cpus_pj;454,16815
	uint32_t max_jobs;456,16916
	uint32_t max_nodes_pj;458,17011
	uint32_t max_submit_jobs;460,17113
	uint32_t max_wall_pj;462,17213
	char *parent_acct;parent_acct465,17302
	uint32_t parent_id;466,17354
	char *partition;partition467,17405
	List qos_list;470,17501
	uint32_t rgt;472,17551
	uint32_t shares_raw;476,17685
	uint32_t uid;479,17769
	assoc_mgr_association_usage_t *usage;usage480,17802
	char *user;user481,17841
} slurmdb_association_rec_t;482,17895
	uint16_t classification;485,17942
	List cluster_list;486,18005
	uint32_t flags;487,18046
	List plugin_id_select_list;488,18063
	List rpc_version_list;489,18113
	time_t usage_end;490,18158
	time_t usage_start;491,18177
	uint16_t with_deleted;492,18198
	uint16_t with_usage;493,18222
} slurmdb_cluster_cond_t;494,18244
	List accounting_list;497,18288
	uint16_t classification;498,18362
	slurm_addr_t control_addr;499,18425
	char *control_host;control_host501,18510
	uint32_t control_port;502,18531
	uint32_t cpu_count;503,18555
	uint16_t dimensions;504,18576
	int *dim_size;dim_size505,18641
	uint32_t flags;509,18818
	char *name;name510,18868
	char *nodes;nodes511,18881
	uint32_t plugin_id_select;512,18895
	slurmdb_association_rec_t *root_assoc;root_assoc513,18953
	uint16_t rpc_version;515,19036
} slurmdb_cluster_rec_t;516,19103
	uint64_t alloc_secs;519,19146
	uint64_t consumed_energy;520,19206
	uint32_t cpu_count;521,19266
	uint64_t down_secs;522,19327
	uint64_t idle_secs;523,19381
	uint64_t over_secs;524,19435
	uint64_t pdown_secs;525,19498
	time_t period_start;526,19561
	uint64_t resv_secs;527,19618
} slurmdb_cluster_accounting_rec_t;528,19676
	char *cluster;cluster531,19730
	uint16_t percent_allowed;532,19768
} slurmdb_clus_res_rec_t;534,19865
	char *name;name537,19909
	uint16_t direct;538,19922
} slurmdb_coord_rec_t;539,19940
	List cluster_list;542,19981
	uint32_t cpus_max;543,20022
	uint32_t cpus_min;544,20079
	uint16_t event_type;545,20135
	List node_list;547,20227
	time_t period_end;548,20273
	time_t period_start;549,20325
	List reason_list;550,20379
	List reason_uid_list;551,20425
	List state_list;552,20471
} slurmdb_event_cond_t;553,20517
	char *cluster;cluster556,20559
	char *cluster_nodes;cluster_nodes557,20617
	uint32_t cpu_count;559,20725
	uint16_t event_type;560,20789
	char *node_name;node_name561,20857
	time_t period_end;562,20928
	time_t period_start;563,20973
	char *reason;reason564,21020
	uint32_t reason_uid;566,21128
	uint16_t state;567,21190
} slurmdb_event_rec_t;569,21288
	char *cluster;cluster575,21386
	uint32_t job_id;576,21402
} slurmdb_job_modify_cond_t;577,21420
	uint32_t alloc_cpus;580,21467
	uint32_t alloc_nodes;581,21489
	char    *account;account582,21512
	uint32_t associd;583,21531
	char	*blockid;blockid584,21550
	char    *cluster;cluster585,21566
	uint32_t derived_ec;586,21585
	char	*derived_es;derived_es587,21607
	uint32_t elapsed;588,21646
	time_t eligible;589,21665
	time_t end;590,21683
	uint32_t exitcode;591,21696
	void *first_step_ptr;first_step_ptr592,21716
	uint32_t gid;593,21739
	uint32_t jobid;594,21754
	char	*jobname;jobname595,21771
	uint32_t lft;596,21787
	char	*partition;partition597,21802
	char	*nodes;nodes598,21820
	uint32_t priority;599,21834
	uint32_t qosid;600,21854
	uint32_t req_cpus;601,21871
	uint32_t req_mem;602,21891
	uint32_t requid;603,21910
	uint32_t resvid;604,21928
	uint32_t show_full;605,21946
	time_t start;606,21967
	uint16_t	state;607,21982
	slurmdb_stats_t stats;608,21999
	List    steps;609,22023
	time_t submit;610,22076
	uint32_t suspended;611,22092
	uint32_t sys_cpu_sec;612,22113
	uint32_t sys_cpu_usec;613,22136
	uint32_t timelimit;614,22160
	uint32_t tot_cpu_sec;615,22181
	uint32_t tot_cpu_usec;616,22204
	uint16_t track_steps;617,22228
	uint32_t uid;618,22251
	char    *user;user619,22266
	uint32_t user_cpu_sec;620,22282
	uint32_t user_cpu_usec;621,22306
	char    *wckey;wckey622,22331
	uint32_t wckeyid;623,22348
} slurmdb_job_rec_t;624,22367
	char *description;description627,22406
	uint32_t id;628,22426
	uint32_t flags;629,22440
	uint32_t grace_time;631,22530
	uint64_t grp_cpu_mins;632,22580
	uint64_t grp_cpu_run_mins;634,22686
	uint32_t grp_cpus;637,22829
	uint32_t grp_jobs;639,22917
	uint32_t grp_mem;641,22998
	uint32_t grp_nodes;643,23086
	uint32_t grp_submit_jobs;645,23173
	uint32_t grp_wall;647,23266
	uint64_t max_cpu_mins_pj;649,23334
	uint64_t max_cpu_run_mins_pu;651,23427
	uint32_t max_cpus_pj;654,23592
	uint32_t max_cpus_pu;656,23685
	uint32_t max_jobs_pu;658,23791
	uint32_t max_nodes_pj;660,23887
	uint32_t max_nodes_pu;662,23988
	uint32_t max_submit_jobs_pu;664,24090
	uint32_t max_wall_pj;666,24190
	char *name;name669,24268
	bitstr_t *preempt_bitstr;preempt_bitstr670,24281
	List preempt_list;671,24346
	uint16_t preempt_mode;674,24507
	uint32_t priority;675,24573
	assoc_mgr_qos_usage_t *usage;usage677,24667
	double usage_factor;678,24738
	double usage_thres;679,24803
} slurmdb_qos_rec_t;682,24940
	List description_list;685,24979
	List id_list;686,25024
	List name_list;687,25060
	uint16_t preempt_mode;688,25098
	uint16_t with_deleted;689,25164
} slurmdb_qos_cond_t;690,25188
	List cluster_list;693,25228
	uint16_t flags;695,25306
	List id_list;696,25352
	List name_list;697,25411
	char *nodes;nodes698,25471
	time_t time_end;699,25520
	time_t time_start;700,25568
	uint16_t with_usage;701,25620
} slurmdb_reservation_cond_t;702,25675
	uint64_t alloc_secs;705,25723
	char *assocs;assocs706,25783
	char *cluster;cluster707,25841
	uint32_t cpus;708,25890
	uint64_t down_secs;709,25945
	uint32_t flags;710,25999
	uint32_t id;711,26045
	char *name;name712,26086
	char *nodes;nodes713,26125
	char *node_inx;node_inx714,26174
	time_t time_end;715,26232
	time_t time_start;716,26280
	time_t time_start_prev;717,26332
} slurmdb_reservation_rec_t;720,26459
	uint32_t jobid;723,26506
	uint32_t stepid;724,26523
} slurmdb_selected_step_t;725,26541
	uint32_t elapsed;728,26586
	time_t end;729,26605
	int32_t exitcode;730,26618
	slurmdb_job_rec_t *job_ptr;job_ptr731,26637
	uint32_t ncpus;732,26666
	uint32_t nnodes;733,26683
	char *nodes;nodes734,26701
	uint32_t ntasks;735,26715
	char *pid_str;pid_str736,26733
	uint32_t req_cpufreq;737,26749
	uint32_t requid;738,26772
	time_t start;739,26790
	enum job_states	state;740,26805
	slurmdb_stats_t stats;741,26829
	uint32_t stepid;742,26853
	char *stepname;stepname743,26895
	uint32_t suspended;744,26912
	uint32_t sys_cpu_sec;745,26933
	uint32_t sys_cpu_usec;746,26956
	uint16_t task_dist;747,26980
	uint32_t tot_cpu_sec;748,27001
	uint32_t tot_cpu_usec;749,27024
	uint32_t user_cpu_sec;750,27048
	uint32_t user_cpu_usec;751,27072
} slurmdb_step_rec_t;752,27097
	List cluster_list;757,27187
	List description_list;758,27228
	uint32_t flags;759,27273
	List id_list;760,27290
	List manager_list;761,27326
	List name_list;762,27367
	List percent_list;763,27405
	List server_list;764,27446
	List type_list;765,27486
	uint16_t with_deleted;766,27524
	uint16_t with_clusters;767,27548
} slurmdb_res_cond_t;768,27573
	List clus_res_list;771,27613
	slurmdb_clus_res_rec_t *clus_res_rec;clus_res_rec772,27675
	uint32_t count;774,27765
	char *description;description775,27829
	uint32_t flags;776,27849
	uint32_t id;777,27897
	char *manager;manager778,27911
	char *name;name779,27956
	uint16_t percent_used;780,27969
	char *server;server781,27993
	uint32_t type;782,28036
} slurmdb_res_rec_t;783,28072
	List acct_list;786,28111
	List action_list;787,28149
	List actor_list;788,28189
	List cluster_list;789,28228
	List id_list;790,28269
	List info_list;791,28305
	List name_list;792,28343
	time_t time_end;793,28381
	time_t time_start;794,28399
	List user_list;795,28419
	uint16_t with_assoc_info;796,28457
} slurmdb_txn_cond_t;797,28484
	char *accts;accts800,28524
	uint16_t action;801,28538
	char *actor_name;actor_name802,28556
	char *clusters;clusters803,28575
	uint32_t id;804,28592
	char *set_info;set_info805,28606
	time_t timestamp;806,28623
	char *users;users807,28642
	char *where_query;where_query808,28656
} slurmdb_txn_rec_t;809,28676
	uint64_t cpu_run_mins;814,28808
	uint32_t cpus;816,28886
	uint32_t jobs;817,28932
	uint32_t nodes;818,28975
	uint32_t submit_jobs;819,29023
	uint32_t uid;820,29085
} slurmdb_used_limits_t;821,29100
	uint16_t admin_level;824,29143
	slurmdb_association_cond_t *assoc_cond;assoc_cond826,29252
	List def_acct_list;829,29381
	List def_wckey_list;835,29670
	uint16_t with_assocs;836,29713
	uint16_t with_coords;837,29736
	uint16_t with_deleted;838,29759
	uint16_t with_wckeys;839,29783
	uint16_t without_defaults;840,29806
} slurmdb_user_cond_t;841,29834
	uint16_t admin_level;844,29875
	List assoc_list;846,29984
	List coord_accts;847,30046
	char *default_acct;default_acct848,30103
	char *default_wckey;default_wckey849,30124
	char *name;name850,30146
	char *old_name;old_name851,30159
	uint32_t uid;852,30176
	List wckey_list;853,30191
} slurmdb_user_rec_t;854,30247
	List objects;857,30287
	uint16_t type;858,30326
} slurmdb_update_object_t;861,30435
	List cluster_list;864,30480
	List id_list;865,30521
	List name_list;867,30559
	uint16_t only_defs;869,30606
	time_t usage_end;871,30664
	time_t usage_start;872,30683
	List user_list;874,30705
	uint16_t with_usage;876,30745
	uint16_t with_deleted;877,30790
} slurmdb_wckey_cond_t;878,30849
	List accounting_list;881,30891
	char *cluster;cluster883,30959
	uint32_t id;885,31002
	uint16_t is_def;887,31080
	char *name;name889,31144
	uint32_t uid;890,31175
	char *user;user892,31206
} slurmdb_wckey_rec_t;893,31242
	char *name;name896,31283
	char *print_name;print_name897,31296
	char *spaces;spaces898,31315
	uint16_t user;899,31330
} slurmdb_print_tree_t;901,31405
	slurmdb_association_rec_t *assoc;assoc904,31447
	char *sort_name;sort_name905,31482
	List children;906,31500
} slurmdb_hierarchical_rec_t;907,31516
	char *acct;acct912,31624
	char *cluster;cluster913,31637
	uint64_t consumed_energy;914,31653
	uint64_t cpu_secs;915,31680
	char *parent_acct;parent_acct916,31700
	char *user;user917,31720
} slurmdb_report_assoc_rec_t;918,31733
	char *acct;acct921,31781
	List acct_list;922,31794
	List assoc_list;923,31834
	uint64_t consumed_energy;924,31895
	uint64_t cpu_secs;925,31922
	char *name;name926,31942
	uid_t uid;927,31955
} slurmdb_report_user_rec_t;928,31967
	List assoc_list;931,32014
	uint64_t consumed_energy;932,32077
	uint32_t cpu_count;933,32104
	uint64_t cpu_secs;934,32125
	char *name;name935,32145
	List user_list;936,32158
} slurmdb_report_cluster_rec_t;937,32219
	List jobs;940,32269
	uint32_t min_size;943,32427
	uint32_t max_size;944,32498
	uint32_t count;946,32583
	uint64_t cpu_secs;947,32620
} slurmdb_report_job_grouping_t;949,32700
	char *acct;acct952,32751
	uint32_t count;953,32782
	uint64_t cpu_secs;954,32847
	List groups;956,32923
	uint32_t lft;957,32985
	uint32_t rgt;958,33000
} slurmdb_report_acct_grouping_t;959,33015
	char *cluster;cluster962,33067
	uint32_t count;963,33101
	uint64_t cpu_secs;964,33169
	List acct_list;966,33248
} slurmdb_report_cluster_grouping_t;967,33315

/home/david/slurm/1403/slurm/slurm/slurm_errno.h,6472
#define _SLURM_ERRNO_H41,2281
#undef BEGIN_C_DECLS46,2481
#undef END_C_DECLS47,2502
# define BEGIN_C_DECLS	49,2540
# define END_C_DECLS	50,2576
# define BEGIN_C_DECLS	52,2605
# define END_C_DECLS	53,2640
#undef PARAMS59,2879
# define PARAMS(63,3031
# define PARAMS(65,3068
#define slurm_seterrno_ret(73,3194
#define SLURM_SUCCESS 79,3347
#define SLURM_ERROR 80,3373
#define SLURM_FAILURE 81,3399
#define SLURM_SOCKET_ERROR 84,3473
#define SLURM_PROTOCOL_SUCCESS 85,3507
#define SLURM_PROTOCOL_ERROR 86,3541
	SLURM_UNEXPECTED_MSG_ERROR 90,3618
	SLURM_COMMUNICATIONS_CONNECTION_ERROR,91,3657
	SLURM_COMMUNICATIONS_SEND_ERROR,92,3697
	SLURM_COMMUNICATIONS_RECEIVE_ERROR,93,3731
	SLURM_COMMUNICATIONS_SHUTDOWN_ERROR,94,3768
	SLURM_PROTOCOL_VERSION_ERROR,95,3806
	SLURM_PROTOCOL_IO_STREAM_VERSION_ERROR,96,3837
	SLURM_PROTOCOL_AUTHENTICATION_ERROR,97,3878
	SLURM_PROTOCOL_INSANE_MSG_LENGTH,98,3916
	SLURM_MPI_PLUGIN_NAME_INVALID,99,3951
	SLURM_MPI_PLUGIN_PRELAUNCH_SETUP_FAILED,100,3983
	SLURM_PLUGIN_NAME_INVALID,101,4025
	SLURM_UNKNOWN_FORWARD_ADDR,102,4053
	SLURMCTLD_COMMUNICATIONS_CONNECTION_ERROR 105,4131
	SLURMCTLD_COMMUNICATIONS_SEND_ERROR,106,4186
	SLURMCTLD_COMMUNICATIONS_RECEIVE_ERROR,107,4224
	SLURMCTLD_COMMUNICATIONS_SHUTDOWN_ERROR,108,4265
	SLURM_NO_CHANGE_IN_DATA 111,4374
	ESLURM_INVALID_PARTITION_NAME 114,4439
	ESLURM_DEFAULT_PARTITION_NOT_SET,115,4480
	ESLURM_ACCESS_DENIED,116,4515
	ESLURM_JOB_MISSING_REQUIRED_PARTITION_GROUP,117,4538
	ESLURM_REQUESTED_NODES_NOT_IN_PARTITION,118,4584
	ESLURM_TOO_MANY_REQUESTED_CPUS,119,4626
	ESLURM_INVALID_NODE_COUNT,120,4659
	ESLURM_ERROR_ON_DESC_TO_RECORD_COPY,121,4687
	ESLURM_JOB_MISSING_SIZE_SPECIFICATION,122,4725
	ESLURM_JOB_SCRIPT_MISSING,123,4765
	ESLURM_USER_ID_MISSING 124,4793
	ESLURM_DUPLICATE_JOB_ID,125,4827
	ESLURM_PATHNAME_TOO_LONG,126,4853
	ESLURM_NOT_TOP_PRIORITY,127,4880
	ESLURM_REQUESTED_NODE_CONFIG_UNAVAILABLE,128,4906
	ESLURM_REQUESTED_PART_CONFIG_UNAVAILABLE,129,4949
	ESLURM_NODES_BUSY,130,4992
	ESLURM_INVALID_JOB_ID,131,5012
	ESLURM_INVALID_NODE_NAME,132,5036
	ESLURM_WRITING_TO_FILE,133,5063
	ESLURM_TRANSITION_STATE_NO_UPDATE 134,5088
	ESLURM_ALREADY_DONE,135,5132
	ESLURM_INTERCONNECT_FAILURE,136,5154
	ESLURM_BAD_DIST,137,5184
	ESLURM_JOB_PENDING,138,5202
	ESLURM_BAD_TASK_COUNT,139,5223
	ESLURM_INVALID_JOB_CREDENTIAL,140,5247
	ESLURM_IN_STANDBY_MODE,141,5279
	ESLURM_INVALID_NODE_STATE,142,5304
	ESLURM_INVALID_FEATURE,143,5332
	ESLURM_INVALID_AUTHTYPE_CHANGE 144,5357
	ESLURM_INVALID_CHECKPOINT_TYPE_CHANGE,145,5398
	ESLURM_INVALID_SCHEDTYPE_CHANGE,146,5438
	ESLURM_INVALID_SELECTTYPE_CHANGE,147,5472
	ESLURM_INVALID_SWITCHTYPE_CHANGE,148,5507
	ESLURM_FRAGMENTATION,149,5542
	ESLURM_NOT_SUPPORTED,150,5565
	ESLURM_DISABLED,151,5588
	ESLURM_DEPENDENCY,152,5606
	ESLURM_BATCH_ONLY,153,5626
	ESLURM_TASKDIST_ARBITRARY_UNSUPPORTED 154,5646
	ESLURM_TASKDIST_REQUIRES_OVERCOMMIT,155,5694
	ESLURM_JOB_HELD,156,5732
	ESLURM_INVALID_CRYPTO_TYPE_CHANGE,157,5750
	ESLURM_INVALID_TASK_MEMORY,158,5786
	ESLURM_INVALID_ACCOUNT,159,5815
	ESLURM_INVALID_PARENT_ACCOUNT,160,5840
	ESLURM_SAME_PARENT_ACCOUNT,161,5872
	ESLURM_INVALID_LICENSES,162,5901
	ESLURM_NEED_RESTART,163,5927
	ESLURM_ACCOUNTING_POLICY 164,5949
	ESLURM_INVALID_TIME_LIMIT,165,5985
	ESLURM_RESERVATION_ACCESS,166,6013
	ESLURM_RESERVATION_INVALID,167,6041
	ESLURM_INVALID_TIME_VALUE,168,6070
	ESLURM_RESERVATION_BUSY,169,6098
	ESLURM_RESERVATION_NOT_USABLE,170,6124
	ESLURM_INVALID_WCKEY,171,6156
	ESLURM_RESERVATION_OVERLAP,172,6179
	ESLURM_PORTS_BUSY,173,6208
	ESLURM_PORTS_INVALID 174,6228
	ESLURM_PROLOG_RUNNING,175,6261
	ESLURM_NO_STEPS,176,6285
	ESLURM_INVALID_BLOCK_STATE,177,6303
	ESLURM_INVALID_BLOCK_LAYOUT,178,6332
	ESLURM_INVALID_BLOCK_NAME,179,6362
	ESLURM_INVALID_QOS,180,6390
	ESLURM_QOS_PREEMPTION_LOOP,181,6411
	ESLURM_NODE_NOT_AVAIL,182,6440
	ESLURM_INVALID_CPU_COUNT,183,6464
	ESLURM_PARTITION_NOT_AVAIL 184,6491
	ESLURM_CIRCULAR_DEPENDENCY,185,6529
	ESLURM_INVALID_GRES,186,6558
	ESLURM_JOB_NOT_PENDING,187,6580
	ESLURM_QOS_THRES,188,6605
	ESLURM_PARTITION_IN_USE,189,6624
	ESLURM_STEP_LIMIT,190,6650
	ESLURM_JOB_SUSPENDED,191,6670
	ESLURM_CAN_NOT_START_IMMEDIATELY,192,6693
	ESLURM_INTERCONNECT_BUSY,193,6728
	ESLURM_RESERVATION_EMPTY,194,6755
	ESLURM_INVALID_ARRAY,195,6782
	ESLURM_RESERVATION_NAME_DUP,196,6805
	ESLURM_SWITCH_MIN 199,6913
	ESLURM_SWITCH_MAX 200,6940
	ESLURM_JOBCOMP_MIN 201,6967
	ESLURM_JOBCOMP_MAX 202,6995
	ESLURM_SCHED_MIN 203,7023
	ESLURM_SCHED_MAX 204,7049
	ESLRUMD_PIPE_ERROR_ON_TASK_SPAWN 208,7167
	ESLURMD_KILL_TASK_FAILED,209,7210
	ESLURMD_KILL_JOB_ALREADY_COMPLETE,210,7237
	ESLURMD_INVALID_ACCT_FREQ,211,7273
	ESLURMD_INVALID_JOB_CREDENTIAL,212,7301
	ESLURMD_UID_NOT_FOUND,213,7334
	ESLURMD_GID_NOT_FOUND,214,7358
	ESLURMD_CREDENTIAL_EXPIRED,215,7382
	ESLURMD_CREDENTIAL_REVOKED,216,7411
	ESLURMD_CREDENTIAL_REPLAYED,217,7440
	ESLURMD_CREATE_BATCH_DIR_ERROR,218,7470
	ESLURMD_MODIFY_BATCH_DIR_ERROR,219,7503
	ESLURMD_CREATE_BATCH_SCRIPT_ERROR,220,7536
	ESLURMD_MODIFY_BATCH_SCRIPT_ERROR,221,7572
	ESLURMD_SETUP_ENVIRONMENT_ERROR,222,7608
	ESLURMD_SHARED_MEMORY_ERROR,223,7642
	ESLURMD_SET_UID_OR_GID_ERROR,224,7672
	ESLURMD_SET_SID_ERROR,225,7703
	ESLURMD_CANNOT_SPAWN_IO_THREAD,226,7727
	ESLURMD_FORK_FAILED,227,7760
	ESLURMD_EXECVE_FAILED,228,7782
	ESLURMD_IO_ERROR,229,7806
	ESLURMD_PROLOG_FAILED,230,7825
	ESLURMD_EPILOG_FAILED,231,7849
	ESLURMD_SESSION_KILLED,232,7873
	ESLURMD_TOOMANYSTEPS,233,7898
	ESLURMD_STEP_EXISTS,234,7921
	ESLURMD_JOB_NOTRUNNING,235,7943
	ESLURMD_STEP_SUSPENDED,236,7968
	ESLURMD_STEP_NOTSUSPENDED,237,7993
	ESCRIPT_CHDIR_FAILED 240,8061
	ESCRIPT_OPEN_OUTPUT_FAILED,241,8093
	ESCRIPT_NON_ZERO_RETURN,242,8122
	SLURM_PROTOCOL_SOCKET_IMPL_ZERO_RECV_LENGTH 245,8199
	SLURM_PROTOCOL_SOCKET_IMPL_NEGATIVE_RECV_LENGTH,246,8252
	SLURM_PROTOCOL_SOCKET_IMPL_NOT_ALL_DATA_SENT,247,8302
	ESLURM_PROTOCOL_INCOMPLETE_PACKET 248,8349
	SLURM_PROTOCOL_SOCKET_IMPL_TIMEOUT 249,8386
	SLURM_PROTOCOL_SOCKET_ZERO_BYTES_SENT,250,8424
	ESLURM_AUTH_CRED_INVALID	253,8490
	ESLURM_AUTH_FOPEN_ERROR,254,8524
	ESLURM_AUTH_NET_ERROR,255,8550
	ESLURM_AUTH_UNABLE_TO_SIGN,256,8574
	ESLURM_DB_CONNECTION 259,8629
	ESLURM_JOBS_RUNNING_ON_ASSOC,260,8670
	ESLURM_CLUSTER_DELETED,261,8701
	ESLURM_ONE_CHANGE,262,8726
	ESLURM_BAD_NAME,263,8746
	ESLURM_OVER_ALLOCATE,264,8764
	ESLURM_MISSING_TIME_LIMIT 267,8820

/home/david/slurm/1403/slurm/slurm/slurm.h.in,52772
#define _SLURM_H44,2425
#undef BEGIN_C_DECLS49,2618
#undef END_C_DECLS50,2639
# define BEGIN_C_DECLS	52,2677
# define END_C_DECLS	53,2713
# define BEGIN_C_DECLS	55,2742
# define END_C_DECLS	56,2777
#undef PARAMS62,3016
# define PARAMS(66,3170
# define PARAMS(68,3207
#undef HAVE_BG72,3298
#undef HAVE_BGL75,3378
#undef HAVE_BGP78,3459
#undef HAVE_BG_L_P81,3542
#undef HAVE_BGQ84,3626
#define SYSTEM_DIMENSIONS 87,3685
#define HIGHEST_DIMENSIONS 88,3713
#undef HAVE_ELAN91,3804
#undef HAVE_SYS_SOCKET_H94,3884
#define DEFAULT_WAIT_ALL_NODES 98,3995
#undef  TRUE129,4853
#define TRUE 130,4866
#undef  FALSE132,4884
#define FALSE 133,4898
typedef unsigned char SLURM_BOOL;135,4916
#undef  bool136,4950
#define bool 137,4963
#    define  __slurm_addr_t_defined144,5157
typedef struct sockaddr_in slurm_addr_t;145,5193
#  define PRIu64 153,5366
#  define __slurm_cred_t_defined157,5428
typedef struct slurm_job_credential slurm_cred_t;158,5461
#  define  __switch_jobinfo_t_defined163,5634
typedef struct switch_jobinfo switch_jobinfo_t;164,5672
#  define  __job_resources_t_defined	170,5867
typedef struct job_resources job_resources_t;171,5941
#  define  __select_jobinfo_t_defined	177,6132
typedef struct select_jobinfo select_jobinfo_t;178,6207
typedef struct select_nodeinfo select_nodeinfo_t;179,6275
#  define  __jobacctinfo_t_defined184,6462
typedef struct jobacctinfo jobacctinfo_t;185,6497
#  define  __allocation_msg_thread_t_defined191,6706
typedef struct allocation_msg_thread allocation_msg_thread_t;192,6751
#  define  __sbcast_cred_t_defined196,6853
typedef struct sbcast_cred sbcast_cred_t;197,6888
#undef  SLURM_VERSION_NUMBER211,7523
#define SLURM_VERSION_NUM(212,7552
#define SLURM_VERSION_MAJOR(213,7618
#define SLURM_VERSION_MINOR(214,7672
#define SLURM_VERSION_MICRO(215,7726
#define	INFINITE 223,8107
#define NO_VAL	224,8137
#define MAX_TASKS_PER_NODE 225,8166
#define SLURM_BATCH_SCRIPT 228,8233
#define SLURM_ID_HASH_NUM 230,8274
#define SLURM_ID_HASH(249,8905
#define SLURM_ID_HASH_JOB_ID(251,9006
#define SLURM_ID_HASH_STEP_ID(252,9084
enum job_states 257,9317
	JOB_PENDING,258,9335
	JOB_RUNNING,259,9386
	JOB_SUSPENDED,260,9441
	JOB_COMPLETE,261,9505
	JOB_CANCELLED,262,9560
	JOB_FAILED,263,9601
	JOB_TIMEOUT,264,9656
	JOB_NODE_FAIL,265,9711
	JOB_PREEMPTED,266,9761
	JOB_BOOT_FAIL,267,9813
	JOB_END	268,9872
#define	JOB_STATE_BASE	270,9930
#define	JOB_STATE_FLAGS	271,9992
#define	JOB_COMPLETING	272,10056
#define	JOB_CONFIGURING	273,10122
#define	JOB_RESIZING	274,10183
#define JOB_SPECIAL_EXIT 277,10341
#define JOB_REQUEUE_HOLD 278,10407
#define JOB_REQUEUE 279,10469
#define READY_JOB_FATAL	281,10540
#define READY_JOB_ERROR 282,10588
#define READY_NODE_STATE 283,10639
#define READY_JOB_STATE 284,10689
#define MAIL_JOB_BEGIN 286,10750
#define MAIL_JOB_END 287,10812
#define MAIL_JOB_FAIL 288,10872
#define MAIL_JOB_REQUEUE 289,10931
#define NICE_OFFSET 291,10994
enum job_state_reason 296,11225
	WAIT_NO_REASON 298,11285
	WAIT_PRIORITY,299,11339
	WAIT_DEPENDENCY,300,11389
	WAIT_RESOURCES,301,11445
	WAIT_PART_NODE_LIMIT,302,11502
	WAIT_PART_TIME_LIMIT,303,11568
	WAIT_PART_DOWN,304,11634
	WAIT_PART_INACTIVE,305,11686
	WAIT_HELD,306,11745
	WAIT_TIME,307,11793
	WAIT_LICENSES,308,11848
	WAIT_ASSOC_JOB_LIMIT,309,11899
	WAIT_ASSOC_RESOURCE_LIMIT,310,11956
	WAIT_ASSOC_TIME_LIMIT,311,12022
	WAIT_RESERVATION,312,12082
	WAIT_NODE_NOT_AVAIL,313,12133
	WAIT_HELD_USER,314,12194
	WAIT_FRONT_END,315,12238
	FAIL_DOWN_PARTITION,316,12287
	FAIL_DOWN_NODE,317,12341
	FAIL_BAD_CONSTRAINTS,318,12400
	FAIL_SYSTEM,319,12462
	FAIL_LAUNCH,320,12504
	FAIL_EXIT_CODE,321,12546
	FAIL_TIMEOUT,322,12593
	FAIL_INACTIVE_LIMIT,323,12641
	FAIL_ACCOUNT,324,12697
	FAIL_QOS,325,12735
	WAIT_QOS_THRES,326,12766
	WAIT_QOS_JOB_LIMIT,327,12838
	WAIT_QOS_RESOURCE_LIMIT,328,12887
	WAIT_QOS_TIME_LIMIT,329,12945
	WAIT_BLOCK_MAX_ERR,330,12996
	WAIT_BLOCK_D_ACTION,332,13104
	WAIT_CLEANING,334,13196
	WAIT_PROLOG,336,13302
enum job_acct_types 339,13345
	JOB_START,340,13367
	JOB_STEP,341,13379
	JOB_SUSPEND,342,13390
	JOB_TERMINATED343,13404
#define PARTITION_SUBMIT	347,13452
#define PARTITION_SCHED 348,13522
#define PARTITION_DOWN	351,13645
#define PARTITION_UP	352,13688
#define PARTITION_DRAIN	353,13747
#define PARTITION_INACTIVE	354,13790
enum connection_type 356,13823
	SELECT_MESH,357,13846
	SELECT_TORUS,358,13888
	SELECT_NAV,359,13932
	SELECT_SMALL,360,13983
	SELECT_HTC_S,361,14033
	SELECT_HTC_D,362,14096
	SELECT_HTC_V,363,14160
	SELECT_HTC_L 364,14222
enum node_use_type 367,14294
	SELECT_COPROCESSOR_MODE,368,14315
	SELECT_VIRTUAL_NODE_MODE,369,14385
	SELECT_NAV_MODE	370,14450
enum select_jobdata_type 373,14504
	SELECT_JOBDATA_GEOMETRY,374,14531
	SELECT_JOBDATA_ROTATE,375,14606
	SELECT_JOBDATA_CONN_TYPE,376,14659
	SELECT_JOBDATA_BLOCK_ID,377,14724
	SELECT_JOBDATA_NODES,378,14781
	SELECT_JOBDATA_IONODES,379,14829
	SELECT_JOBDATA_NODE_CNT,380,14881
	SELECT_JOBDATA_ALTERED,381,14939
	SELECT_JOBDATA_BLRTS_IMAGE,382,14997
	SELECT_JOBDATA_LINUX_IMAGE,383,15055
	SELECT_JOBDATA_MLOADER_IMAGE,384,15113
	SELECT_JOBDATA_RAMDISK_IMAGE,385,15175
	SELECT_JOBDATA_REBOOT,386,15237
	SELECT_JOBDATA_RESV_ID,387,15290
	SELECT_JOBDATA_PAGG_ID,388,15352
	SELECT_JOBDATA_PTR,389,15416
	SELECT_JOBDATA_BLOCK_PTR,390,15476
	SELECT_JOBDATA_DIM_CNT,391,15539
	SELECT_JOBDATA_BLOCK_NODE_CNT,392,15594
	SELECT_JOBDATA_START_LOC,393,15664
	SELECT_JOBDATA_USER_NAME,395,15751
	SELECT_JOBDATA_CONFIRMED,396,15808
	SELECT_JOBDATA_CLEANING,397,15883
	SELECT_JOBDATA_NETWORK,399,15979
enum select_nodedata_type 402,16041
	SELECT_NODEDATA_BITMAP_SIZE,403,16069
	SELECT_NODEDATA_SUBGRP_SIZE,404,16121
	SELECT_NODEDATA_SUBCNT,405,16173
	SELECT_NODEDATA_BITMAP,406,16225
	SELECT_NODEDATA_STR,408,16331
	SELECT_NODEDATA_PTR,410,16423
	SELECT_NODEDATA_EXTRA_INFO,411,16494
	SELECT_NODEDATA_RACK_MP,413,16586
	SELECT_NODEDATA_MEM_ALLOC,415,16677
enum select_print_mode 418,16733
	SELECT_PRINT_HEAD,419,16758
	SELECT_PRINT_DATA,420,16806
	SELECT_PRINT_MIXED,421,16852
	SELECT_PRINT_MIXED_SHORT,422,16899
	SELECT_PRINT_BG_ID,423,16956
	SELECT_PRINT_NODES,424,17004
	SELECT_PRINT_CONNECTION,425,17050
	SELECT_PRINT_ROTATE,426,17112
	SELECT_PRINT_GEOMETRY,427,17165
	SELECT_PRINT_START,428,17214
	SELECT_PRINT_BLRTS_IMAGE,429,17271
	SELECT_PRINT_LINUX_IMAGE,430,17330
	SELECT_PRINT_MLOADER_IMAGE,431,17389
	SELECT_PRINT_RAMDISK_IMAGE,432,17452
	SELECT_PRINT_REBOOT,433,17515
	SELECT_PRINT_RESV_ID,434,17565
	SELECT_PRINT_START_LOC,435,17631
enum select_node_cnt 438,17696
	SELECT_GET_NODE_SCALING,439,17719
	SELECT_GET_NODE_CPU_CNT,440,17791
	SELECT_GET_MP_CPU_CNT,441,17861
	SELECT_APPLY_NODE_MIN_OFFSET,443,17954
	SELECT_APPLY_NODE_MAX_OFFSET,444,18020
	SELECT_SET_NODE_CNT,445,18086
	SELECT_SET_MP_CNT 446,18141
enum acct_gather_profile_info 450,18244
	ACCT_GATHER_PROFILE_DIR,451,18276
	ACCT_GATHER_PROFILE_DEFAULT,452,18347
	ACCT_GATHER_PROFILE_RUNNING 454,18444
#define ACCT_GATHER_PROFILE_NOT_SET 460,18609
#define ACCT_GATHER_PROFILE_NONE 461,18656
#define ACCT_GATHER_PROFILE_ENERGY 462,18703
#define ACCT_GATHER_PROFILE_TASK 463,18750
#define ACCT_GATHER_PROFILE_LUSTRE 464,18797
#define ACCT_GATHER_PROFILE_NETWORK 465,18844
#define ACCT_GATHER_PROFILE_ALL 466,18891
enum jobacct_data_type 469,18964
	JOBACCT_DATA_TOTAL,470,18989
	JOBACCT_DATA_PIPE,471,19039
	JOBACCT_DATA_RUSAGE,472,19093
	JOBACCT_DATA_MAX_VSIZE,474,19201
	JOBACCT_DATA_MAX_VSIZE_ID,475,19254
	JOBACCT_DATA_TOT_VSIZE,476,19314
	JOBACCT_DATA_MAX_RSS,477,19367
	JOBACCT_DATA_MAX_RSS_ID,478,19418
	JOBACCT_DATA_TOT_RSS,479,19476
	JOBACCT_DATA_MAX_PAGES,480,19527
	JOBACCT_DATA_MAX_PAGES_ID,481,19580
	JOBACCT_DATA_TOT_PAGES,482,19640
	JOBACCT_DATA_MIN_CPU,483,19693
	JOBACCT_DATA_MIN_CPU_ID,484,19744
	JOBACCT_DATA_TOT_CPU,485,19802
	JOBACCT_DATA_ACT_CPUFREQ,486,19853
	JOBACCT_DATA_CONSUMED_ENERGY,487,19910
	JOBACCT_DATA_MAX_DISK_READ,488,19971
	JOBACCT_DATA_MAX_DISK_READ_ID,489,20025
	JOBACCT_DATA_TOT_DISK_READ,490,20088
	JOBACCT_DATA_MAX_DISK_WRITE,491,20142
	JOBACCT_DATA_MAX_DISK_WRITE_ID,492,20197
	JOBACCT_DATA_TOT_DISK_WRITE 493,20261
enum acct_energy_type 496,20319
	ENERGY_DATA_JOULES_TASK,497,20343
	ENERGY_DATA_STRUCT,498,20369
	ENERGY_DATA_RECONFIG,499,20390
	ENERGY_DATA_PROFILE,500,20413
	ENERGY_DATA_LAST_POLL,501,20435
typedef enum task_dist_states 505,20514
	SLURM_DIST_CYCLIC 507,20599
	SLURM_DIST_BLOCK,508,20670
	SLURM_DIST_ARBITRARY,509,20733
	SLURM_DIST_PLANE,510,20791
	SLURM_DIST_CYCLIC_CYCLIC,515,20970
	SLURM_DIST_CYCLIC_BLOCK,518,21110
	SLURM_DIST_BLOCK_CYCLIC,519,21178
	SLURM_DIST_BLOCK_BLOCK,520,21246
	SLURM_NO_LLLP_DIST,521,21312
	SLURM_DIST_UNKNOWN	522,21374
} task_dist_states_t;523,21413
#define OPEN_MODE_APPEND	526,21506
#define OPEN_MODE_TRUNCATE	527,21533
typedef enum cpu_bind_type 529,21563
	CPU_BIND_VERBOSE 531,21681
	CPU_BIND_VERBOSE   = 0x01,x01531,21681
	CPU_BIND_TO_THREADS=533,21782
	CPU_BIND_TO_THREADS= 0x02,x02533,21782
	CPU_BIND_TO_CORES 534,21825
	CPU_BIND_TO_CORES  = 0x04,x04534,21825
	CPU_BIND_TO_SOCKETS=535,21866
	CPU_BIND_TO_SOCKETS= 0x08,x08535,21866
	CPU_BIND_TO_LDOMS 536,21909
	CPU_BIND_TO_LDOMS  = 0x10,x10536,21909
	CPU_BIND_TO_BOARDS 537,21960
	CPU_BIND_TO_BOARDS = 0x1000,x1000537,21960
	CPU_BIND_NONE	540,22141
	CPU_BIND_NONE	   = 0x20,x20540,22141
	CPU_BIND_RANK 541,22177
	CPU_BIND_RANK  	   = 0x40,x40541,22177
	CPU_BIND_MAP	542,22217
	CPU_BIND_MAP	   = 0x80,x80542,22217
	CPU_BIND_MASK	543,22275
	CPU_BIND_MASK	   = 0x100,x100543,22275
	CPU_BIND_LDRANK 544,22337
	CPU_BIND_LDRANK    = 0x200,x200544,22337
	CPU_BIND_LDMAP	545,22393
	CPU_BIND_LDMAP	   = 0x400,x400545,22393
	CPU_BIND_LDMASK	546,22463
	CPU_BIND_LDMASK	   = 0x800,x800546,22463
	CPU_BIND_CPUSETS 550,22626
	CPU_BIND_CPUSETS   = 0x8000x8000550,22626
} cpu_bind_type_t;551,22655
#define CPU_FREQ_RANGE_FLAG 555,22784
#define CPU_FREQ_LOW 556,22823
#define CPU_FREQ_MEDIUM 557,22862
#define CPU_FREQ_HIGH 558,22901
typedef enum mem_bind_type 560,22941
	MEM_BIND_VERBOSE=562,23065
	MEM_BIND_VERBOSE= 0x01,x01562,23065
	MEM_BIND_NONE 565,23225
	MEM_BIND_NONE   = 0x02,x02565,23225
	MEM_BIND_RANK 566,23260
	MEM_BIND_RANK   = 0x04,x04566,23260
	MEM_BIND_MAP 567,23297
	MEM_BIND_MAP    = 0x08,x08567,23297
	MEM_BIND_MASK 568,23355
	MEM_BIND_MASK   = 0x10,x10568,23355
	MEM_BIND_LOCAL 569,23416
	MEM_BIND_LOCAL  = 0x20	x20569,23416
} mem_bind_type_t;570,23453
enum node_states 577,23795
	NODE_STATE_UNKNOWN,578,23814
	NODE_STATE_DOWN,579,23871
	NODE_STATE_IDLE,580,23920
	NODE_STATE_ALLOCATED,581,23976
	NODE_STATE_ERROR,582,24038
	NODE_STATE_MIXED,583,24089
	NODE_STATE_FUTURE,584,24137
	NODE_STATE_END	585,24197
#define NODE_STATE_BASE 587,24243
#define NODE_STATE_FLAGS 588,24280
#define NODE_STATE_NET 589,24317
#define NODE_STATE_RES 593,24469
#define NODE_STATE_UNDRAIN 597,24637
#define NODE_STATE_CLOUD 598,24708
#define NODE_RESUME 599,24773
#define NODE_STATE_DRAIN 603,24963
#define NODE_STATE_COMPLETING 604,25037
#define NODE_STATE_NO_RESPOND 605,25113
#define NODE_STATE_POWER_SAVE 606,25179
#define NODE_STATE_FAIL 607,25246
#define NODE_STATE_POWER_UP 609,25339
#define NODE_STATE_MAINT 611,25434
#define SLURM_SSL_SIGNATURE_LENGTH 616,25631
#define SHOW_ALL	620,25772
#define SHOW_DETAIL	621,25836
#define SHOW_DETAIL2	622,25904
enum ctx_keys 625,26028
	SLURM_STEP_CTX_STEPID,626,26044
	SLURM_STEP_CTX_TASKS,627,26102
	SLURM_STEP_CTX_TID,628,26168
	SLURM_STEP_CTX_RESP,629,26236
	SLURM_STEP_CTX_CRED,630,26301
	SLURM_STEP_CTX_SWITCH_JOB,631,26323
	SLURM_STEP_CTX_NUM_HOSTS,632,26351
	SLURM_STEP_CTX_HOST,633,26378
	SLURM_STEP_CTX_JOBID,634,26400
	SLURM_STEP_CTX_USER_MANAGED_SOCKETS635,26423
#define CR_CPU	641,26664
#define CR_SOCKET	644,26830
#define CR_CORE	647,26969
#define CR_BOARD	650,27103
#define CR_MEMORY	653,27239
#define CR_OTHER_CONS_RES 655,27360
#define CR_NHC_STEP_NO 658,27490
#define CR_NHC_NO 661,27621
#define CR_ONE_TASK_PER_CORE 665,27729
#define CR_CORE_DEFAULT_DIST_BLOCK 669,27877
#define CR_ALLOCATE_FULL_SOCKET 672,27997
#define CR_LLN	674,28101
#define MEM_PER_CPU 676,28164
#define SHARED_FORCE 677,28196
#define PRIVATE_DATA_JOBS	679,28225
#define PRIVATE_DATA_NODES	680,28291
#define PRIVATE_DATA_PARTITIONS	681,28354
#define PRIVATE_DATA_USAGE	682,28427
#define PRIVATE_DATA_USERS	683,28502
#define PRIVATE_DATA_ACCOUNTS	684,28576
#define PRIVATE_DATA_RESERVATIONS 685,28655
#define PRIORITY_RESET_NONE	687,28731
#define PRIORITY_RESET_NOW	688,28784
#define PRIORITY_RESET_DAILY	689,28860
#define PRIORITY_RESET_WEEKLY	690,28926
#define PRIORITY_RESET_MONTHLY	691,28998
#define PRIORITY_RESET_QUARTERLY 692,29074
#define PRIORITY_RESET_YEARLY	693,29154
#define PROP_PRIO_OFF	695,29229
#define PROP_PRIO_ON	696,29298
#define PROP_PRIO_NICER	697,29359
#define PRIORITY_FLAGS_ACCRUE_ALWAYS	700,29474
#define PRIORITY_FLAGS_TICKET_BASED 703,29624
#define PRIORITY_FLAGS_SIZE_RELATIVE	707,29790
#define PRIORITY_FLAGS_DEPTH_OBLIVIOUS	709,29904
#  define __hostlist_t_defined722,30446
typedef struct hostlist * hostlist_t;723,30477
#  define __list_datatypes_defined859,34843
typedef struct list * List;860,34878
typedef struct listIterator * ListIterator;865,34941
typedef void (*ListDelF)ListDelF870,35029
typedef int (*ListCmpF)ListCmpF877,35271
typedef int (*ListFindF)ListFindF884,35473
typedef int (*ListForF)ListForF890,35633
#  define __bitstr_datatypes_defined988,38853
typedef int64_t bitstr_t;991,38915
#define BITSTR_SHIFT 992,38941
typedef int32_t bitstr_t;994,38990
#define BITSTR_SHIFT 995,39016
typedef bitstr_t bitoff_t;998,39067
#define ALLOC_SID_ADMIN_HOLD	1002,39103
#define ALLOC_SID_USER_HOLD	1003,39164
typedef struct dynamic_plugin_data 1008,39423
	void *data;data1009,39460
	uint32_t plugin_id;1010,39473
} dynamic_plugin_data_t;1011,39494
typedef struct acct_gather_energy 1013,39520
	uint32_t base_consumed_energy;1014,39556
	uint32_t base_watts;1015,39588
	uint32_t consumed_energy;1016,39657
	uint32_t current_watts;1017,39731
	uint32_t previous_consumed_energy;1018,39804
	time_t poll_time;1019,39840
} acct_gather_energy_t;1020,39909
typedef struct ext_sensors_data 1022,39934
	uint32_t consumed_energy;1023,39968
	uint32_t temperature;1024,40037
	time_t   energy_update_time;1025,40095
	uint32_t current_watts;1026,40168
} ext_sensors_data_t;1027,40240
typedef struct job_descriptor 1029,40263
	char *account;account1030,40343
	char *acctg_freq;acctg_freq1031,40394
	char *alloc_node;alloc_node1032,40458
	uint16_t alloc_resp_port;1035,40601
	uint32_t alloc_sid;1036,40674
	uint32_t argc;1041,40894
	char **argv;argv1042,40951
	char *array_inx;array_inx1043,40996
	void *array_bitmap;array_bitmap1044,41043
	time_t begin_time;1045,41093
	uint16_t ckpt_interval;1046,41152
	char *ckpt_dir;ckpt_dir1047,41216
	char *comment;comment1048,41278
	uint16_t contiguous;1049,41344
	uint16_t core_spec;1051,41437
	char *cpu_bind;cpu_bind1052,41487
	uint16_t cpu_bind_type;1053,41540
	char *dependency;dependency1054,41591
	time_t end_time;1055,41658
	char **environment;environment1058,41802
	uint32_t env_size;1060,41906
	char *exc_nodes;exc_nodes1061,41961
	char *features;features1063,42067
	char *gres;gres1065,42154
	uint32_t group_id;1067,42246
	uint16_t immediate;1068,42305
	uint32_t job_id;1070,42418
	uint16_t kill_on_node_fail;1071,42471
	char *licenses;licenses1073,42570
	uint16_t mail_type;1074,42623
	char *mail_user;mail_user1075,42682
	char *mem_bind;mem_bind1076,42735
	uint16_t mem_bind_type;1077,42788
	char *name;name1078,42839
	char *network;network1079,42887
	uint16_t nice;1080,42927
	uint32_t num_tasks;1082,43009
	uint8_t open_mode;1084,43089
	uint16_t other_port;1086,43176
	uint8_t overcommit;1087,43245
	char *partition;partition1088,43313
	uint16_t plane_size;1090,43397
	uint32_t priority;1092,43477
	uint32_t profile;1095,43609
	char *qos;qos1096,43676
	char *resp_host;resp_host1097,43714
	char *req_nodes;req_nodes1098,43761
	uint16_t requeue;1100,43844
	char *reservation;reservation1101,43906
	char *script;script1102,43959
	uint16_t shared;1103,44017
	char **spank_job_env;spank_job_env1107,44229
	uint32_t spank_job_env_size;1109,44341
	uint16_t task_dist;1110,44404
	uint32_t time_limit;1111,44456
	uint32_t time_min;1113,44547
	uint32_t user_id;1115,44631
	uint16_t wait_all_nodes;1117,44743
	uint16_t warn_flags;1120,44902
	uint16_t warn_signal;1122,44988
	uint16_t warn_time;1123,45058
	char *work_dir;work_dir1124,45126
	uint16_t cpus_per_task;1127,45205
	uint32_t min_cpus;1129,45287
	uint32_t max_cpus;1131,45369
	uint32_t min_nodes;1133,45451
	uint32_t max_nodes;1135,45536
	uint16_t boards_per_node;1137,45619
	uint16_t sockets_per_board;1138,45685
	uint16_t sockets_per_node;1139,45753
	uint16_t cores_per_socket;1140,45819
	uint16_t threads_per_core;1141,45885
	uint16_t ntasks_per_node;1142,45951
	uint16_t ntasks_per_socket;1143,46022
	uint16_t ntasks_per_core;1145,46107
	uint16_t ntasks_per_board;1146,46178
	uint16_t pn_min_cpus;1147,46251
	uint32_t pn_min_memory;1148,46318
	uint32_t pn_min_tmp_disk;1151,46454
	uint16_t geometry[geometry1160,46780
	uint16_t conn_type[conn_type1162,46886
	uint16_t reboot;1163,46958
	uint16_t rotate;1164,47015
	char *blrtsimage;blrtsimage1165,47071
	char *linuximage;linuximage1166,47123
	char *mloaderimage;mloaderimage1167,47175
	char *ramdiskimage;ramdiskimage1168,47229
	uint32_t req_switch;1171,47323
	dynamic_plugin_data_t *select_jobinfo;select_jobinfo1172,47381
	char *std_err;std_err1174,47479
	char *std_in;std_in1175,47521
	char *std_out;std_out1176,47561
	uint32_t wait4switch;1177,47603
	char *wckey;wckey1178,47676
} job_desc_msg_t;1179,47721
typedef struct job_info 1181,47740
	char *account;account1182,47766
	char    *alloc_node;alloc_node1183,47817
	uint32_t alloc_sid;1184,47878
	uint32_t array_job_id;1185,47937
	uint32_t array_task_id;1186,48001
	uint32_t assoc_id;1187,48055
	uint16_t batch_flag;1188,48104
	char *batch_host;batch_host1189,48167
	char *batch_script;batch_script1190,48226
	char *command;command1191,48278
	char *comment;comment1193,48392
	uint16_t contiguous;1194,48458
	uint16_t core_spec;1195,48521
	uint16_t cpus_per_task;1196,48571
	char *dependency;dependency1198,48653
	uint32_t derived_ec;1199,48720
	time_t eligible_time;1200,48783
	time_t end_time;1201,48845
	char *exc_nodes;exc_nodes1202,48909
	int32_t *exc_node_inx;exc_node_inx1203,48972
	uint32_t exit_code;1206,49110
	char *features;features1207,49179
	char *gres;gres1208,49245
	uint32_t group_id;1209,49307
	uint32_t job_id;1210,49356
	uint16_t job_state;1211,49387
	char *licenses;licenses1212,49452
	uint32_t max_cpus;1213,49505
	uint32_t max_nodes;1214,49568
	uint16_t boards_per_node;1215,49633
	uint16_t sockets_per_board;1216,49701
	uint16_t sockets_per_node;1217,49769
	uint16_t cores_per_socket;1218,49837
	uint16_t threads_per_core;1219,49905
	char *name;name1220,49973
	char *network;network1221,50009
	char *nodes;nodes1222,50054
	uint16_t nice;1223,50106
	int32_t *node_inx;node_inx1224,50157
	uint16_t ntasks_per_core;1227,50294
	uint16_t ntasks_per_node;1228,50365
	uint16_t ntasks_per_socket;1229,50436
	uint16_t ntasks_per_board;1230,50510
	uint32_t num_nodes;1232,50585
	uint32_t num_cpus;1233,50652
	char *partition;partition1234,50717
	uint32_t pn_min_memory;1235,50768
	uint16_t pn_min_cpus;1236,50839
	uint32_t pn_min_tmp_disk;1237,50905
	time_t pre_sus_time;1238,50975
	uint32_t priority;1239,51038
	uint32_t profile;1241,51139
	char *qos;qos1242,51206
	char *req_nodes;req_nodes1243,51244
	int32_t *req_node_inx;req_node_inx1244,51307
	uint32_t req_switch;1247,51445
	uint16_t requeue;1248,51503
	time_t resize_time;1249,51571
	uint16_t restart_cnt;1250,51625
	char *resv_name;resv_name1251,51676
	dynamic_plugin_data_t *select_jobinfo;select_jobinfo1252,51717
	job_resources_t *job_resrcs;job_resrcs1256,51844
	uint16_t shared;1257,51912
	uint16_t show_flags;1258,51977
	time_t start_time;1259,52040
	char *state_desc;state_desc1260,52108
	uint16_t state_reason;1261,52167
	char *std_err;std_err1263,52274
	char *std_in;std_in1264,52327
	char *std_out;std_out1265,52378
	time_t submit_time;1266,52431
	time_t suspend_time;1267,52481
	uint32_t time_limit;1268,52544
	uint32_t time_min;1269,52612
	uint32_t user_id;1270,52678
	time_t 	preempt_time;1271,52724
	uint32_t wait4switch;1272,52776
	char *wckey;wckey1273,52849
	char *work_dir;work_dir1274,52894
} slurm_job_info_t;1275,52948
typedef slurm_job_info_t job_info_t;1286,53464
typedef struct job_info_msg 1289,53509
	time_t last_update;1290,53539
	uint32_t record_count;1291,53586
	slurm_job_info_t *job_array;job_array1292,53634
} job_info_msg_t;1293,53686
typedef struct step_update_request_msg 1295,53705
	time_t end_time;1296,53746
	uint32_t exit_code;1297,53784
	uint32_t job_id;1298,53853
	jobacctinfo_t *jobacct;jobacct1299,53871
	char *name;name1300,53896
	time_t start_time;1301,53937
	uint32_t step_id;1302,53979
	uint32_t time_limit;1303,53998
} step_update_request_msg_t;1304,54037
typedef struct slurm_step_layout 1306,54067
	char *front_end;front_end1307,54102
	uint32_t node_cnt;1310,54227
	char *node_list;node_list1311,54264
	uint16_t plane_size;1312,54317
	uint16_t *tasks;tasks1316,54520
	uint32_t task_cnt;1317,54538
	uint16_t task_dist;1318,54598
	uint32_t **tids;tids1322,54803
} slurm_step_layout_t;1323,54854
typedef struct slurm_step_io_fds 1325,54878
		int fd;1327,54923
		uint32_t taskid;1328,54933
		uint32_t nodeid;1329,54952
	} in,1330,54971
	} in, out,1330,54971
	} in, out, err;1330,54971
} slurm_step_io_fds_t;1331,54988
#define SLURM_STEP_IO_FDS_INITIALIZER 1333,55012
typedef struct launch_tasks_response_msg 1337,55161
	uint32_t return_code;1338,55204
	char    *node_name;node_name1339,55227
	uint32_t srun_node_id;1340,55248
	uint32_t count_of_pids;1341,55272
	uint32_t *local_pids;local_pids1342,55297
	uint32_t *task_ids;task_ids1343,55320
} launch_tasks_response_msg_t;1344,55377
typedef struct task_ext_msg 1346,55409
	uint32_t num_tasks;1347,55439
	uint32_t *task_id_list;task_id_list1348,55460
	uint32_t return_code;1349,55485
	uint32_t job_id;1350,55508
	uint32_t step_id;1351,55526
} task_exit_msg_t;1352,55545
typedef struct srun_ping_msg 1354,55565
	uint32_t job_id;1355,55596
	uint32_t step_id;1356,55633
} srun_ping_msg_t;1357,55676
typedef struct srun_job_complete_msg 1359,55696
	uint32_t job_id;1360,55735
	uint32_t step_id;1361,55779
} srun_job_complete_msg_t;1362,55828
typedef struct srun_timeout_msg 1364,55856
	uint32_t job_id;1365,55890
	uint32_t step_id;1366,55927
	time_t   timeout;1367,55970
} srun_timeout_msg_t;1368,56027
typedef struct srun_user_msg 1370,56050
	uint32_t job_id;1371,56081
	char *msg;msg1372,56118
} srun_user_msg_t;1373,56160
typedef struct srun_node_fail_msg 1375,56180
	uint32_t job_id;1376,56216
	char *nodelist;nodelist1377,56253
	uint32_t step_id;1378,56300
} srun_node_fail_msg_t;1379,56343
typedef struct srun_step_missing_msg 1381,56368
	uint32_t job_id;1382,56407
	char *nodelist;nodelist1383,56444
	uint32_t step_id;1384,56502
} srun_step_missing_msg_t;1385,56545
enum suspend_opts 1387,56573
	SUSPEND_JOB,1388,56593
	RESUME_JOB	1389,56632
typedef struct suspend_msg 1392,56672
	uint16_t op;1393,56701
	uint32_t job_id;1394,56773
} suspend_msg_t;1395,56817
	uint16_t ckpt_interval;1398,56852
	uint32_t cpu_count;1399,56914
	uint32_t cpu_freq;1400,56971
	uint16_t exclusive;1401,57021
	char *features;features1402,57086
	uint16_t immediate;1403,57147
	uint32_t job_id;1405,57260
	uint32_t pn_min_memory;1406,57291
	char *ckpt_dir;ckpt_dir1409,57429
	char *gres;gres1410,57495
	char *name;name1411,57540
	char *network;network1412,57581
	uint32_t profile;1413,57621
	uint8_t no_kill;1414,57688
	uint32_t min_nodes;1415,57741
	uint32_t max_nodes;1417,57826
	char *node_list;node_list1419,57909
	bool overcommit;1420,57956
	uint16_t plane_size;1424,58153
	uint16_t relative;1426,58233
	uint16_t resv_port_cnt;1427,58297
	uint32_t task_count;1428,58349
	uint16_t task_dist;1429,58402
	uint32_t time_limit;1431,58491
	uid_t uid;1432,58535
	uint16_t verbose_level;1433,58562
} slurm_step_ctx_params_t;1435,58647
	char *alias_list;alias_list1438,58692
	uint32_t argc;1439,58753
	char **argv;argv1440,58769
	uint32_t envc;1441,58783
	char **env;env1442,58799
	char *cwd;cwd1443,58812
	bool user_managed_io;1444,58824
	uint32_t msg_timeout;1445,58847
	bool buffered_stdio;1448,58962
	bool labelio;1449,58984
	char *remote_output_filename;remote_output_filename1450,58999
	char *remote_error_filename;remote_error_filename1451,59030
	char *remote_input_filename;remote_input_filename1452,59060
	slurm_step_io_fds_t local_fds;1453,59090
	uint32_t gid;1456,59176
	bool multi_prog;1457,59191
	uint32_t slurmd_debug;1458,59209
	bool parallel_debug;1459,59266
	uint32_t profile;1460,59288
	char *task_prolog;task_prolog1461,59355
	char *task_epilog;task_epilog1462,59375
	uint16_t cpu_bind_type;1463,59395
	char *cpu_bind;cpu_bind1464,59446
	uint32_t cpu_freq;1465,59463
	uint16_t mem_bind_type;1466,59518
	char *mem_bind;mem_bind1467,59569
	uint16_t max_sockets;1469,59587
	uint16_t max_cores;1470,59610
	uint16_t max_threads;1471,59631
	uint16_t cpus_per_task;1472,59654
	uint16_t task_dist;1473,59679
	char *partition;partition1474,59700
	bool preserve_env;1475,59718
	char *mpi_plugin_name;mpi_plugin_name1477,59739
	uint8_t open_mode;1478,59763
	char *acctg_freq;acctg_freq1479,59783
	bool pty;1480,59802
	char *ckpt_dir;ckpt_dir1481,59813
	char *restart_dir;restart_dir1482,59830
	char **spank_job_env;spank_job_env1483,59850
	uint32_t spank_job_env_size;1485,59962
} slurm_step_launch_params_t;1486,60025
	void (*step_complete)step_complete1489,60073
	void (*step_signal)step_signal1490,60124
	void (*step_timeout)step_timeout1491,60151
	void (*task_start)task_start1492,60196
	void (*task_finish)task_finish1493,60248
} slurm_step_launch_callbacks_t;1494,60289
	void (*ping)ping1497,60340
	void (*job_complete)job_complete1498,60374
	void (*timeout)timeout1499,60424
	void (*user_msg)user_msg1500,60464
	void (*node_fail)node_fail1501,60502
	void (*job_suspend)job_suspend1502,60546
} slurm_allocation_callbacks_t;1503,60585
	void (*acct_full)acct_full1506,60635
	void (*dbd_fail)dbd_fail1507,60657
	void (*dbd_resumed)dbd_resumed1508,60678
	void (*db_fail)db_fail1509,60702
	void (*db_resumed)db_resumed1510,60722
} slurm_trigger_callbacks_t;1511,60745
	uint32_t array_job_id;1514,60792
	uint32_t array_task_id;1515,60856
	char *ckpt_dir;ckpt_dir1516,60910
	uint16_t ckpt_interval;1517,60971
	char *gres;gres1518,61033
	uint32_t job_id;1519,61080
	char *name;name1520,61111
	char *network;network1521,61148
	char *nodes;nodes1522,61198
	int32_t *node_inx;node_inx1523,61255
	uint32_t num_cpus;1526,61391
	uint32_t cpu_freq;1527,61454
	uint32_t num_tasks;1528,61504
	char *partition;partition1529,61547
	uint32_t profile;1530,61598
	char *resv_ports;resv_ports1531,61665
	time_t run_time;1532,61714
	dynamic_plugin_data_t *select_jobinfo;select_jobinfo1533,61779
	time_t start_time;1537,61906
	uint16_t state;1538,61948
	uint32_t step_id;1539,62011
	uint32_t time_limit;1540,62044
	uint32_t user_id;1541,62088
} job_step_info_t;1542,62134
typedef struct job_step_info_response_msg 1544,62154
	time_t last_update;1545,62198
	uint32_t job_step_count;1546,62246
	job_step_info_t *job_steps;job_steps1547,62296
} job_step_info_response_msg_t;1548,62352
   	char *node_name;node_name1551,62402
	uint32_t *pid;pid1552,62423
	uint32_t pid_cnt;1553,62439
} job_step_pids_t;1554,62458
	uint32_t job_id;1557,62495
	List pid_list;1558,62513
	uint32_t step_id;1559,62563
} job_step_pids_response_msg_t;1560,62582
	jobacctinfo_t *jobacct;jobacct1563,62632
	uint32_t num_tasks;1564,62657
   	uint32_t return_code;1565,62678
	job_step_pids_t *step_pids;step_pids1566,62704
} job_step_stat_t;1567,62733
	uint32_t job_id;1570,62770
	List stats_list;1571,62801
	uint32_t step_id;1572,62853
} job_step_stat_response_msg_t;1573,62872
typedef struct node_info 1575,62905
	char *arch;arch1576,62932
	uint16_t boards;1577,62974
	time_t boot_time;1578,63038
	uint16_t cores;1579,63081
	uint16_t cpus;1580,63145
	acct_gather_energy_t *energy;energy1582,63220
	ext_sensors_data_t *ext_sensors;ext_sensors1583,63270
	char *features;features1584,63331
	char *gres;gres1585,63381
	uint32_t cpu_load;1586,63436
	char *name;name1587,63477
	char *node_addr;node_addr1588,63516
	char *node_hostname;node_hostname1589,63570
	uint16_t node_state;1590,63625
	char *os;os1591,63674
	uint32_t real_memory;1592,63727
	char *reason;reason1593,63797
	time_t reason_time;1594,63858
	uint32_t reason_uid;1596,63952
	time_t slurmd_start_time;1598,64044
	uint16_t sockets;1599,64099
	uint16_t threads;1600,64163
	uint32_t tmp_disk;1601,64221
	uint32_t weight;1602,64285
	dynamic_plugin_data_t *select_nodeinfo;select_nodeinfo1603,64351
	char *version;version1607,64503
} node_info_t;1608,64548
typedef struct node_info_msg 1610,64564
	time_t last_update;1611,64595
	uint32_t node_scaling;1612,64643
	uint32_t record_count;1618,64853
	node_info_t *node_array;node_array1619,64902
} node_info_msg_t;1620,64951
typedef struct front_end_info 1622,64971
	char *allow_groups;allow_groups1623,65003
	char *allow_users;allow_users1624,65052
	time_t boot_time;1625,65099
	char *deny_groups;deny_groups1627,65174
	char *deny_users;deny_users1628,65221
	char *name;name1629,65266
	uint16_t node_state;1630,65297
	char *reason;reason1631,65347
	time_t reason_time;1633,65417
	uint32_t reason_uid;1635,65513
	time_t slurmd_start_time;1637,65607
	char *version;version1638,65663
} front_end_info_t;1639,65708
typedef struct front_end_info_msg 1641,65729
	time_t last_update;1642,65765
	uint32_t record_count;1643,65813
	front_end_info_t *front_end_array;front_end_array1644,65862
} front_end_info_msg_t;1645,65926
typedef struct topo_info 1647,65951
	uint16_t level;1648,65978
	uint32_t link_speed;1649,66030
	char *name;name1650,66087
	char *nodes;nodes1651,66120
	char *switches;switches1652,66174
} topo_info_t;1653,66234
typedef struct topo_info_response_msg 1655,66250
	uint32_t record_count;1656,66290
	topo_info_t *topo_array;topo_array1657,66339
} topo_info_response_msg_t;1658,66399
typedef struct job_alloc_info_msg 1660,66428
	uint32_t job_id;1661,66464
} job_alloc_info_msg_t;1662,66495
typedef struct acct_gather_node_resp_msg 1664,66520
	char *node_name;node_name1665,66563
	acct_gather_energy_t *energy;energy1666,66599
} acct_gather_node_resp_msg_t;1667,66630
typedef struct acct_gather_energy_req_msg 1669,66662
	uint16_t delta;1670,66706
} acct_gather_energy_req_msg_t;1671,66723
#define PART_FLAG_DEFAULT	1675,66867
#define PART_FLAG_HIDDEN	1676,66931
#define PART_FLAG_NO_ROOT	1677,66996
#define PART_FLAG_ROOT_ONLY	1678,67066
#define PART_FLAG_REQ_RESV	1679,67140
#define PART_FLAG_LLN	1680,67211
#define PART_FLAG_DEFAULT_CLR	1686,67557
#define PART_FLAG_HIDDEN_CLR	1687,67629
#define PART_FLAG_NO_ROOT_CLR	1688,67699
#define PART_FLAG_ROOT_ONLY_CLR	1689,67771
#define PART_FLAG_REQ_RESV_CLR	1690,67847
#define PART_FLAG_LLN_CLR	1691,67920
typedef struct partition_info 1693,67985
	char *allow_alloc_nodes;allow_alloc_nodes1694,68017
	char *allow_accounts;allow_accounts1696,68094
	char *allow_groups;allow_groups1698,68185
	char *allow_qos;allow_qos1700,68270
	char *alternate;alternate1702,68349
	uint16_t cr_type;1703,68402
	uint32_t def_mem_per_cpu;1704,68443
	uint32_t default_time;1705,68512
	char *deny_accounts;deny_accounts1706,68570
	char *deny_qos;deny_qos1707,68641
	uint16_t flags;1708,68700
	uint32_t grace_time;1709,68746
	uint32_t max_cpus_per_node;1710,68808
	uint32_t max_mem_per_cpu;1711,68875
	uint32_t max_nodes;1712,68944
	uint16_t max_share;1713,68991
	uint32_t max_time;1714,69050
	uint32_t min_nodes;1715,69096
	char *name;name1716,69131
	int32_t *node_inx;node_inx1717,69173
	char *nodes;nodes1720,69298
	uint16_t preempt_mode;1721,69352
	uint16_t priority;1722,69418
	uint16_t state_up;1723,69473
	uint32_t total_cpus;1724,69527
	uint32_t total_nodes;1725,69593
} partition_info_t;1726,69661
typedef struct delete_partition_msg 1728,69682
	char *name;name1729,69720
} delete_part_msg_t;1730,69771
typedef struct resource_allocation_response_msg 1732,69793
	uint32_t job_id;1733,69843
	char *alias_list;alias_list1734,69883
	uint16_t *cpus_per_node;cpus_per_node1735,69944
	uint32_t *cpu_count_reps;cpu_count_reps1736,69989
	uint32_t error_code;1737,70056
	uint32_t node_cnt;1738,70115
	char *node_list;node_list1739,70156
	uint32_t num_cpu_groups;1740,70203
	char *partition;partition1741,70263
	uint32_t pn_min_memory;1742,70321
	dynamic_plugin_data_t *select_jobinfo;select_jobinfo1745,70457
} resource_allocation_response_msg_t;1749,70603
typedef struct job_alloc_info_response_msg 1751,70642
	uint32_t job_id;1752,70687
	char *node_list;node_list1753,70727
	uint32_t num_cpu_groups;1754,70774
	uint16_t *cpus_per_node;cpus_per_node1755,70834
	uint32_t *cpu_count_reps;cpu_count_reps1756,70879
	uint32_t node_cnt;1757,70946
	slurm_addr_t *node_addr;node_addr1758,70987
	uint32_t error_code;1759,71037
	dynamic_plugin_data_t *select_jobinfo;select_jobinfo1760,71096
} job_alloc_info_response_msg_t;1764,71242
typedef struct partition_info_msg 1766,71276
	time_t last_update;1767,71312
	uint32_t record_count;1768,71359
	partition_info_t *partition_array;partition_array1769,71407
} partition_info_msg_t;1770,71471
	char *cnodes;cnodes1776,71551
	int32_t *cnode_inx;cnode_inx1777,71606
	uint32_t job_id;1782,71796
	void *job_ptr;job_ptr1783,71834
	uint32_t user_id;1784,71896
	char *user_name;user_name1785,71953
} block_job_info_t;1786,72012
	char *bg_block_id;bg_block_id1789,72050
	char *blrtsimage;blrtsimage1790,72070
	uint16_t conn_type[conn_type1791,72127
	uint32_t cnode_cnt;1792,72168
	uint32_t cnode_err_cnt;1793,72189
	int32_t *ionode_inx;ionode_inx1794,72214
	char *ionode_str;ionode_str1798,72379
	List job_list;1799,72398
	char *linuximage;linuximage1800,72464
	char *mloaderimage;mloaderimage1801,72521
	int32_t *mp_inx;mp_inx1802,72580
	char *mp_str;mp_str1805,72715
	uint16_t node_use;1806,72730
	char *ramdiskimage;ramdiskimage1807,72750
	char *reason;reason1808,72809
	uint16_t state;1809,72824
} block_info_t;1810,72841
	block_info_t *block_array;block_array1813,72875
	time_t    last_update;1814,72903
	uint32_t  record_count;1815,72927
} block_info_msg_t;1816,72952
typedef block_info_t update_block_msg_t;1818,72973
#define RESERVE_FLAG_MAINT	1885,75393
#define RESERVE_FLAG_NO_MAINT	1886,75453
#define RESERVE_FLAG_DAILY	1887,75518
#define RESERVE_FLAG_NO_DAILY	1888,75578
#define RESERVE_FLAG_WEEKLY	1889,75643
#define RESERVE_FLAG_NO_WEEKLY	1890,75705
#define RESERVE_FLAG_IGN_JOBS	1891,75772
#define RESERVE_FLAG_NO_IGN_JOB	1892,75840
#define RESERVE_FLAG_LIC_ONLY	1894,75931
#define RESERVE_FLAG_NO_LIC_ONLY	1896,76011
#define RESERVE_FLAG_STATIC 1898,76104
#define RESERVE_FLAG_NO_STATIC 1899,76177
#define RESERVE_FLAG_PART_NODES	1901,76266
#define RESERVE_FLAG_NO_PART_NODES	1903,76351
#define RESERVE_FLAG_OVERLAP	1905,76445
#define RESERVE_FLAG_SPEC_NODES	1907,76527
#define RESERVE_FLAG_FIRST_CORES	1909,76611
typedef struct reserve_info 1912,76706
	char *accounts;accounts1913,76736
	time_t end_time;1914,76795
	char *features;features1915,76843
	uint32_t flags;1916,76890
	char *licenses;licenses1917,76939
	char *name;name1918,76996
	uint32_t node_cnt;1919,77036
	uint32_t core_cnt;1920,77086
	int32_t *node_inx;node_inx1921,77136
	char *node_list;node_list1924,77272
	char *partition;partition1925,77326
	time_t start_time;1926,77379
	char *users;users1927,77431
} reserve_info_t;1928,77484
typedef struct reserve_info_msg 1930,77503
	time_t last_update;1931,77537
	uint32_t record_count;1932,77584
	reserve_info_t *reservation_array;reservation_array1933,77632
} reserve_info_msg_t;1934,77698
typedef struct resv_desc_msg 1936,77721
	char *accounts;accounts1937,77752
	uint32_t duration;1938,77811
	time_t end_time;1939,77872
	char *features;features1940,77920
	uint32_t flags;1941,77967
	char *licenses;licenses1942,78016
	char *name;name1943,78073
	uint32_t *core_cnt;core_cnt1944,78134
	uint32_t *node_cnt;node_cnt1945,78185
	char *node_list;node_list1950,78446
	char *partition;partition1951,78500
	time_t start_time;1952,78553
	char *users;users1953,78605
} resv_desc_msg_t;1954,78658
typedef struct reserve_response_msg 1956,78678
	char *name;name1957,78716
} reserve_response_msg_t;1958,78756
typedef struct reservation_name_msg 1960,78783
	char *name;name1961,78821
} reservation_name_msg_t;1963,78897
#define DEBUG_FLAG_SELECT_TYPE	1966,78925
#define DEBUG_FLAG_STEPS	1967,78991
#define DEBUG_FLAG_TRIGGERS	1968,79049
#define DEBUG_FLAG_CPU_BIND	1969,79113
#define DEBUG_FLAG_WIKI	1970,79170
#define DEBUG_FLAG_NO_CONF_HASH	1971,79232
#define DEBUG_FLAG_GRES	1973,79342
#define DEBUG_FLAG_BG_PICK 1974,79406
#define DEBUG_FLAG_BG_WIRES	1976,79498
#define DEBUG_FLAG_BG_ALGO	1977,79568
#define DEBUG_FLAG_BG_ALGO_DEEP	1978,79636
#define DEBUG_FLAG_PRIO 1980,79723
#define DEBUG_FLAG_BACKFILL	1981,79791
#define DEBUG_FLAG_GANG	1982,79861
#define DEBUG_FLAG_RESERVATION	1983,79924
#define DEBUG_FLAG_FRONT_END	1984,79994
#define DEBUG_FLAG_NO_REALTIME	1985,80056
#define DEBUG_FLAG_SWITCH	1988,80183
#define DEBUG_FLAG_ENERGY	1989,80244
#define DEBUG_FLAG_EXT_SENSORS	1990,80311
#define DEBUG_FLAG_LICENSE	1991,80381
#define DEBUG_FLAG_PROFILE	1992,80450
#define DEBUG_FLAG_INFINIBAND	1993,80519
#define DEBUG_FLAG_FILESYSTEM 1994,80594
#define DEBUG_FLAG_JOB_CONT 1995,80675
#define DEBUG_FLAG_TASK 1996,80746
#define GROUP_FORCE	1998,80810
#define GROUP_CACHE	2001,80935
#define GROUP_TIME_MASK	2003,81026
#define PREEMPT_MODE_OFF	2006,81117
#define PREEMPT_MODE_SUSPEND	2007,81178
#define PREEMPT_MODE_REQUEUE	2008,81244
#define PREEMPT_MODE_CHECKPOINT	2009,81318
#define PREEMPT_MODE_CANCEL	2011,81419
#define PREEMPT_MODE_GANG	2012,81482
#define RECONFIG_KEEP_PART_INFO 2014,81545
#define RECONFIG_KEEP_PART_STAT 2015,81639
#define HEALTH_CHECK_NODE_IDLE	2017,81735
#define HEALTH_CHECK_NODE_ALLOC	2018,81801
#define HEALTH_CHECK_NODE_MIXED	2019,81879
#define HEALTH_CHECK_NODE_ANY	2020,81961
#define PROLOG_FLAG_ALLOC 2022,82032
#define LOG_FMT_ISO8601_MS 2024,82103
#define LOG_FMT_ISO8601 2025,82137
#define LOG_FMT_RFC5424_MS 2026,82171
#define LOG_FMT_RFC5424 2027,82205
#define LOG_FMT_CLOCK 2028,82239
#define LOG_FMT_SHORT 2029,82273
#define LOG_FMT_THREAD_ID 2030,82307
typedef struct slurm_ctl_conf 2032,82342
	time_t last_update;2033,82374
	uint16_t accounting_storage_enforce;2034,82442
	char *accounting_storage_backup_host;accounting_storage_backup_host2036,82562
	char *accounting_storage_host;accounting_storage_host2038,82647
	char *accounting_storage_loc;accounting_storage_loc2039,82709
	char *accounting_storage_pass;accounting_storage_pass2041,82793
	uint32_t accounting_storage_port;2043,82867
	char *accounting_storage_type;accounting_storage_type2044,82939
	char *accounting_storage_user;accounting_storage_user2045,83001
	uint16_t acctng_store_job_comment;2046,83063
	void *acct_gather_conf;acct_gather_conf2047,83136
	char *acct_gather_energy_type;acct_gather_energy_type2048,83189
	char *acct_gather_profile_type;acct_gather_profile_type2049,83250
	char *acct_gather_infiniband_type;acct_gather_infiniband_type2050,83313
	char *acct_gather_filesystem_type;acct_gather_filesystem_type2051,83382
	uint16_t acct_gather_node_freq;2052,83451
	char *authinfo;authinfo2053,83521
	char *authtype;authtype2054,83565
	char *backup_addr;backup_addr2055,83609
	char *backup_controller;backup_controller2056,83675
	uint16_t batch_start_timeout;2057,83741
	time_t boot_time;2058,83810
	char *checkpoint_type;checkpoint_type2059,83862
	char *core_spec_plugin;core_spec_plugin2060,83915
	char *cluster_name;cluster_name2061,83978
	uint16_t complete_wait;2062,84044
	char *control_addr;control_addr2064,84147
	char *control_machine;control_machine2065,84212
	char *crypto_type;crypto_type2066,84275
	uint32_t debug_flags;2067,84332
	uint32_t def_mem_per_cpu;2068,84395
	uint16_t disable_root_jobs;2069,84464
	uint16_t dynalloc_port;2070,84536
	uint16_t enforce_part_limits;2071,84607
	char *epilog;epilog2073,84715
	uint32_t epilog_msg_time;2074,84760
	char *epilog_slurmctld;epilog_slurmctld2076,84862
	char *ext_sensors_type;ext_sensors_type2077,84933
	uint16_t ext_sensors_freq;2078,84993
	void *ext_sensors_conf;ext_sensors_conf2079,85061
	uint16_t fast_schedule;2080,85120
	uint32_t first_job_id;2082,85238
	uint16_t fs_dampening_factor;2083,85307
	uint16_t get_env_timeout;2084,85375
	char * gres_plugins;2085,85447
	uint16_t group_info;2086,85508
	uint32_t hash_val;2087,85561
	uint16_t health_check_interval;2088,85626
	uint16_t health_check_node_state;2089,85692
	char * health_check_program;2092,85831
	uint16_t inactive_limit;2093,85900
	char *job_acct_gather_freq;job_acct_gather_freq2095,86010
	char *job_acct_gather_type;job_acct_gather_type2097,86101
	char *job_acct_gather_params;job_acct_gather_params2098,86163
	char *job_ckpt_dir;job_ckpt_dir2099,86233
	char *job_comp_host;job_comp_host2100,86299
	char *job_comp_loc;job_comp_loc2101,86355
	char *job_comp_pass;job_comp_pass2102,86414
	uint32_t job_comp_port;2103,86474
	char *job_comp_type;job_comp_type2104,86533
	char *job_comp_user;job_comp_user2105,86589
	char *job_container_plugin;job_container_plugin2106,86645
	char *job_credential_private_key;job_credential_private_key2107,86706
	char *job_credential_public_certificate;job_credential_public_certificate2108,86767
	uint16_t job_file_append;2109,86840
	uint16_t job_requeue;2110,86907
	char *job_submit_plugins;job_submit_plugins2111,86977
	uint16_t keep_alive_time;2112,87045
	uint16_t kill_on_bad_exit;2113,87116
	uint16_t kill_wait;2116,87265
	char *launch_type;launch_type2118,87353
	char *licenses;licenses2119,87408
	char *licenses_used;licenses_used2120,87467
	uint16_t log_fmt;2121,87525
	char *mail_prog;mail_prog2122,87582
	uint32_t max_array_sz;2123,87631
	uint32_t max_job_cnt;2124,87684
	uint32_t max_job_id;2125,87743
	uint32_t max_mem_per_cpu;2126,87812
	uint32_t max_step_cnt;2127,87881
	uint16_t max_tasks_per_node;2128,87943
	uint16_t min_job_age;2129,88002
	char *mpi_default;mpi_default2131,88104
	char *mpi_params;mpi_params2132,88160
	uint16_t msg_timeout;2133,88200
	uint32_t next_job_id;2134,88245
	char *node_prefix;node_prefix2135,88312
	uint16_t over_time_limit;2137,88425
	char *plugindir;plugindir2139,88546
	char *plugstack;plugstack2140,88590
	uint16_t preempt_mode;2141,88658
	char *preempt_type;preempt_type2142,88724
	uint32_t priority_decay_hl;2143,88783
	uint32_t priority_calc_period;2145,88865
	uint16_t priority_favor_small;2147,88953
	uint16_t priority_flags;2148,89019
	uint32_t priority_max_age;2150,89129
	uint16_t priority_reset_period;2152,89232
	char *priority_type;priority_type2154,89321
	uint32_t priority_weight_age;2155,89373
	uint32_t priority_weight_fs;2156,89432
	uint32_t priority_weight_js;2157,89496
	uint32_t priority_weight_part;2158,89559
	uint32_t priority_weight_qos;2159,89625
	uint16_t private_data;2160,89684
	char *proctrack_type;proctrack_type2162,89770
	char *prolog;prolog2163,89828
	char *prolog_slurmctld;prolog_slurmctld2164,89887
	uint16_t propagate_prio_process;2165,89958
	uint16_t prolog_flags;2167,90053
	char *propagate_rlimits;propagate_rlimits2169,90147
	char *propagate_rlimits_except;propagate_rlimits_except2170,90219
	char *reboot_program;reboot_program2171,90292
	uint16_t reconfig_flags;2172,90348
	char *resume_program;resume_program2173,90394
	uint16_t resume_rate;2174,90456
	uint16_t resume_timeout;2175,90522
	char *resv_epilog;resv_epilog2177,90618
	uint16_t resv_over_run;2178,90688
	char *resv_prolog;resv_prolog2180,90777
	uint16_t ret2service;2181,90847
	char *salloc_default_command;salloc_default_command2183,90929
	char *sched_logfile;sched_logfile2184,90989
	uint16_t sched_log_level;2185,91059
	char *sched_params;sched_params2186,91133
	uint16_t sched_time_slice;2188,91231
	char *schedtype;schedtype2189,91297
	uint16_t schedport;2190,91346
	uint16_t schedrootfltr;2191,91403
	char *select_type;select_type2193,91513
	void *select_conf_key_pairs;select_conf_key_pairs2194,91568
	uint16_t select_type_param;2196,91677
	char *slurm_conf;slurm_conf2198,91768
	uint32_t slurm_user_id;2199,91823
	char *slurm_user_name;slurm_user_name2200,91877
	uint32_t slurmd_user_id;2201,91935
	char *slurmd_user_name;slurmd_user_name2202,91990
	uint16_t slurmctld_debug;2203,92046
	char *slurmctld_logfile;slurmctld_logfile2204,92103
	char *slurmctld_pidfile;slurmctld_pidfile2205,92173
	char *slurmctld_plugstack;slurmctld_plugstack2206,92243
	uint32_t slurmctld_port;2207,92302
	uint16_t slurmctld_port_count;2208,92376
	uint16_t slurmctld_timeout;2209,92445
	uint16_t slurmd_debug;2211,92564
	char *slurmd_logfile;slurmd_logfile2212,92615
	char *slurmd_pidfile;slurmd_pidfile2213,92680
	char *slurmd_plugstack;slurmd_plugstack2214,92749
	uint32_t slurmd_port;2215,92803
	char *slurmd_spooldir;slurmd_spooldir2216,92870
	uint16_t slurmd_timeout;2217,92938
	char *srun_epilog;srun_epilog2219,93041
	char *srun_prolog;srun_prolog2220,93092
	char *state_save_location;state_save_location2221,93143
	char *suspend_exc_nodes;suspend_exc_nodes2223,93228
	char *suspend_exc_parts;suspend_exc_parts2224,93290
	char *suspend_program;suspend_program2225,93357
	uint16_t suspend_rate;2226,93422
	uint32_t suspend_time;2227,93491
	uint16_t suspend_timeout;2228,93568
	char *switch_type;switch_type2230,93667
	char *task_epilog;task_epilog2231,93721
	char *task_plugin;task_plugin2232,93778
	uint16_t task_plugin_param;2233,93823
	char *task_prolog;task_prolog2234,93873
	char *tmp_fs;tmp_fs2235,93930
	char *topology_plugin;topology_plugin2236,93986
	uint16_t track_wckey;2237,94040
	uint16_t tree_width;2238,94105
	char *unkillable_program;unkillable_program2239,94171
	uint16_t unkillable_timeout;2241,94287
	uint16_t use_pam;2244,94456
	char *version;version2245,94508
	uint16_t vsize_factor;2246,94552
	uint16_t wait_time;2247,94615
	uint16_t z_16;2248,94666
	uint32_t z_32;2249,94713
	char *z_char;z_char2250,94760
} slurm_ctl_conf_t;2251,94806
typedef struct slurmd_status_msg 2253,94827
	time_t booted;2254,94862
	time_t last_slurmctld_msg;2255,94910
	uint16_t slurmd_debug;2256,94975
	uint16_t actual_cpus;2257,95020
	uint16_t actual_boards;2258,95081
	uint16_t actual_sockets;2259,95145
	uint16_t actual_cores;2260,95208
	uint16_t actual_threads;2261,95270
	uint32_t actual_real_mem;2262,95331
	uint32_t actual_tmp_disk;2263,95389
	uint32_t pid;2264,95451
	char *hostname;hostname2265,95485
	char *slurmd_logfile;slurmd_logfile2266,95525
	char *step_list;step_list2267,95580
	char *version;version2268,95630
} slurmd_status_t;2269,95670
typedef struct submit_response_msg 2271,95690
	uint32_t job_id;2272,95727
	uint32_t step_id;2273,95758
	uint32_t error_code;2274,95791
} submit_response_msg_t;2275,95850
typedef struct slurm_update_node_msg 2279,96001
	char *features;features2280,96040
	char *gres;gres2281,96085
	char *node_addr;node_addr2282,96136
	char *node_hostname;node_hostname2283,96190
	char *node_names;node_names2284,96245
	uint16_t node_state;2285,96290
	char *reason;reason2286,96339
	uint32_t reason_uid;2287,96400
	uint32_t weight;2289,96495
} update_node_msg_t;2290,96539
typedef struct slurm_update_front_end_msg 2292,96561
	char *name;name2293,96605
	uint16_t node_state;2294,96665
	char *reason;reason2295,96714
	uint32_t reason_uid;2296,96775
} update_front_end_msg_t;2298,96870
typedef struct partition_info update_part_msg_t;2300,96897
typedef struct job_sbcast_cred_msg 2302,96947
	uint32_t      job_id;2303,96984
	slurm_addr_t  *node_addr;node_addr2304,97030
	uint32_t      node_cnt;2305,97081
	char         *node_list;node_list2306,97128
	sbcast_cred_t *sbcast_cred;sbcast_cred2307,97183
} job_sbcast_cred_msg_t;2308,97240
typedef struct slurm_step_ctx_struct slurm_step_ctx_t;2311,97320
#define STAT_COMMAND_RESET	2313,97376
#define STAT_COMMAND_GET	2314,97410
typedef struct stats_info_request_msg 2315,97442
	uint16_t command_id;2316,97482
} stats_info_request_msg_t;2317,97504
typedef struct stats_info_response_msg 2319,97533
	uint32_t parts_packed;2320,97574
	time_t req_time;2321,97598
	time_t req_time_start;2322,97616
	uint32_t server_thread_count;2323,97640
	uint32_t agent_queue_size;2324,97671
	uint32_t schedule_cycle_max;2326,97700
	uint32_t schedule_cycle_last;2327,97730
	uint32_t schedule_cycle_sum;2328,97761
	uint32_t schedule_cycle_counter;2329,97791
	uint32_t schedule_cycle_depth;2330,97825
	uint32_t schedule_queue_len;2331,97857
	uint32_t jobs_submitted;2333,97888
	uint32_t jobs_started;2334,97914
	uint32_t jobs_completed;2335,97938
	uint32_t jobs_canceled;2336,97964
	uint32_t jobs_failed;2337,97989
	uint32_t bf_backfilled_jobs;2339,98013
	uint32_t bf_last_backfilled_jobs;2340,98043
	uint32_t bf_cycle_counter;2341,98078
	uint32_t bf_cycle_sum;2342,98106
	uint32_t bf_cycle_last;2343,98130
	uint32_t bf_cycle_max;2344,98155
	uint32_t bf_last_depth;2345,98179
	uint32_t bf_last_depth_try;2346,98204
	uint32_t bf_depth_sum;2347,98233
	uint32_t bf_depth_try_sum;2348,98257
	uint32_t bf_queue_len;2349,98285
	uint32_t bf_queue_len_sum;2350,98309
	time_t   bf_when_last_cycle;2351,98337
	uint32_t bf_active;2352,98367
} stats_info_response_msg_t;2353,98388
#define TRIGGER_FLAG_PERM	2355,98418
#define TRIGGER_RES_TYPE_JOB 2357,98453
#define TRIGGER_RES_TYPE_NODE 2358,98500
#define TRIGGER_RES_TYPE_SLURMCTLD 2359,98547
#define TRIGGER_RES_TYPE_SLURMDBD 2360,98594
#define TRIGGER_RES_TYPE_DATABASE 2361,98641
#define TRIGGER_RES_TYPE_FRONT_END 2362,98688
#define TRIGGER_TYPE_UP 2364,98736
#define TRIGGER_TYPE_DOWN 2365,98787
#define TRIGGER_TYPE_FAIL 2366,98838
#define TRIGGER_TYPE_TIME 2367,98889
#define TRIGGER_TYPE_FINI 2368,98940
#define TRIGGER_TYPE_RECONFIG 2369,98991
#define TRIGGER_TYPE_BLOCK_ERR 2370,99042
#define TRIGGER_TYPE_IDLE 2371,99093
#define TRIGGER_TYPE_DRAINED 2372,99144
#define TRIGGER_TYPE_PRI_CTLD_FAIL 2373,99195
#define TRIGGER_TYPE_PRI_CTLD_RES_OP 2374,99246
#define TRIGGER_TYPE_PRI_CTLD_RES_CTRL 2375,99297
#define TRIGGER_TYPE_PRI_CTLD_ACCT_FULL 2376,99348
#define TRIGGER_TYPE_BU_CTLD_FAIL 2377,99399
#define TRIGGER_TYPE_BU_CTLD_RES_OP 2378,99450
#define TRIGGER_TYPE_BU_CTLD_AS_CTRL 2379,99501
#define TRIGGER_TYPE_PRI_DBD_FAIL 2380,99552
#define TRIGGER_TYPE_PRI_DBD_RES_OP 2381,99603
#define TRIGGER_TYPE_PRI_DB_FAIL 2382,99654
#define TRIGGER_TYPE_PRI_DB_RES_OP 2383,99705
typedef struct trigger_info 2386,99758
	uint16_t flags;2387,99788
	uint32_t trig_id;2388,99827
	uint16_t res_type;2389,99863
	char *   res_id;2390,99908
	uint32_t trig_type;2391,99944
	uint16_t offset;2392,99986
	uint32_t user_id;2393,100046
	char *   program;2394,100095
} trigger_info_t;2395,100139
typedef struct trigger_info_msg 2397,100158
	uint32_t record_count;2398,100192
	trigger_info_t *trigger_array;trigger_array2399,100241
} trigger_info_msg_t;2400,100299
typedef struct slurm_license_info 2405,100361
	char *name;name2406,100397
	uint32_t total;2407,100438
	uint32_t in_use;2408,100501
	uint32_t available;2409,100554
	uint8_t remote;2410,100610
} slurm_license_info_t;2412,100704
typedef struct license_info_msg 2416,100793
	time_t last_update;2417,100827
	uint32_t num_lic;2418,100848
	slurm_license_info_t *lic_array;lic_array2419,100867
} license_info_msg_t;2420,100901
#define KILL_JOB_BATCH	2602,108365
#define KILL_JOB_ARRAY	2603,108425

/home/david/slurm/1403/slurm/slurm/spank.h,2682
#define SPANK_H39,2198
#undef BEGIN_C_DECLS41,2215
#undef END_C_DECLS42,2236
#  define BEGIN_C_DECLS 44,2274
#  define END_C_DECLS 45,2319
#  define BEGIN_C_DECLS 47,2379
#  define END_C_DECLS 48,2423
typedef struct spank_handle * spank_t;53,2556
typedef int (spank_f)57,2646
enum spank_item 142,5428
    S_JOB_UID,143,5446
    S_JOB_GID,144,5526
    S_JOB_ID,145,5606
    S_JOB_STEPID,146,5686
    S_JOB_NNODES,147,5766
    S_JOB_NODEID,148,5846
    S_JOB_LOCAL_TASK_COUNT,149,5926
    S_JOB_TOTAL_TASK_COUNT,150,6006
    S_JOB_NCPUS,151,6086
    S_JOB_ARGV,152,6166
    S_JOB_ENV,153,6246
    S_TASK_ID,154,6326
    S_TASK_GLOBAL_ID,155,6406
    S_TASK_EXIT_STATUS,156,6486
    S_TASK_PID,157,6566
    S_JOB_PID_TO_GLOBAL_ID,158,6646
    S_JOB_PID_TO_LOCAL_ID,159,6726
    S_JOB_LOCAL_TO_GLOBAL_ID,160,6806
    S_JOB_GLOBAL_TO_LOCAL_ID,161,6886
    S_JOB_SUPPLEMENTARY_GIDS,162,6966
    S_SLURM_VERSION,163,7046
    S_SLURM_VERSION_MAJOR,164,7126
    S_SLURM_VERSION_MINOR,165,7206
    S_SLURM_VERSION_MICRO,166,7286
    S_STEP_CPUS_PER_TASK,167,7366
    S_JOB_ALLOC_CORES,169,7522
    S_JOB_ALLOC_MEM,170,7602
    S_STEP_ALLOC_CORES,171,7682
    S_STEP_ALLOC_MEM,172,7762
    S_SLURM_RESTART_COUNT 173,7842
typedef enum spank_item spank_item_t;176,7926
enum spank_err 180,7992
    ESPANK_SUCCESS 181,8009
    ESPANK_ERROR 182,8089
    ESPANK_BAD_ARG 183,8169
    ESPANK_NOT_TASK 184,8249
    ESPANK_ENV_EXISTS 185,8329
    ESPANK_ENV_NOEXIST 186,8409
    ESPANK_NOSPACE 187,8489
    ESPANK_NOT_REMOTE 188,8569
    ESPANK_NOEXIST 189,8649
    ESPANK_NOT_EXECD 190,8729
    ESPANK_NOT_AVAIL 191,8809
    ESPANK_NOT_LOCAL 192,8889
typedef enum spank_err spank_err_t;195,8973
enum spank_context 200,9042
    S_CTX_ERROR,201,9063
    S_CTX_LOCAL,202,9143
    S_CTX_REMOTE,203,9223
    S_CTX_ALLOCATOR,204,9303
    S_CTX_SLURMD,205,9383
    S_CTX_JOB_SCRIPT 206,9463
#define HAVE_S_CTX_SLURMD 209,9547
#define HAVE_S_CTX_JOB_SCRIPT 210,9627
typedef enum spank_context spank_context_t;212,9708
typedef int (*spank_opt_cb_f)spank_opt_cb_f225,10113
struct spank_option 227,10187
    char *         name;228,10209
    char *         arginfo;229,10288
    char *         usage;230,10367
    int            has_arg;231,10446
    int            val;232,10525
    spank_opt_cb_f cb;233,10604
#define SPANK_OPTIONS_TABLE_END 247,11082
#define SPANK_OPTION_MAXLEN 252,11204
extern void slurm_info 415,17285
extern void slurm_error 417,17377
extern void slurm_verbose 419,17470
extern void slurm_debug 421,17565
extern void slurm_debug2 423,17658
extern void slurm_debug3 425,17752
#define SPANK_PLUGIN(434,17948
